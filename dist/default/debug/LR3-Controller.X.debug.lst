

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jun 13 23:35:16 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1619
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    73                           	dabs	1,0x7E,2
    74  0000                     
    75                           ; Version 2.40
    76                           ; Generated 17/11/2021 GMT
    77                           ; 
    78                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC16F1619 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  008C                     	;# 
   145  008D                     	;# 
   146  008E                     	;# 
   147  0090                     	;# 
   148  0091                     	;# 
   149  0092                     	;# 
   150  0093                     	;# 
   151  0094                     	;# 
   152  0095                     	;# 
   153  0096                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009A                     	;# 
   157  009B                     	;# 
   158  009B                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  0111                     	;# 
   167  0112                     	;# 
   168  0113                     	;# 
   169  0114                     	;# 
   170  0115                     	;# 
   171  0116                     	;# 
   172  0117                     	;# 
   173  0118                     	;# 
   174  0119                     	;# 
   175  011C                     	;# 
   176  018C                     	;# 
   177  018D                     	;# 
   178  018E                     	;# 
   179  0191                     	;# 
   180  0191                     	;# 
   181  0192                     	;# 
   182  0193                     	;# 
   183  0193                     	;# 
   184  0194                     	;# 
   185  0195                     	;# 
   186  0196                     	;# 
   187  0197                     	;# 
   188  0199                     	;# 
   189  0199                     	;# 
   190  0199                     	;# 
   191  019A                     	;# 
   192  019A                     	;# 
   193  019A                     	;# 
   194  019B                     	;# 
   195  019B                     	;# 
   196  019B                     	;# 
   197  019B                     	;# 
   198  019B                     	;# 
   199  019C                     	;# 
   200  019C                     	;# 
   201  019C                     	;# 
   202  019D                     	;# 
   203  019D                     	;# 
   204  019D                     	;# 
   205  019E                     	;# 
   206  019E                     	;# 
   207  019E                     	;# 
   208  019F                     	;# 
   209  019F                     	;# 
   210  019F                     	;# 
   211  019F                     	;# 
   212  019F                     	;# 
   213  020C                     	;# 
   214  020D                     	;# 
   215  020E                     	;# 
   216  0211                     	;# 
   217  0211                     	;# 
   218  0212                     	;# 
   219  0212                     	;# 
   220  0213                     	;# 
   221  0213                     	;# 
   222  0214                     	;# 
   223  0214                     	;# 
   224  0215                     	;# 
   225  0215                     	;# 
   226  0215                     	;# 
   227  0215                     	;# 
   228  0216                     	;# 
   229  0216                     	;# 
   230  0217                     	;# 
   231  0217                     	;# 
   232  028C                     	;# 
   233  028D                     	;# 
   234  028E                     	;# 
   235  0291                     	;# 
   236  0291                     	;# 
   237  0292                     	;# 
   238  0293                     	;# 
   239  0294                     	;# 
   240  0298                     	;# 
   241  0298                     	;# 
   242  0299                     	;# 
   243  029A                     	;# 
   244  029B                     	;# 
   245  029E                     	;# 
   246  030C                     	;# 
   247  030D                     	;# 
   248  030E                     	;# 
   249  038C                     	;# 
   250  038D                     	;# 
   251  038E                     	;# 
   252  0391                     	;# 
   253  0392                     	;# 
   254  0393                     	;# 
   255  0394                     	;# 
   256  0395                     	;# 
   257  0396                     	;# 
   258  0397                     	;# 
   259  0398                     	;# 
   260  0399                     	;# 
   261  040E                     	;# 
   262  0413                     	;# 
   263  0413                     	;# 
   264  0414                     	;# 
   265  0414                     	;# 
   266  0415                     	;# 
   267  0416                     	;# 
   268  0417                     	;# 
   269  0418                     	;# 
   270  041A                     	;# 
   271  041A                     	;# 
   272  041B                     	;# 
   273  041B                     	;# 
   274  041C                     	;# 
   275  041D                     	;# 
   276  041E                     	;# 
   277  041F                     	;# 
   278  0493                     	;# 
   279  0494                     	;# 
   280  0495                     	;# 
   281  0496                     	;# 
   282  049A                     	;# 
   283  049B                     	;# 
   284  049C                     	;# 
   285  049D                     	;# 
   286  058C                     	;# 
   287  058C                     	;# 
   288  058D                     	;# 
   289  058E                     	;# 
   290  058E                     	;# 
   291  058F                     	;# 
   292  0590                     	;# 
   293  0590                     	;# 
   294  0591                     	;# 
   295  0592                     	;# 
   296  0592                     	;# 
   297  0593                     	;# 
   298  0594                     	;# 
   299  0594                     	;# 
   300  0595                     	;# 
   301  0596                     	;# 
   302  0596                     	;# 
   303  0597                     	;# 
   304  0598                     	;# 
   305  0599                     	;# 
   306  059A                     	;# 
   307  059B                     	;# 
   308  059B                     	;# 
   309  059C                     	;# 
   310  059D                     	;# 
   311  060C                     	;# 
   312  060C                     	;# 
   313  060D                     	;# 
   314  060E                     	;# 
   315  060F                     	;# 
   316  060F                     	;# 
   317  0610                     	;# 
   318  0611                     	;# 
   319  0612                     	;# 
   320  0613                     	;# 
   321  0614                     	;# 
   322  0617                     	;# 
   323  0617                     	;# 
   324  0618                     	;# 
   325  0619                     	;# 
   326  061A                     	;# 
   327  061A                     	;# 
   328  061B                     	;# 
   329  061C                     	;# 
   330  0691                     	;# 
   331  0692                     	;# 
   332  0693                     	;# 
   333  0694                     	;# 
   334  0695                     	;# 
   335  0696                     	;# 
   336  0697                     	;# 
   337  0699                     	;# 
   338  069A                     	;# 
   339  0711                     	;# 
   340  0712                     	;# 
   341  0713                     	;# 
   342  0714                     	;# 
   343  0715                     	;# 
   344  0718                     	;# 
   345  0718                     	;# 
   346  0719                     	;# 
   347  071A                     	;# 
   348  071A                     	;# 
   349  071B                     	;# 
   350  071C                     	;# 
   351  071D                     	;# 
   352  0791                     	;# 
   353  0791                     	;# 
   354  0792                     	;# 
   355  0793                     	;# 
   356  0793                     	;# 
   357  0794                     	;# 
   358  0795                     	;# 
   359  0795                     	;# 
   360  0796                     	;# 
   361  0797                     	;# 
   362  0797                     	;# 
   363  0798                     	;# 
   364  0799                     	;# 
   365  079A                     	;# 
   366  080C                     	;# 
   367  080C                     	;# 
   368  080D                     	;# 
   369  080E                     	;# 
   370  080E                     	;# 
   371  080F                     	;# 
   372  0810                     	;# 
   373  0810                     	;# 
   374  0811                     	;# 
   375  0812                     	;# 
   376  0812                     	;# 
   377  0813                     	;# 
   378  0814                     	;# 
   379  0815                     	;# 
   380  0816                     	;# 
   381  0817                     	;# 
   382  0818                     	;# 
   383  0819                     	;# 
   384  081A                     	;# 
   385  081A                     	;# 
   386  081B                     	;# 
   387  081C                     	;# 
   388  081C                     	;# 
   389  081D                     	;# 
   390  088C                     	;# 
   391  088D                     	;# 
   392  088E                     	;# 
   393  088F                     	;# 
   394  088F                     	;# 
   395  0890                     	;# 
   396  0891                     	;# 
   397  0892                     	;# 
   398  0893                     	;# 
   399  0893                     	;# 
   400  0894                     	;# 
   401  0895                     	;# 
   402  0896                     	;# 
   403  0897                     	;# 
   404  0897                     	;# 
   405  0898                     	;# 
   406  0899                     	;# 
   407  0D8C                     	;# 
   408  0D8C                     	;# 
   409  0D8D                     	;# 
   410  0D8E                     	;# 
   411  0D8F                     	;# 
   412  0D8F                     	;# 
   413  0D90                     	;# 
   414  0D91                     	;# 
   415  0D92                     	;# 
   416  0D92                     	;# 
   417  0D93                     	;# 
   418  0D94                     	;# 
   419  0D95                     	;# 
   420  0D95                     	;# 
   421  0D96                     	;# 
   422  0D97                     	;# 
   423  0D98                     	;# 
   424  0D99                     	;# 
   425  0D9A                     	;# 
   426  0D9B                     	;# 
   427  0D9C                     	;# 
   428  0D9D                     	;# 
   429  0D9E                     	;# 
   430  0D9E                     	;# 
   431  0D9F                     	;# 
   432  0DA0                     	;# 
   433  0DA1                     	;# 
   434  0DA1                     	;# 
   435  0DA2                     	;# 
   436  0DA3                     	;# 
   437  0DA4                     	;# 
   438  0DA4                     	;# 
   439  0DA5                     	;# 
   440  0DA6                     	;# 
   441  0DA7                     	;# 
   442  0DA7                     	;# 
   443  0DA8                     	;# 
   444  0DA9                     	;# 
   445  0DAA                     	;# 
   446  0DAB                     	;# 
   447  0DAC                     	;# 
   448  0DAD                     	;# 
   449  0DAE                     	;# 
   450  0DAF                     	;# 
   451  0E0F                     	;# 
   452  0E10                     	;# 
   453  0E11                     	;# 
   454  0E12                     	;# 
   455  0E13                     	;# 
   456  0E14                     	;# 
   457  0E15                     	;# 
   458  0E16                     	;# 
   459  0E17                     	;# 
   460  0E18                     	;# 
   461  0E19                     	;# 
   462  0E1A                     	;# 
   463  0E1B                     	;# 
   464  0E1C                     	;# 
   465  0E1D                     	;# 
   466  0E1E                     	;# 
   467  0E1F                     	;# 
   468  0E20                     	;# 
   469  0E21                     	;# 
   470  0E22                     	;# 
   471  0E23                     	;# 
   472  0E24                     	;# 
   473  0E25                     	;# 
   474  0E26                     	;# 
   475  0E27                     	;# 
   476  0E28                     	;# 
   477  0E29                     	;# 
   478  0E2A                     	;# 
   479  0E2B                     	;# 
   480  0E2C                     	;# 
   481  0E2D                     	;# 
   482  0E2E                     	;# 
   483  0E90                     	;# 
   484  0E91                     	;# 
   485  0E92                     	;# 
   486  0E94                     	;# 
   487  0E95                     	;# 
   488  0E9C                     	;# 
   489  0E9D                     	;# 
   490  0E9E                     	;# 
   491  0E9F                     	;# 
   492  0EA0                     	;# 
   493  0EA1                     	;# 
   494  0EA2                     	;# 
   495  0EA3                     	;# 
   496  0EA4                     	;# 
   497  0EA5                     	;# 
   498  0EA6                     	;# 
   499  0EA7                     	;# 
   500  0F0F                     	;# 
   501  0F10                     	;# 
   502  0F11                     	;# 
   503  0F12                     	;# 
   504  0F13                     	;# 
   505  0F14                     	;# 
   506  0F15                     	;# 
   507  0F16                     	;# 
   508  0F17                     	;# 
   509  0F18                     	;# 
   510  0F19                     	;# 
   511  0F1A                     	;# 
   512  0F1B                     	;# 
   513  0F1C                     	;# 
   514  0F1D                     	;# 
   515  0F1E                     	;# 
   516  0F1F                     	;# 
   517  0F20                     	;# 
   518  0F21                     	;# 
   519  0F22                     	;# 
   520  0F23                     	;# 
   521  0F24                     	;# 
   522  0F25                     	;# 
   523  0F26                     	;# 
   524  0F27                     	;# 
   525  0F28                     	;# 
   526  0F29                     	;# 
   527  0F2A                     	;# 
   528  0F2B                     	;# 
   529  0F2C                     	;# 
   530  0F2D                     	;# 
   531  0F2E                     	;# 
   532  0F2F                     	;# 
   533  0F30                     	;# 
   534  0F31                     	;# 
   535  0F32                     	;# 
   536  0F33                     	;# 
   537  0F34                     	;# 
   538  0F35                     	;# 
   539  0F36                     	;# 
   540  0F37                     	;# 
   541  0FE4                     	;# 
   542  0FE5                     	;# 
   543  0FE6                     	;# 
   544  0FE7                     	;# 
   545  0FE8                     	;# 
   546  0FE9                     	;# 
   547  0FEA                     	;# 
   548  0FEB                     	;# 
   549  0FED                     	;# 
   550  0FEE                     	;# 
   551  0FEF                     	;# 
   552  0000                     	;# 
   553  0001                     	;# 
   554  0002                     	;# 
   555  0003                     	;# 
   556  0004                     	;# 
   557  0005                     	;# 
   558  0006                     	;# 
   559  0007                     	;# 
   560  0008                     	;# 
   561  0009                     	;# 
   562  000A                     	;# 
   563  000B                     	;# 
   564  000C                     	;# 
   565  000D                     	;# 
   566  000E                     	;# 
   567  0010                     	;# 
   568  0011                     	;# 
   569  0012                     	;# 
   570  0013                     	;# 
   571  0014                     	;# 
   572  0015                     	;# 
   573  0016                     	;# 
   574  0016                     	;# 
   575  0017                     	;# 
   576  0018                     	;# 
   577  0019                     	;# 
   578  001A                     	;# 
   579  001A                     	;# 
   580  001B                     	;# 
   581  001B                     	;# 
   582  001C                     	;# 
   583  001D                     	;# 
   584  001E                     	;# 
   585  001F                     	;# 
   586  008C                     	;# 
   587  008D                     	;# 
   588  008E                     	;# 
   589  0090                     	;# 
   590  0091                     	;# 
   591  0092                     	;# 
   592  0093                     	;# 
   593  0094                     	;# 
   594  0095                     	;# 
   595  0096                     	;# 
   596  0098                     	;# 
   597  0099                     	;# 
   598  009A                     	;# 
   599  009B                     	;# 
   600  009B                     	;# 
   601  009C                     	;# 
   602  009D                     	;# 
   603  009E                     	;# 
   604  009F                     	;# 
   605  010C                     	;# 
   606  010D                     	;# 
   607  010E                     	;# 
   608  0111                     	;# 
   609  0112                     	;# 
   610  0113                     	;# 
   611  0114                     	;# 
   612  0115                     	;# 
   613  0116                     	;# 
   614  0117                     	;# 
   615  0118                     	;# 
   616  0119                     	;# 
   617  011C                     	;# 
   618  018C                     	;# 
   619  018D                     	;# 
   620  018E                     	;# 
   621  0191                     	;# 
   622  0191                     	;# 
   623  0192                     	;# 
   624  0193                     	;# 
   625  0193                     	;# 
   626  0194                     	;# 
   627  0195                     	;# 
   628  0196                     	;# 
   629  0197                     	;# 
   630  0199                     	;# 
   631  0199                     	;# 
   632  0199                     	;# 
   633  019A                     	;# 
   634  019A                     	;# 
   635  019A                     	;# 
   636  019B                     	;# 
   637  019B                     	;# 
   638  019B                     	;# 
   639  019B                     	;# 
   640  019B                     	;# 
   641  019C                     	;# 
   642  019C                     	;# 
   643  019C                     	;# 
   644  019D                     	;# 
   645  019D                     	;# 
   646  019D                     	;# 
   647  019E                     	;# 
   648  019E                     	;# 
   649  019E                     	;# 
   650  019F                     	;# 
   651  019F                     	;# 
   652  019F                     	;# 
   653  019F                     	;# 
   654  019F                     	;# 
   655  020C                     	;# 
   656  020D                     	;# 
   657  020E                     	;# 
   658  0211                     	;# 
   659  0211                     	;# 
   660  0212                     	;# 
   661  0212                     	;# 
   662  0213                     	;# 
   663  0213                     	;# 
   664  0214                     	;# 
   665  0214                     	;# 
   666  0215                     	;# 
   667  0215                     	;# 
   668  0215                     	;# 
   669  0215                     	;# 
   670  0216                     	;# 
   671  0216                     	;# 
   672  0217                     	;# 
   673  0217                     	;# 
   674  028C                     	;# 
   675  028D                     	;# 
   676  028E                     	;# 
   677  0291                     	;# 
   678  0291                     	;# 
   679  0292                     	;# 
   680  0293                     	;# 
   681  0294                     	;# 
   682  0298                     	;# 
   683  0298                     	;# 
   684  0299                     	;# 
   685  029A                     	;# 
   686  029B                     	;# 
   687  029E                     	;# 
   688  030C                     	;# 
   689  030D                     	;# 
   690  030E                     	;# 
   691  038C                     	;# 
   692  038D                     	;# 
   693  038E                     	;# 
   694  0391                     	;# 
   695  0392                     	;# 
   696  0393                     	;# 
   697  0394                     	;# 
   698  0395                     	;# 
   699  0396                     	;# 
   700  0397                     	;# 
   701  0398                     	;# 
   702  0399                     	;# 
   703  040E                     	;# 
   704  0413                     	;# 
   705  0413                     	;# 
   706  0414                     	;# 
   707  0414                     	;# 
   708  0415                     	;# 
   709  0416                     	;# 
   710  0417                     	;# 
   711  0418                     	;# 
   712  041A                     	;# 
   713  041A                     	;# 
   714  041B                     	;# 
   715  041B                     	;# 
   716  041C                     	;# 
   717  041D                     	;# 
   718  041E                     	;# 
   719  041F                     	;# 
   720  0493                     	;# 
   721  0494                     	;# 
   722  0495                     	;# 
   723  0496                     	;# 
   724  049A                     	;# 
   725  049B                     	;# 
   726  049C                     	;# 
   727  049D                     	;# 
   728  058C                     	;# 
   729  058C                     	;# 
   730  058D                     	;# 
   731  058E                     	;# 
   732  058E                     	;# 
   733  058F                     	;# 
   734  0590                     	;# 
   735  0590                     	;# 
   736  0591                     	;# 
   737  0592                     	;# 
   738  0592                     	;# 
   739  0593                     	;# 
   740  0594                     	;# 
   741  0594                     	;# 
   742  0595                     	;# 
   743  0596                     	;# 
   744  0596                     	;# 
   745  0597                     	;# 
   746  0598                     	;# 
   747  0599                     	;# 
   748  059A                     	;# 
   749  059B                     	;# 
   750  059B                     	;# 
   751  059C                     	;# 
   752  059D                     	;# 
   753  060C                     	;# 
   754  060C                     	;# 
   755  060D                     	;# 
   756  060E                     	;# 
   757  060F                     	;# 
   758  060F                     	;# 
   759  0610                     	;# 
   760  0611                     	;# 
   761  0612                     	;# 
   762  0613                     	;# 
   763  0614                     	;# 
   764  0617                     	;# 
   765  0617                     	;# 
   766  0618                     	;# 
   767  0619                     	;# 
   768  061A                     	;# 
   769  061A                     	;# 
   770  061B                     	;# 
   771  061C                     	;# 
   772  0691                     	;# 
   773  0692                     	;# 
   774  0693                     	;# 
   775  0694                     	;# 
   776  0695                     	;# 
   777  0696                     	;# 
   778  0697                     	;# 
   779  0699                     	;# 
   780  069A                     	;# 
   781  0711                     	;# 
   782  0712                     	;# 
   783  0713                     	;# 
   784  0714                     	;# 
   785  0715                     	;# 
   786  0718                     	;# 
   787  0718                     	;# 
   788  0719                     	;# 
   789  071A                     	;# 
   790  071A                     	;# 
   791  071B                     	;# 
   792  071C                     	;# 
   793  071D                     	;# 
   794  0791                     	;# 
   795  0791                     	;# 
   796  0792                     	;# 
   797  0793                     	;# 
   798  0793                     	;# 
   799  0794                     	;# 
   800  0795                     	;# 
   801  0795                     	;# 
   802  0796                     	;# 
   803  0797                     	;# 
   804  0797                     	;# 
   805  0798                     	;# 
   806  0799                     	;# 
   807  079A                     	;# 
   808  080C                     	;# 
   809  080C                     	;# 
   810  080D                     	;# 
   811  080E                     	;# 
   812  080E                     	;# 
   813  080F                     	;# 
   814  0810                     	;# 
   815  0810                     	;# 
   816  0811                     	;# 
   817  0812                     	;# 
   818  0812                     	;# 
   819  0813                     	;# 
   820  0814                     	;# 
   821  0815                     	;# 
   822  0816                     	;# 
   823  0817                     	;# 
   824  0818                     	;# 
   825  0819                     	;# 
   826  081A                     	;# 
   827  081A                     	;# 
   828  081B                     	;# 
   829  081C                     	;# 
   830  081C                     	;# 
   831  081D                     	;# 
   832  088C                     	;# 
   833  088D                     	;# 
   834  088E                     	;# 
   835  088F                     	;# 
   836  088F                     	;# 
   837  0890                     	;# 
   838  0891                     	;# 
   839  0892                     	;# 
   840  0893                     	;# 
   841  0893                     	;# 
   842  0894                     	;# 
   843  0895                     	;# 
   844  0896                     	;# 
   845  0897                     	;# 
   846  0897                     	;# 
   847  0898                     	;# 
   848  0899                     	;# 
   849  0D8C                     	;# 
   850  0D8C                     	;# 
   851  0D8D                     	;# 
   852  0D8E                     	;# 
   853  0D8F                     	;# 
   854  0D8F                     	;# 
   855  0D90                     	;# 
   856  0D91                     	;# 
   857  0D92                     	;# 
   858  0D92                     	;# 
   859  0D93                     	;# 
   860  0D94                     	;# 
   861  0D95                     	;# 
   862  0D95                     	;# 
   863  0D96                     	;# 
   864  0D97                     	;# 
   865  0D98                     	;# 
   866  0D99                     	;# 
   867  0D9A                     	;# 
   868  0D9B                     	;# 
   869  0D9C                     	;# 
   870  0D9D                     	;# 
   871  0D9E                     	;# 
   872  0D9E                     	;# 
   873  0D9F                     	;# 
   874  0DA0                     	;# 
   875  0DA1                     	;# 
   876  0DA1                     	;# 
   877  0DA2                     	;# 
   878  0DA3                     	;# 
   879  0DA4                     	;# 
   880  0DA4                     	;# 
   881  0DA5                     	;# 
   882  0DA6                     	;# 
   883  0DA7                     	;# 
   884  0DA7                     	;# 
   885  0DA8                     	;# 
   886  0DA9                     	;# 
   887  0DAA                     	;# 
   888  0DAB                     	;# 
   889  0DAC                     	;# 
   890  0DAD                     	;# 
   891  0DAE                     	;# 
   892  0DAF                     	;# 
   893  0E0F                     	;# 
   894  0E10                     	;# 
   895  0E11                     	;# 
   896  0E12                     	;# 
   897  0E13                     	;# 
   898  0E14                     	;# 
   899  0E15                     	;# 
   900  0E16                     	;# 
   901  0E17                     	;# 
   902  0E18                     	;# 
   903  0E19                     	;# 
   904  0E1A                     	;# 
   905  0E1B                     	;# 
   906  0E1C                     	;# 
   907  0E1D                     	;# 
   908  0E1E                     	;# 
   909  0E1F                     	;# 
   910  0E20                     	;# 
   911  0E21                     	;# 
   912  0E22                     	;# 
   913  0E23                     	;# 
   914  0E24                     	;# 
   915  0E25                     	;# 
   916  0E26                     	;# 
   917  0E27                     	;# 
   918  0E28                     	;# 
   919  0E29                     	;# 
   920  0E2A                     	;# 
   921  0E2B                     	;# 
   922  0E2C                     	;# 
   923  0E2D                     	;# 
   924  0E2E                     	;# 
   925  0E90                     	;# 
   926  0E91                     	;# 
   927  0E92                     	;# 
   928  0E94                     	;# 
   929  0E95                     	;# 
   930  0E9C                     	;# 
   931  0E9D                     	;# 
   932  0E9E                     	;# 
   933  0E9F                     	;# 
   934  0EA0                     	;# 
   935  0EA1                     	;# 
   936  0EA2                     	;# 
   937  0EA3                     	;# 
   938  0EA4                     	;# 
   939  0EA5                     	;# 
   940  0EA6                     	;# 
   941  0EA7                     	;# 
   942  0F0F                     	;# 
   943  0F10                     	;# 
   944  0F11                     	;# 
   945  0F12                     	;# 
   946  0F13                     	;# 
   947  0F14                     	;# 
   948  0F15                     	;# 
   949  0F16                     	;# 
   950  0F17                     	;# 
   951  0F18                     	;# 
   952  0F19                     	;# 
   953  0F1A                     	;# 
   954  0F1B                     	;# 
   955  0F1C                     	;# 
   956  0F1D                     	;# 
   957  0F1E                     	;# 
   958  0F1F                     	;# 
   959  0F20                     	;# 
   960  0F21                     	;# 
   961  0F22                     	;# 
   962  0F23                     	;# 
   963  0F24                     	;# 
   964  0F25                     	;# 
   965  0F26                     	;# 
   966  0F27                     	;# 
   967  0F28                     	;# 
   968  0F29                     	;# 
   969  0F2A                     	;# 
   970  0F2B                     	;# 
   971  0F2C                     	;# 
   972  0F2D                     	;# 
   973  0F2E                     	;# 
   974  0F2F                     	;# 
   975  0F30                     	;# 
   976  0F31                     	;# 
   977  0F32                     	;# 
   978  0F33                     	;# 
   979  0F34                     	;# 
   980  0F35                     	;# 
   981  0F36                     	;# 
   982  0F37                     	;# 
   983  0FE4                     	;# 
   984  0FE5                     	;# 
   985  0FE6                     	;# 
   986  0FE7                     	;# 
   987  0FE8                     	;# 
   988  0FE9                     	;# 
   989  0FEA                     	;# 
   990  0FEB                     	;# 
   991  0FED                     	;# 
   992  0FEE                     	;# 
   993  0FEF                     	;# 
   994  0000                     	;# 
   995  0001                     	;# 
   996  0002                     	;# 
   997  0003                     	;# 
   998  0004                     	;# 
   999  0005                     	;# 
  1000  0006                     	;# 
  1001  0007                     	;# 
  1002  0008                     	;# 
  1003  0009                     	;# 
  1004  000A                     	;# 
  1005  000B                     	;# 
  1006  000C                     	;# 
  1007  000D                     	;# 
  1008  000E                     	;# 
  1009  0010                     	;# 
  1010  0011                     	;# 
  1011  0012                     	;# 
  1012  0013                     	;# 
  1013  0014                     	;# 
  1014  0015                     	;# 
  1015  0016                     	;# 
  1016  0016                     	;# 
  1017  0017                     	;# 
  1018  0018                     	;# 
  1019  0019                     	;# 
  1020  001A                     	;# 
  1021  001A                     	;# 
  1022  001B                     	;# 
  1023  001B                     	;# 
  1024  001C                     	;# 
  1025  001D                     	;# 
  1026  001E                     	;# 
  1027  001F                     	;# 
  1028  008C                     	;# 
  1029  008D                     	;# 
  1030  008E                     	;# 
  1031  0090                     	;# 
  1032  0091                     	;# 
  1033  0092                     	;# 
  1034  0093                     	;# 
  1035  0094                     	;# 
  1036  0095                     	;# 
  1037  0096                     	;# 
  1038  0098                     	;# 
  1039  0099                     	;# 
  1040  009A                     	;# 
  1041  009B                     	;# 
  1042  009B                     	;# 
  1043  009C                     	;# 
  1044  009D                     	;# 
  1045  009E                     	;# 
  1046  009F                     	;# 
  1047  010C                     	;# 
  1048  010D                     	;# 
  1049  010E                     	;# 
  1050  0111                     	;# 
  1051  0112                     	;# 
  1052  0113                     	;# 
  1053  0114                     	;# 
  1054  0115                     	;# 
  1055  0116                     	;# 
  1056  0117                     	;# 
  1057  0118                     	;# 
  1058  0119                     	;# 
  1059  011C                     	;# 
  1060  018C                     	;# 
  1061  018D                     	;# 
  1062  018E                     	;# 
  1063  0191                     	;# 
  1064  0191                     	;# 
  1065  0192                     	;# 
  1066  0193                     	;# 
  1067  0193                     	;# 
  1068  0194                     	;# 
  1069  0195                     	;# 
  1070  0196                     	;# 
  1071  0197                     	;# 
  1072  0199                     	;# 
  1073  0199                     	;# 
  1074  0199                     	;# 
  1075  019A                     	;# 
  1076  019A                     	;# 
  1077  019A                     	;# 
  1078  019B                     	;# 
  1079  019B                     	;# 
  1080  019B                     	;# 
  1081  019B                     	;# 
  1082  019B                     	;# 
  1083  019C                     	;# 
  1084  019C                     	;# 
  1085  019C                     	;# 
  1086  019D                     	;# 
  1087  019D                     	;# 
  1088  019D                     	;# 
  1089  019E                     	;# 
  1090  019E                     	;# 
  1091  019E                     	;# 
  1092  019F                     	;# 
  1093  019F                     	;# 
  1094  019F                     	;# 
  1095  019F                     	;# 
  1096  019F                     	;# 
  1097  020C                     	;# 
  1098  020D                     	;# 
  1099  020E                     	;# 
  1100  0211                     	;# 
  1101  0211                     	;# 
  1102  0212                     	;# 
  1103  0212                     	;# 
  1104  0213                     	;# 
  1105  0213                     	;# 
  1106  0214                     	;# 
  1107  0214                     	;# 
  1108  0215                     	;# 
  1109  0215                     	;# 
  1110  0215                     	;# 
  1111  0215                     	;# 
  1112  0216                     	;# 
  1113  0216                     	;# 
  1114  0217                     	;# 
  1115  0217                     	;# 
  1116  028C                     	;# 
  1117  028D                     	;# 
  1118  028E                     	;# 
  1119  0291                     	;# 
  1120  0291                     	;# 
  1121  0292                     	;# 
  1122  0293                     	;# 
  1123  0294                     	;# 
  1124  0298                     	;# 
  1125  0298                     	;# 
  1126  0299                     	;# 
  1127  029A                     	;# 
  1128  029B                     	;# 
  1129  029E                     	;# 
  1130  030C                     	;# 
  1131  030D                     	;# 
  1132  030E                     	;# 
  1133  038C                     	;# 
  1134  038D                     	;# 
  1135  038E                     	;# 
  1136  0391                     	;# 
  1137  0392                     	;# 
  1138  0393                     	;# 
  1139  0394                     	;# 
  1140  0395                     	;# 
  1141  0396                     	;# 
  1142  0397                     	;# 
  1143  0398                     	;# 
  1144  0399                     	;# 
  1145  040E                     	;# 
  1146  0413                     	;# 
  1147  0413                     	;# 
  1148  0414                     	;# 
  1149  0414                     	;# 
  1150  0415                     	;# 
  1151  0416                     	;# 
  1152  0417                     	;# 
  1153  0418                     	;# 
  1154  041A                     	;# 
  1155  041A                     	;# 
  1156  041B                     	;# 
  1157  041B                     	;# 
  1158  041C                     	;# 
  1159  041D                     	;# 
  1160  041E                     	;# 
  1161  041F                     	;# 
  1162  0493                     	;# 
  1163  0494                     	;# 
  1164  0495                     	;# 
  1165  0496                     	;# 
  1166  049A                     	;# 
  1167  049B                     	;# 
  1168  049C                     	;# 
  1169  049D                     	;# 
  1170  058C                     	;# 
  1171  058C                     	;# 
  1172  058D                     	;# 
  1173  058E                     	;# 
  1174  058E                     	;# 
  1175  058F                     	;# 
  1176  0590                     	;# 
  1177  0590                     	;# 
  1178  0591                     	;# 
  1179  0592                     	;# 
  1180  0592                     	;# 
  1181  0593                     	;# 
  1182  0594                     	;# 
  1183  0594                     	;# 
  1184  0595                     	;# 
  1185  0596                     	;# 
  1186  0596                     	;# 
  1187  0597                     	;# 
  1188  0598                     	;# 
  1189  0599                     	;# 
  1190  059A                     	;# 
  1191  059B                     	;# 
  1192  059B                     	;# 
  1193  059C                     	;# 
  1194  059D                     	;# 
  1195  060C                     	;# 
  1196  060C                     	;# 
  1197  060D                     	;# 
  1198  060E                     	;# 
  1199  060F                     	;# 
  1200  060F                     	;# 
  1201  0610                     	;# 
  1202  0611                     	;# 
  1203  0612                     	;# 
  1204  0613                     	;# 
  1205  0614                     	;# 
  1206  0617                     	;# 
  1207  0617                     	;# 
  1208  0618                     	;# 
  1209  0619                     	;# 
  1210  061A                     	;# 
  1211  061A                     	;# 
  1212  061B                     	;# 
  1213  061C                     	;# 
  1214  0691                     	;# 
  1215  0692                     	;# 
  1216  0693                     	;# 
  1217  0694                     	;# 
  1218  0695                     	;# 
  1219  0696                     	;# 
  1220  0697                     	;# 
  1221  0699                     	;# 
  1222  069A                     	;# 
  1223  0711                     	;# 
  1224  0712                     	;# 
  1225  0713                     	;# 
  1226  0714                     	;# 
  1227  0715                     	;# 
  1228  0718                     	;# 
  1229  0718                     	;# 
  1230  0719                     	;# 
  1231  071A                     	;# 
  1232  071A                     	;# 
  1233  071B                     	;# 
  1234  071C                     	;# 
  1235  071D                     	;# 
  1236  0791                     	;# 
  1237  0791                     	;# 
  1238  0792                     	;# 
  1239  0793                     	;# 
  1240  0793                     	;# 
  1241  0794                     	;# 
  1242  0795                     	;# 
  1243  0795                     	;# 
  1244  0796                     	;# 
  1245  0797                     	;# 
  1246  0797                     	;# 
  1247  0798                     	;# 
  1248  0799                     	;# 
  1249  079A                     	;# 
  1250  080C                     	;# 
  1251  080C                     	;# 
  1252  080D                     	;# 
  1253  080E                     	;# 
  1254  080E                     	;# 
  1255  080F                     	;# 
  1256  0810                     	;# 
  1257  0810                     	;# 
  1258  0811                     	;# 
  1259  0812                     	;# 
  1260  0812                     	;# 
  1261  0813                     	;# 
  1262  0814                     	;# 
  1263  0815                     	;# 
  1264  0816                     	;# 
  1265  0817                     	;# 
  1266  0818                     	;# 
  1267  0819                     	;# 
  1268  081A                     	;# 
  1269  081A                     	;# 
  1270  081B                     	;# 
  1271  081C                     	;# 
  1272  081C                     	;# 
  1273  081D                     	;# 
  1274  088C                     	;# 
  1275  088D                     	;# 
  1276  088E                     	;# 
  1277  088F                     	;# 
  1278  088F                     	;# 
  1279  0890                     	;# 
  1280  0891                     	;# 
  1281  0892                     	;# 
  1282  0893                     	;# 
  1283  0893                     	;# 
  1284  0894                     	;# 
  1285  0895                     	;# 
  1286  0896                     	;# 
  1287  0897                     	;# 
  1288  0897                     	;# 
  1289  0898                     	;# 
  1290  0899                     	;# 
  1291  0D8C                     	;# 
  1292  0D8C                     	;# 
  1293  0D8D                     	;# 
  1294  0D8E                     	;# 
  1295  0D8F                     	;# 
  1296  0D8F                     	;# 
  1297  0D90                     	;# 
  1298  0D91                     	;# 
  1299  0D92                     	;# 
  1300  0D92                     	;# 
  1301  0D93                     	;# 
  1302  0D94                     	;# 
  1303  0D95                     	;# 
  1304  0D95                     	;# 
  1305  0D96                     	;# 
  1306  0D97                     	;# 
  1307  0D98                     	;# 
  1308  0D99                     	;# 
  1309  0D9A                     	;# 
  1310  0D9B                     	;# 
  1311  0D9C                     	;# 
  1312  0D9D                     	;# 
  1313  0D9E                     	;# 
  1314  0D9E                     	;# 
  1315  0D9F                     	;# 
  1316  0DA0                     	;# 
  1317  0DA1                     	;# 
  1318  0DA1                     	;# 
  1319  0DA2                     	;# 
  1320  0DA3                     	;# 
  1321  0DA4                     	;# 
  1322  0DA4                     	;# 
  1323  0DA5                     	;# 
  1324  0DA6                     	;# 
  1325  0DA7                     	;# 
  1326  0DA7                     	;# 
  1327  0DA8                     	;# 
  1328  0DA9                     	;# 
  1329  0DAA                     	;# 
  1330  0DAB                     	;# 
  1331  0DAC                     	;# 
  1332  0DAD                     	;# 
  1333  0DAE                     	;# 
  1334  0DAF                     	;# 
  1335  0E0F                     	;# 
  1336  0E10                     	;# 
  1337  0E11                     	;# 
  1338  0E12                     	;# 
  1339  0E13                     	;# 
  1340  0E14                     	;# 
  1341  0E15                     	;# 
  1342  0E16                     	;# 
  1343  0E17                     	;# 
  1344  0E18                     	;# 
  1345  0E19                     	;# 
  1346  0E1A                     	;# 
  1347  0E1B                     	;# 
  1348  0E1C                     	;# 
  1349  0E1D                     	;# 
  1350  0E1E                     	;# 
  1351  0E1F                     	;# 
  1352  0E20                     	;# 
  1353  0E21                     	;# 
  1354  0E22                     	;# 
  1355  0E23                     	;# 
  1356  0E24                     	;# 
  1357  0E25                     	;# 
  1358  0E26                     	;# 
  1359  0E27                     	;# 
  1360  0E28                     	;# 
  1361  0E29                     	;# 
  1362  0E2A                     	;# 
  1363  0E2B                     	;# 
  1364  0E2C                     	;# 
  1365  0E2D                     	;# 
  1366  0E2E                     	;# 
  1367  0E90                     	;# 
  1368  0E91                     	;# 
  1369  0E92                     	;# 
  1370  0E94                     	;# 
  1371  0E95                     	;# 
  1372  0E9C                     	;# 
  1373  0E9D                     	;# 
  1374  0E9E                     	;# 
  1375  0E9F                     	;# 
  1376  0EA0                     	;# 
  1377  0EA1                     	;# 
  1378  0EA2                     	;# 
  1379  0EA3                     	;# 
  1380  0EA4                     	;# 
  1381  0EA5                     	;# 
  1382  0EA6                     	;# 
  1383  0EA7                     	;# 
  1384  0F0F                     	;# 
  1385  0F10                     	;# 
  1386  0F11                     	;# 
  1387  0F12                     	;# 
  1388  0F13                     	;# 
  1389  0F14                     	;# 
  1390  0F15                     	;# 
  1391  0F16                     	;# 
  1392  0F17                     	;# 
  1393  0F18                     	;# 
  1394  0F19                     	;# 
  1395  0F1A                     	;# 
  1396  0F1B                     	;# 
  1397  0F1C                     	;# 
  1398  0F1D                     	;# 
  1399  0F1E                     	;# 
  1400  0F1F                     	;# 
  1401  0F20                     	;# 
  1402  0F21                     	;# 
  1403  0F22                     	;# 
  1404  0F23                     	;# 
  1405  0F24                     	;# 
  1406  0F25                     	;# 
  1407  0F26                     	;# 
  1408  0F27                     	;# 
  1409  0F28                     	;# 
  1410  0F29                     	;# 
  1411  0F2A                     	;# 
  1412  0F2B                     	;# 
  1413  0F2C                     	;# 
  1414  0F2D                     	;# 
  1415  0F2E                     	;# 
  1416  0F2F                     	;# 
  1417  0F30                     	;# 
  1418  0F31                     	;# 
  1419  0F32                     	;# 
  1420  0F33                     	;# 
  1421  0F34                     	;# 
  1422  0F35                     	;# 
  1423  0F36                     	;# 
  1424  0F37                     	;# 
  1425  0FE4                     	;# 
  1426  0FE5                     	;# 
  1427  0FE6                     	;# 
  1428  0FE7                     	;# 
  1429  0FE8                     	;# 
  1430  0FE9                     	;# 
  1431  0FEA                     	;# 
  1432  0FEB                     	;# 
  1433  0FED                     	;# 
  1434  0FEE                     	;# 
  1435  0FEF                     	;# 
  1436  0000                     	;# 
  1437  0001                     	;# 
  1438  0002                     	;# 
  1439  0003                     	;# 
  1440  0004                     	;# 
  1441  0005                     	;# 
  1442  0006                     	;# 
  1443  0007                     	;# 
  1444  0008                     	;# 
  1445  0009                     	;# 
  1446  000A                     	;# 
  1447  000B                     	;# 
  1448  000C                     	;# 
  1449  000D                     	;# 
  1450  000E                     	;# 
  1451  0010                     	;# 
  1452  0011                     	;# 
  1453  0012                     	;# 
  1454  0013                     	;# 
  1455  0014                     	;# 
  1456  0015                     	;# 
  1457  0016                     	;# 
  1458  0016                     	;# 
  1459  0017                     	;# 
  1460  0018                     	;# 
  1461  0019                     	;# 
  1462  001A                     	;# 
  1463  001A                     	;# 
  1464  001B                     	;# 
  1465  001B                     	;# 
  1466  001C                     	;# 
  1467  001D                     	;# 
  1468  001E                     	;# 
  1469  001F                     	;# 
  1470  008C                     	;# 
  1471  008D                     	;# 
  1472  008E                     	;# 
  1473  0090                     	;# 
  1474  0091                     	;# 
  1475  0092                     	;# 
  1476  0093                     	;# 
  1477  0094                     	;# 
  1478  0095                     	;# 
  1479  0096                     	;# 
  1480  0098                     	;# 
  1481  0099                     	;# 
  1482  009A                     	;# 
  1483  009B                     	;# 
  1484  009B                     	;# 
  1485  009C                     	;# 
  1486  009D                     	;# 
  1487  009E                     	;# 
  1488  009F                     	;# 
  1489  010C                     	;# 
  1490  010D                     	;# 
  1491  010E                     	;# 
  1492  0111                     	;# 
  1493  0112                     	;# 
  1494  0113                     	;# 
  1495  0114                     	;# 
  1496  0115                     	;# 
  1497  0116                     	;# 
  1498  0117                     	;# 
  1499  0118                     	;# 
  1500  0119                     	;# 
  1501  011C                     	;# 
  1502  018C                     	;# 
  1503  018D                     	;# 
  1504  018E                     	;# 
  1505  0191                     	;# 
  1506  0191                     	;# 
  1507  0192                     	;# 
  1508  0193                     	;# 
  1509  0193                     	;# 
  1510  0194                     	;# 
  1511  0195                     	;# 
  1512  0196                     	;# 
  1513  0197                     	;# 
  1514  0199                     	;# 
  1515  0199                     	;# 
  1516  0199                     	;# 
  1517  019A                     	;# 
  1518  019A                     	;# 
  1519  019A                     	;# 
  1520  019B                     	;# 
  1521  019B                     	;# 
  1522  019B                     	;# 
  1523  019B                     	;# 
  1524  019B                     	;# 
  1525  019C                     	;# 
  1526  019C                     	;# 
  1527  019C                     	;# 
  1528  019D                     	;# 
  1529  019D                     	;# 
  1530  019D                     	;# 
  1531  019E                     	;# 
  1532  019E                     	;# 
  1533  019E                     	;# 
  1534  019F                     	;# 
  1535  019F                     	;# 
  1536  019F                     	;# 
  1537  019F                     	;# 
  1538  019F                     	;# 
  1539  020C                     	;# 
  1540  020D                     	;# 
  1541  020E                     	;# 
  1542  0211                     	;# 
  1543  0211                     	;# 
  1544  0212                     	;# 
  1545  0212                     	;# 
  1546  0213                     	;# 
  1547  0213                     	;# 
  1548  0214                     	;# 
  1549  0214                     	;# 
  1550  0215                     	;# 
  1551  0215                     	;# 
  1552  0215                     	;# 
  1553  0215                     	;# 
  1554  0216                     	;# 
  1555  0216                     	;# 
  1556  0217                     	;# 
  1557  0217                     	;# 
  1558  028C                     	;# 
  1559  028D                     	;# 
  1560  028E                     	;# 
  1561  0291                     	;# 
  1562  0291                     	;# 
  1563  0292                     	;# 
  1564  0293                     	;# 
  1565  0294                     	;# 
  1566  0298                     	;# 
  1567  0298                     	;# 
  1568  0299                     	;# 
  1569  029A                     	;# 
  1570  029B                     	;# 
  1571  029E                     	;# 
  1572  030C                     	;# 
  1573  030D                     	;# 
  1574  030E                     	;# 
  1575  038C                     	;# 
  1576  038D                     	;# 
  1577  038E                     	;# 
  1578  0391                     	;# 
  1579  0392                     	;# 
  1580  0393                     	;# 
  1581  0394                     	;# 
  1582  0395                     	;# 
  1583  0396                     	;# 
  1584  0397                     	;# 
  1585  0398                     	;# 
  1586  0399                     	;# 
  1587  040E                     	;# 
  1588  0413                     	;# 
  1589  0413                     	;# 
  1590  0414                     	;# 
  1591  0414                     	;# 
  1592  0415                     	;# 
  1593  0416                     	;# 
  1594  0417                     	;# 
  1595  0418                     	;# 
  1596  041A                     	;# 
  1597  041A                     	;# 
  1598  041B                     	;# 
  1599  041B                     	;# 
  1600  041C                     	;# 
  1601  041D                     	;# 
  1602  041E                     	;# 
  1603  041F                     	;# 
  1604  0493                     	;# 
  1605  0494                     	;# 
  1606  0495                     	;# 
  1607  0496                     	;# 
  1608  049A                     	;# 
  1609  049B                     	;# 
  1610  049C                     	;# 
  1611  049D                     	;# 
  1612  058C                     	;# 
  1613  058C                     	;# 
  1614  058D                     	;# 
  1615  058E                     	;# 
  1616  058E                     	;# 
  1617  058F                     	;# 
  1618  0590                     	;# 
  1619  0590                     	;# 
  1620  0591                     	;# 
  1621  0592                     	;# 
  1622  0592                     	;# 
  1623  0593                     	;# 
  1624  0594                     	;# 
  1625  0594                     	;# 
  1626  0595                     	;# 
  1627  0596                     	;# 
  1628  0596                     	;# 
  1629  0597                     	;# 
  1630  0598                     	;# 
  1631  0599                     	;# 
  1632  059A                     	;# 
  1633  059B                     	;# 
  1634  059B                     	;# 
  1635  059C                     	;# 
  1636  059D                     	;# 
  1637  060C                     	;# 
  1638  060C                     	;# 
  1639  060D                     	;# 
  1640  060E                     	;# 
  1641  060F                     	;# 
  1642  060F                     	;# 
  1643  0610                     	;# 
  1644  0611                     	;# 
  1645  0612                     	;# 
  1646  0613                     	;# 
  1647  0614                     	;# 
  1648  0617                     	;# 
  1649  0617                     	;# 
  1650  0618                     	;# 
  1651  0619                     	;# 
  1652  061A                     	;# 
  1653  061A                     	;# 
  1654  061B                     	;# 
  1655  061C                     	;# 
  1656  0691                     	;# 
  1657  0692                     	;# 
  1658  0693                     	;# 
  1659  0694                     	;# 
  1660  0695                     	;# 
  1661  0696                     	;# 
  1662  0697                     	;# 
  1663  0699                     	;# 
  1664  069A                     	;# 
  1665  0711                     	;# 
  1666  0712                     	;# 
  1667  0713                     	;# 
  1668  0714                     	;# 
  1669  0715                     	;# 
  1670  0718                     	;# 
  1671  0718                     	;# 
  1672  0719                     	;# 
  1673  071A                     	;# 
  1674  071A                     	;# 
  1675  071B                     	;# 
  1676  071C                     	;# 
  1677  071D                     	;# 
  1678  0791                     	;# 
  1679  0791                     	;# 
  1680  0792                     	;# 
  1681  0793                     	;# 
  1682  0793                     	;# 
  1683  0794                     	;# 
  1684  0795                     	;# 
  1685  0795                     	;# 
  1686  0796                     	;# 
  1687  0797                     	;# 
  1688  0797                     	;# 
  1689  0798                     	;# 
  1690  0799                     	;# 
  1691  079A                     	;# 
  1692  080C                     	;# 
  1693  080C                     	;# 
  1694  080D                     	;# 
  1695  080E                     	;# 
  1696  080E                     	;# 
  1697  080F                     	;# 
  1698  0810                     	;# 
  1699  0810                     	;# 
  1700  0811                     	;# 
  1701  0812                     	;# 
  1702  0812                     	;# 
  1703  0813                     	;# 
  1704  0814                     	;# 
  1705  0815                     	;# 
  1706  0816                     	;# 
  1707  0817                     	;# 
  1708  0818                     	;# 
  1709  0819                     	;# 
  1710  081A                     	;# 
  1711  081A                     	;# 
  1712  081B                     	;# 
  1713  081C                     	;# 
  1714  081C                     	;# 
  1715  081D                     	;# 
  1716  088C                     	;# 
  1717  088D                     	;# 
  1718  088E                     	;# 
  1719  088F                     	;# 
  1720  088F                     	;# 
  1721  0890                     	;# 
  1722  0891                     	;# 
  1723  0892                     	;# 
  1724  0893                     	;# 
  1725  0893                     	;# 
  1726  0894                     	;# 
  1727  0895                     	;# 
  1728  0896                     	;# 
  1729  0897                     	;# 
  1730  0897                     	;# 
  1731  0898                     	;# 
  1732  0899                     	;# 
  1733  0D8C                     	;# 
  1734  0D8C                     	;# 
  1735  0D8D                     	;# 
  1736  0D8E                     	;# 
  1737  0D8F                     	;# 
  1738  0D8F                     	;# 
  1739  0D90                     	;# 
  1740  0D91                     	;# 
  1741  0D92                     	;# 
  1742  0D92                     	;# 
  1743  0D93                     	;# 
  1744  0D94                     	;# 
  1745  0D95                     	;# 
  1746  0D95                     	;# 
  1747  0D96                     	;# 
  1748  0D97                     	;# 
  1749  0D98                     	;# 
  1750  0D99                     	;# 
  1751  0D9A                     	;# 
  1752  0D9B                     	;# 
  1753  0D9C                     	;# 
  1754  0D9D                     	;# 
  1755  0D9E                     	;# 
  1756  0D9E                     	;# 
  1757  0D9F                     	;# 
  1758  0DA0                     	;# 
  1759  0DA1                     	;# 
  1760  0DA1                     	;# 
  1761  0DA2                     	;# 
  1762  0DA3                     	;# 
  1763  0DA4                     	;# 
  1764  0DA4                     	;# 
  1765  0DA5                     	;# 
  1766  0DA6                     	;# 
  1767  0DA7                     	;# 
  1768  0DA7                     	;# 
  1769  0DA8                     	;# 
  1770  0DA9                     	;# 
  1771  0DAA                     	;# 
  1772  0DAB                     	;# 
  1773  0DAC                     	;# 
  1774  0DAD                     	;# 
  1775  0DAE                     	;# 
  1776  0DAF                     	;# 
  1777  0E0F                     	;# 
  1778  0E10                     	;# 
  1779  0E11                     	;# 
  1780  0E12                     	;# 
  1781  0E13                     	;# 
  1782  0E14                     	;# 
  1783  0E15                     	;# 
  1784  0E16                     	;# 
  1785  0E17                     	;# 
  1786  0E18                     	;# 
  1787  0E19                     	;# 
  1788  0E1A                     	;# 
  1789  0E1B                     	;# 
  1790  0E1C                     	;# 
  1791  0E1D                     	;# 
  1792  0E1E                     	;# 
  1793  0E1F                     	;# 
  1794  0E20                     	;# 
  1795  0E21                     	;# 
  1796  0E22                     	;# 
  1797  0E23                     	;# 
  1798  0E24                     	;# 
  1799  0E25                     	;# 
  1800  0E26                     	;# 
  1801  0E27                     	;# 
  1802  0E28                     	;# 
  1803  0E29                     	;# 
  1804  0E2A                     	;# 
  1805  0E2B                     	;# 
  1806  0E2C                     	;# 
  1807  0E2D                     	;# 
  1808  0E2E                     	;# 
  1809  0E90                     	;# 
  1810  0E91                     	;# 
  1811  0E92                     	;# 
  1812  0E94                     	;# 
  1813  0E95                     	;# 
  1814  0E9C                     	;# 
  1815  0E9D                     	;# 
  1816  0E9E                     	;# 
  1817  0E9F                     	;# 
  1818  0EA0                     	;# 
  1819  0EA1                     	;# 
  1820  0EA2                     	;# 
  1821  0EA3                     	;# 
  1822  0EA4                     	;# 
  1823  0EA5                     	;# 
  1824  0EA6                     	;# 
  1825  0EA7                     	;# 
  1826  0F0F                     	;# 
  1827  0F10                     	;# 
  1828  0F11                     	;# 
  1829  0F12                     	;# 
  1830  0F13                     	;# 
  1831  0F14                     	;# 
  1832  0F15                     	;# 
  1833  0F16                     	;# 
  1834  0F17                     	;# 
  1835  0F18                     	;# 
  1836  0F19                     	;# 
  1837  0F1A                     	;# 
  1838  0F1B                     	;# 
  1839  0F1C                     	;# 
  1840  0F1D                     	;# 
  1841  0F1E                     	;# 
  1842  0F1F                     	;# 
  1843  0F20                     	;# 
  1844  0F21                     	;# 
  1845  0F22                     	;# 
  1846  0F23                     	;# 
  1847  0F24                     	;# 
  1848  0F25                     	;# 
  1849  0F26                     	;# 
  1850  0F27                     	;# 
  1851  0F28                     	;# 
  1852  0F29                     	;# 
  1853  0F2A                     	;# 
  1854  0F2B                     	;# 
  1855  0F2C                     	;# 
  1856  0F2D                     	;# 
  1857  0F2E                     	;# 
  1858  0F2F                     	;# 
  1859  0F30                     	;# 
  1860  0F31                     	;# 
  1861  0F32                     	;# 
  1862  0F33                     	;# 
  1863  0F34                     	;# 
  1864  0F35                     	;# 
  1865  0F36                     	;# 
  1866  0F37                     	;# 
  1867  0FE4                     	;# 
  1868  0FE5                     	;# 
  1869  0FE6                     	;# 
  1870  0FE7                     	;# 
  1871  0FE8                     	;# 
  1872  0FE9                     	;# 
  1873  0FEA                     	;# 
  1874  0FEB                     	;# 
  1875  0FED                     	;# 
  1876  0FEE                     	;# 
  1877  0FEF                     	;# 
  1878  0000                     	;# 
  1879  0001                     	;# 
  1880  0002                     	;# 
  1881  0003                     	;# 
  1882  0004                     	;# 
  1883  0005                     	;# 
  1884  0006                     	;# 
  1885  0007                     	;# 
  1886  0008                     	;# 
  1887  0009                     	;# 
  1888  000A                     	;# 
  1889  000B                     	;# 
  1890  000C                     	;# 
  1891  000D                     	;# 
  1892  000E                     	;# 
  1893  0010                     	;# 
  1894  0011                     	;# 
  1895  0012                     	;# 
  1896  0013                     	;# 
  1897  0014                     	;# 
  1898  0015                     	;# 
  1899  0016                     	;# 
  1900  0016                     	;# 
  1901  0017                     	;# 
  1902  0018                     	;# 
  1903  0019                     	;# 
  1904  001A                     	;# 
  1905  001A                     	;# 
  1906  001B                     	;# 
  1907  001B                     	;# 
  1908  001C                     	;# 
  1909  001D                     	;# 
  1910  001E                     	;# 
  1911  001F                     	;# 
  1912  008C                     	;# 
  1913  008D                     	;# 
  1914  008E                     	;# 
  1915  0090                     	;# 
  1916  0091                     	;# 
  1917  0092                     	;# 
  1918  0093                     	;# 
  1919  0094                     	;# 
  1920  0095                     	;# 
  1921  0096                     	;# 
  1922  0098                     	;# 
  1923  0099                     	;# 
  1924  009A                     	;# 
  1925  009B                     	;# 
  1926  009B                     	;# 
  1927  009C                     	;# 
  1928  009D                     	;# 
  1929  009E                     	;# 
  1930  009F                     	;# 
  1931  010C                     	;# 
  1932  010D                     	;# 
  1933  010E                     	;# 
  1934  0111                     	;# 
  1935  0112                     	;# 
  1936  0113                     	;# 
  1937  0114                     	;# 
  1938  0115                     	;# 
  1939  0116                     	;# 
  1940  0117                     	;# 
  1941  0118                     	;# 
  1942  0119                     	;# 
  1943  011C                     	;# 
  1944  018C                     	;# 
  1945  018D                     	;# 
  1946  018E                     	;# 
  1947  0191                     	;# 
  1948  0191                     	;# 
  1949  0192                     	;# 
  1950  0193                     	;# 
  1951  0193                     	;# 
  1952  0194                     	;# 
  1953  0195                     	;# 
  1954  0196                     	;# 
  1955  0197                     	;# 
  1956  0199                     	;# 
  1957  0199                     	;# 
  1958  0199                     	;# 
  1959  019A                     	;# 
  1960  019A                     	;# 
  1961  019A                     	;# 
  1962  019B                     	;# 
  1963  019B                     	;# 
  1964  019B                     	;# 
  1965  019B                     	;# 
  1966  019B                     	;# 
  1967  019C                     	;# 
  1968  019C                     	;# 
  1969  019C                     	;# 
  1970  019D                     	;# 
  1971  019D                     	;# 
  1972  019D                     	;# 
  1973  019E                     	;# 
  1974  019E                     	;# 
  1975  019E                     	;# 
  1976  019F                     	;# 
  1977  019F                     	;# 
  1978  019F                     	;# 
  1979  019F                     	;# 
  1980  019F                     	;# 
  1981  020C                     	;# 
  1982  020D                     	;# 
  1983  020E                     	;# 
  1984  0211                     	;# 
  1985  0211                     	;# 
  1986  0212                     	;# 
  1987  0212                     	;# 
  1988  0213                     	;# 
  1989  0213                     	;# 
  1990  0214                     	;# 
  1991  0214                     	;# 
  1992  0215                     	;# 
  1993  0215                     	;# 
  1994  0215                     	;# 
  1995  0215                     	;# 
  1996  0216                     	;# 
  1997  0216                     	;# 
  1998  0217                     	;# 
  1999  0217                     	;# 
  2000  028C                     	;# 
  2001  028D                     	;# 
  2002  028E                     	;# 
  2003  0291                     	;# 
  2004  0291                     	;# 
  2005  0292                     	;# 
  2006  0293                     	;# 
  2007  0294                     	;# 
  2008  0298                     	;# 
  2009  0298                     	;# 
  2010  0299                     	;# 
  2011  029A                     	;# 
  2012  029B                     	;# 
  2013  029E                     	;# 
  2014  030C                     	;# 
  2015  030D                     	;# 
  2016  030E                     	;# 
  2017  038C                     	;# 
  2018  038D                     	;# 
  2019  038E                     	;# 
  2020  0391                     	;# 
  2021  0392                     	;# 
  2022  0393                     	;# 
  2023  0394                     	;# 
  2024  0395                     	;# 
  2025  0396                     	;# 
  2026  0397                     	;# 
  2027  0398                     	;# 
  2028  0399                     	;# 
  2029  040E                     	;# 
  2030  0413                     	;# 
  2031  0413                     	;# 
  2032  0414                     	;# 
  2033  0414                     	;# 
  2034  0415                     	;# 
  2035  0416                     	;# 
  2036  0417                     	;# 
  2037  0418                     	;# 
  2038  041A                     	;# 
  2039  041A                     	;# 
  2040  041B                     	;# 
  2041  041B                     	;# 
  2042  041C                     	;# 
  2043  041D                     	;# 
  2044  041E                     	;# 
  2045  041F                     	;# 
  2046  0493                     	;# 
  2047  0494                     	;# 
  2048  0495                     	;# 
  2049  0496                     	;# 
  2050  049A                     	;# 
  2051  049B                     	;# 
  2052  049C                     	;# 
  2053  049D                     	;# 
  2054  058C                     	;# 
  2055  058C                     	;# 
  2056  058D                     	;# 
  2057  058E                     	;# 
  2058  058E                     	;# 
  2059  058F                     	;# 
  2060  0590                     	;# 
  2061  0590                     	;# 
  2062  0591                     	;# 
  2063  0592                     	;# 
  2064  0592                     	;# 
  2065  0593                     	;# 
  2066  0594                     	;# 
  2067  0594                     	;# 
  2068  0595                     	;# 
  2069  0596                     	;# 
  2070  0596                     	;# 
  2071  0597                     	;# 
  2072  0598                     	;# 
  2073  0599                     	;# 
  2074  059A                     	;# 
  2075  059B                     	;# 
  2076  059B                     	;# 
  2077  059C                     	;# 
  2078  059D                     	;# 
  2079  060C                     	;# 
  2080  060C                     	;# 
  2081  060D                     	;# 
  2082  060E                     	;# 
  2083  060F                     	;# 
  2084  060F                     	;# 
  2085  0610                     	;# 
  2086  0611                     	;# 
  2087  0612                     	;# 
  2088  0613                     	;# 
  2089  0614                     	;# 
  2090  0617                     	;# 
  2091  0617                     	;# 
  2092  0618                     	;# 
  2093  0619                     	;# 
  2094  061A                     	;# 
  2095  061A                     	;# 
  2096  061B                     	;# 
  2097  061C                     	;# 
  2098  0691                     	;# 
  2099  0692                     	;# 
  2100  0693                     	;# 
  2101  0694                     	;# 
  2102  0695                     	;# 
  2103  0696                     	;# 
  2104  0697                     	;# 
  2105  0699                     	;# 
  2106  069A                     	;# 
  2107  0711                     	;# 
  2108  0712                     	;# 
  2109  0713                     	;# 
  2110  0714                     	;# 
  2111  0715                     	;# 
  2112  0718                     	;# 
  2113  0718                     	;# 
  2114  0719                     	;# 
  2115  071A                     	;# 
  2116  071A                     	;# 
  2117  071B                     	;# 
  2118  071C                     	;# 
  2119  071D                     	;# 
  2120  0791                     	;# 
  2121  0791                     	;# 
  2122  0792                     	;# 
  2123  0793                     	;# 
  2124  0793                     	;# 
  2125  0794                     	;# 
  2126  0795                     	;# 
  2127  0795                     	;# 
  2128  0796                     	;# 
  2129  0797                     	;# 
  2130  0797                     	;# 
  2131  0798                     	;# 
  2132  0799                     	;# 
  2133  079A                     	;# 
  2134  080C                     	;# 
  2135  080C                     	;# 
  2136  080D                     	;# 
  2137  080E                     	;# 
  2138  080E                     	;# 
  2139  080F                     	;# 
  2140  0810                     	;# 
  2141  0810                     	;# 
  2142  0811                     	;# 
  2143  0812                     	;# 
  2144  0812                     	;# 
  2145  0813                     	;# 
  2146  0814                     	;# 
  2147  0815                     	;# 
  2148  0816                     	;# 
  2149  0817                     	;# 
  2150  0818                     	;# 
  2151  0819                     	;# 
  2152  081A                     	;# 
  2153  081A                     	;# 
  2154  081B                     	;# 
  2155  081C                     	;# 
  2156  081C                     	;# 
  2157  081D                     	;# 
  2158  088C                     	;# 
  2159  088D                     	;# 
  2160  088E                     	;# 
  2161  088F                     	;# 
  2162  088F                     	;# 
  2163  0890                     	;# 
  2164  0891                     	;# 
  2165  0892                     	;# 
  2166  0893                     	;# 
  2167  0893                     	;# 
  2168  0894                     	;# 
  2169  0895                     	;# 
  2170  0896                     	;# 
  2171  0897                     	;# 
  2172  0897                     	;# 
  2173  0898                     	;# 
  2174  0899                     	;# 
  2175  0D8C                     	;# 
  2176  0D8C                     	;# 
  2177  0D8D                     	;# 
  2178  0D8E                     	;# 
  2179  0D8F                     	;# 
  2180  0D8F                     	;# 
  2181  0D90                     	;# 
  2182  0D91                     	;# 
  2183  0D92                     	;# 
  2184  0D92                     	;# 
  2185  0D93                     	;# 
  2186  0D94                     	;# 
  2187  0D95                     	;# 
  2188  0D95                     	;# 
  2189  0D96                     	;# 
  2190  0D97                     	;# 
  2191  0D98                     	;# 
  2192  0D99                     	;# 
  2193  0D9A                     	;# 
  2194  0D9B                     	;# 
  2195  0D9C                     	;# 
  2196  0D9D                     	;# 
  2197  0D9E                     	;# 
  2198  0D9E                     	;# 
  2199  0D9F                     	;# 
  2200  0DA0                     	;# 
  2201  0DA1                     	;# 
  2202  0DA1                     	;# 
  2203  0DA2                     	;# 
  2204  0DA3                     	;# 
  2205  0DA4                     	;# 
  2206  0DA4                     	;# 
  2207  0DA5                     	;# 
  2208  0DA6                     	;# 
  2209  0DA7                     	;# 
  2210  0DA7                     	;# 
  2211  0DA8                     	;# 
  2212  0DA9                     	;# 
  2213  0DAA                     	;# 
  2214  0DAB                     	;# 
  2215  0DAC                     	;# 
  2216  0DAD                     	;# 
  2217  0DAE                     	;# 
  2218  0DAF                     	;# 
  2219  0E0F                     	;# 
  2220  0E10                     	;# 
  2221  0E11                     	;# 
  2222  0E12                     	;# 
  2223  0E13                     	;# 
  2224  0E14                     	;# 
  2225  0E15                     	;# 
  2226  0E16                     	;# 
  2227  0E17                     	;# 
  2228  0E18                     	;# 
  2229  0E19                     	;# 
  2230  0E1A                     	;# 
  2231  0E1B                     	;# 
  2232  0E1C                     	;# 
  2233  0E1D                     	;# 
  2234  0E1E                     	;# 
  2235  0E1F                     	;# 
  2236  0E20                     	;# 
  2237  0E21                     	;# 
  2238  0E22                     	;# 
  2239  0E23                     	;# 
  2240  0E24                     	;# 
  2241  0E25                     	;# 
  2242  0E26                     	;# 
  2243  0E27                     	;# 
  2244  0E28                     	;# 
  2245  0E29                     	;# 
  2246  0E2A                     	;# 
  2247  0E2B                     	;# 
  2248  0E2C                     	;# 
  2249  0E2D                     	;# 
  2250  0E2E                     	;# 
  2251  0E90                     	;# 
  2252  0E91                     	;# 
  2253  0E92                     	;# 
  2254  0E94                     	;# 
  2255  0E95                     	;# 
  2256  0E9C                     	;# 
  2257  0E9D                     	;# 
  2258  0E9E                     	;# 
  2259  0E9F                     	;# 
  2260  0EA0                     	;# 
  2261  0EA1                     	;# 
  2262  0EA2                     	;# 
  2263  0EA3                     	;# 
  2264  0EA4                     	;# 
  2265  0EA5                     	;# 
  2266  0EA6                     	;# 
  2267  0EA7                     	;# 
  2268  0F0F                     	;# 
  2269  0F10                     	;# 
  2270  0F11                     	;# 
  2271  0F12                     	;# 
  2272  0F13                     	;# 
  2273  0F14                     	;# 
  2274  0F15                     	;# 
  2275  0F16                     	;# 
  2276  0F17                     	;# 
  2277  0F18                     	;# 
  2278  0F19                     	;# 
  2279  0F1A                     	;# 
  2280  0F1B                     	;# 
  2281  0F1C                     	;# 
  2282  0F1D                     	;# 
  2283  0F1E                     	;# 
  2284  0F1F                     	;# 
  2285  0F20                     	;# 
  2286  0F21                     	;# 
  2287  0F22                     	;# 
  2288  0F23                     	;# 
  2289  0F24                     	;# 
  2290  0F25                     	;# 
  2291  0F26                     	;# 
  2292  0F27                     	;# 
  2293  0F28                     	;# 
  2294  0F29                     	;# 
  2295  0F2A                     	;# 
  2296  0F2B                     	;# 
  2297  0F2C                     	;# 
  2298  0F2D                     	;# 
  2299  0F2E                     	;# 
  2300  0F2F                     	;# 
  2301  0F30                     	;# 
  2302  0F31                     	;# 
  2303  0F32                     	;# 
  2304  0F33                     	;# 
  2305  0F34                     	;# 
  2306  0F35                     	;# 
  2307  0F36                     	;# 
  2308  0F37                     	;# 
  2309  0FE4                     	;# 
  2310  0FE5                     	;# 
  2311  0FE6                     	;# 
  2312  0FE7                     	;# 
  2313  0FE8                     	;# 
  2314  0FE9                     	;# 
  2315  0FEA                     	;# 
  2316  0FEB                     	;# 
  2317  0FED                     	;# 
  2318  0FEE                     	;# 
  2319  0FEF                     	;# 
  2320  0000                     	;# 
  2321  0001                     	;# 
  2322  0002                     	;# 
  2323  0003                     	;# 
  2324  0004                     	;# 
  2325  0005                     	;# 
  2326  0006                     	;# 
  2327  0007                     	;# 
  2328  0008                     	;# 
  2329  0009                     	;# 
  2330  000A                     	;# 
  2331  000B                     	;# 
  2332  000C                     	;# 
  2333  000D                     	;# 
  2334  000E                     	;# 
  2335  0010                     	;# 
  2336  0011                     	;# 
  2337  0012                     	;# 
  2338  0013                     	;# 
  2339  0014                     	;# 
  2340  0015                     	;# 
  2341  0016                     	;# 
  2342  0016                     	;# 
  2343  0017                     	;# 
  2344  0018                     	;# 
  2345  0019                     	;# 
  2346  001A                     	;# 
  2347  001A                     	;# 
  2348  001B                     	;# 
  2349  001B                     	;# 
  2350  001C                     	;# 
  2351  001D                     	;# 
  2352  001E                     	;# 
  2353  001F                     	;# 
  2354  008C                     	;# 
  2355  008D                     	;# 
  2356  008E                     	;# 
  2357  0090                     	;# 
  2358  0091                     	;# 
  2359  0092                     	;# 
  2360  0093                     	;# 
  2361  0094                     	;# 
  2362  0095                     	;# 
  2363  0096                     	;# 
  2364  0098                     	;# 
  2365  0099                     	;# 
  2366  009A                     	;# 
  2367  009B                     	;# 
  2368  009B                     	;# 
  2369  009C                     	;# 
  2370  009D                     	;# 
  2371  009E                     	;# 
  2372  009F                     	;# 
  2373  010C                     	;# 
  2374  010D                     	;# 
  2375  010E                     	;# 
  2376  0111                     	;# 
  2377  0112                     	;# 
  2378  0113                     	;# 
  2379  0114                     	;# 
  2380  0115                     	;# 
  2381  0116                     	;# 
  2382  0117                     	;# 
  2383  0118                     	;# 
  2384  0119                     	;# 
  2385  011C                     	;# 
  2386  018C                     	;# 
  2387  018D                     	;# 
  2388  018E                     	;# 
  2389  0191                     	;# 
  2390  0191                     	;# 
  2391  0192                     	;# 
  2392  0193                     	;# 
  2393  0193                     	;# 
  2394  0194                     	;# 
  2395  0195                     	;# 
  2396  0196                     	;# 
  2397  0197                     	;# 
  2398  0199                     	;# 
  2399  0199                     	;# 
  2400  0199                     	;# 
  2401  019A                     	;# 
  2402  019A                     	;# 
  2403  019A                     	;# 
  2404  019B                     	;# 
  2405  019B                     	;# 
  2406  019B                     	;# 
  2407  019B                     	;# 
  2408  019B                     	;# 
  2409  019C                     	;# 
  2410  019C                     	;# 
  2411  019C                     	;# 
  2412  019D                     	;# 
  2413  019D                     	;# 
  2414  019D                     	;# 
  2415  019E                     	;# 
  2416  019E                     	;# 
  2417  019E                     	;# 
  2418  019F                     	;# 
  2419  019F                     	;# 
  2420  019F                     	;# 
  2421  019F                     	;# 
  2422  019F                     	;# 
  2423  020C                     	;# 
  2424  020D                     	;# 
  2425  020E                     	;# 
  2426  0211                     	;# 
  2427  0211                     	;# 
  2428  0212                     	;# 
  2429  0212                     	;# 
  2430  0213                     	;# 
  2431  0213                     	;# 
  2432  0214                     	;# 
  2433  0214                     	;# 
  2434  0215                     	;# 
  2435  0215                     	;# 
  2436  0215                     	;# 
  2437  0215                     	;# 
  2438  0216                     	;# 
  2439  0216                     	;# 
  2440  0217                     	;# 
  2441  0217                     	;# 
  2442  028C                     	;# 
  2443  028D                     	;# 
  2444  028E                     	;# 
  2445  0291                     	;# 
  2446  0291                     	;# 
  2447  0292                     	;# 
  2448  0293                     	;# 
  2449  0294                     	;# 
  2450  0298                     	;# 
  2451  0298                     	;# 
  2452  0299                     	;# 
  2453  029A                     	;# 
  2454  029B                     	;# 
  2455  029E                     	;# 
  2456  030C                     	;# 
  2457  030D                     	;# 
  2458  030E                     	;# 
  2459  038C                     	;# 
  2460  038D                     	;# 
  2461  038E                     	;# 
  2462  0391                     	;# 
  2463  0392                     	;# 
  2464  0393                     	;# 
  2465  0394                     	;# 
  2466  0395                     	;# 
  2467  0396                     	;# 
  2468  0397                     	;# 
  2469  0398                     	;# 
  2470  0399                     	;# 
  2471  040E                     	;# 
  2472  0413                     	;# 
  2473  0413                     	;# 
  2474  0414                     	;# 
  2475  0414                     	;# 
  2476  0415                     	;# 
  2477  0416                     	;# 
  2478  0417                     	;# 
  2479  0418                     	;# 
  2480  041A                     	;# 
  2481  041A                     	;# 
  2482  041B                     	;# 
  2483  041B                     	;# 
  2484  041C                     	;# 
  2485  041D                     	;# 
  2486  041E                     	;# 
  2487  041F                     	;# 
  2488  0493                     	;# 
  2489  0494                     	;# 
  2490  0495                     	;# 
  2491  0496                     	;# 
  2492  049A                     	;# 
  2493  049B                     	;# 
  2494  049C                     	;# 
  2495  049D                     	;# 
  2496  058C                     	;# 
  2497  058C                     	;# 
  2498  058D                     	;# 
  2499  058E                     	;# 
  2500  058E                     	;# 
  2501  058F                     	;# 
  2502  0590                     	;# 
  2503  0590                     	;# 
  2504  0591                     	;# 
  2505  0592                     	;# 
  2506  0592                     	;# 
  2507  0593                     	;# 
  2508  0594                     	;# 
  2509  0594                     	;# 
  2510  0595                     	;# 
  2511  0596                     	;# 
  2512  0596                     	;# 
  2513  0597                     	;# 
  2514  0598                     	;# 
  2515  0599                     	;# 
  2516  059A                     	;# 
  2517  059B                     	;# 
  2518  059B                     	;# 
  2519  059C                     	;# 
  2520  059D                     	;# 
  2521  060C                     	;# 
  2522  060C                     	;# 
  2523  060D                     	;# 
  2524  060E                     	;# 
  2525  060F                     	;# 
  2526  060F                     	;# 
  2527  0610                     	;# 
  2528  0611                     	;# 
  2529  0612                     	;# 
  2530  0613                     	;# 
  2531  0614                     	;# 
  2532  0617                     	;# 
  2533  0617                     	;# 
  2534  0618                     	;# 
  2535  0619                     	;# 
  2536  061A                     	;# 
  2537  061A                     	;# 
  2538  061B                     	;# 
  2539  061C                     	;# 
  2540  0691                     	;# 
  2541  0692                     	;# 
  2542  0693                     	;# 
  2543  0694                     	;# 
  2544  0695                     	;# 
  2545  0696                     	;# 
  2546  0697                     	;# 
  2547  0699                     	;# 
  2548  069A                     	;# 
  2549  0711                     	;# 
  2550  0712                     	;# 
  2551  0713                     	;# 
  2552  0714                     	;# 
  2553  0715                     	;# 
  2554  0718                     	;# 
  2555  0718                     	;# 
  2556  0719                     	;# 
  2557  071A                     	;# 
  2558  071A                     	;# 
  2559  071B                     	;# 
  2560  071C                     	;# 
  2561  071D                     	;# 
  2562  0791                     	;# 
  2563  0791                     	;# 
  2564  0792                     	;# 
  2565  0793                     	;# 
  2566  0793                     	;# 
  2567  0794                     	;# 
  2568  0795                     	;# 
  2569  0795                     	;# 
  2570  0796                     	;# 
  2571  0797                     	;# 
  2572  0797                     	;# 
  2573  0798                     	;# 
  2574  0799                     	;# 
  2575  079A                     	;# 
  2576  080C                     	;# 
  2577  080C                     	;# 
  2578  080D                     	;# 
  2579  080E                     	;# 
  2580  080E                     	;# 
  2581  080F                     	;# 
  2582  0810                     	;# 
  2583  0810                     	;# 
  2584  0811                     	;# 
  2585  0812                     	;# 
  2586  0812                     	;# 
  2587  0813                     	;# 
  2588  0814                     	;# 
  2589  0815                     	;# 
  2590  0816                     	;# 
  2591  0817                     	;# 
  2592  0818                     	;# 
  2593  0819                     	;# 
  2594  081A                     	;# 
  2595  081A                     	;# 
  2596  081B                     	;# 
  2597  081C                     	;# 
  2598  081C                     	;# 
  2599  081D                     	;# 
  2600  088C                     	;# 
  2601  088D                     	;# 
  2602  088E                     	;# 
  2603  088F                     	;# 
  2604  088F                     	;# 
  2605  0890                     	;# 
  2606  0891                     	;# 
  2607  0892                     	;# 
  2608  0893                     	;# 
  2609  0893                     	;# 
  2610  0894                     	;# 
  2611  0895                     	;# 
  2612  0896                     	;# 
  2613  0897                     	;# 
  2614  0897                     	;# 
  2615  0898                     	;# 
  2616  0899                     	;# 
  2617  0D8C                     	;# 
  2618  0D8C                     	;# 
  2619  0D8D                     	;# 
  2620  0D8E                     	;# 
  2621  0D8F                     	;# 
  2622  0D8F                     	;# 
  2623  0D90                     	;# 
  2624  0D91                     	;# 
  2625  0D92                     	;# 
  2626  0D92                     	;# 
  2627  0D93                     	;# 
  2628  0D94                     	;# 
  2629  0D95                     	;# 
  2630  0D95                     	;# 
  2631  0D96                     	;# 
  2632  0D97                     	;# 
  2633  0D98                     	;# 
  2634  0D99                     	;# 
  2635  0D9A                     	;# 
  2636  0D9B                     	;# 
  2637  0D9C                     	;# 
  2638  0D9D                     	;# 
  2639  0D9E                     	;# 
  2640  0D9E                     	;# 
  2641  0D9F                     	;# 
  2642  0DA0                     	;# 
  2643  0DA1                     	;# 
  2644  0DA1                     	;# 
  2645  0DA2                     	;# 
  2646  0DA3                     	;# 
  2647  0DA4                     	;# 
  2648  0DA4                     	;# 
  2649  0DA5                     	;# 
  2650  0DA6                     	;# 
  2651  0DA7                     	;# 
  2652  0DA7                     	;# 
  2653  0DA8                     	;# 
  2654  0DA9                     	;# 
  2655  0DAA                     	;# 
  2656  0DAB                     	;# 
  2657  0DAC                     	;# 
  2658  0DAD                     	;# 
  2659  0DAE                     	;# 
  2660  0DAF                     	;# 
  2661  0E0F                     	;# 
  2662  0E10                     	;# 
  2663  0E11                     	;# 
  2664  0E12                     	;# 
  2665  0E13                     	;# 
  2666  0E14                     	;# 
  2667  0E15                     	;# 
  2668  0E16                     	;# 
  2669  0E17                     	;# 
  2670  0E18                     	;# 
  2671  0E19                     	;# 
  2672  0E1A                     	;# 
  2673  0E1B                     	;# 
  2674  0E1C                     	;# 
  2675  0E1D                     	;# 
  2676  0E1E                     	;# 
  2677  0E1F                     	;# 
  2678  0E20                     	;# 
  2679  0E21                     	;# 
  2680  0E22                     	;# 
  2681  0E23                     	;# 
  2682  0E24                     	;# 
  2683  0E25                     	;# 
  2684  0E26                     	;# 
  2685  0E27                     	;# 
  2686  0E28                     	;# 
  2687  0E29                     	;# 
  2688  0E2A                     	;# 
  2689  0E2B                     	;# 
  2690  0E2C                     	;# 
  2691  0E2D                     	;# 
  2692  0E2E                     	;# 
  2693  0E90                     	;# 
  2694  0E91                     	;# 
  2695  0E92                     	;# 
  2696  0E94                     	;# 
  2697  0E95                     	;# 
  2698  0E9C                     	;# 
  2699  0E9D                     	;# 
  2700  0E9E                     	;# 
  2701  0E9F                     	;# 
  2702  0EA0                     	;# 
  2703  0EA1                     	;# 
  2704  0EA2                     	;# 
  2705  0EA3                     	;# 
  2706  0EA4                     	;# 
  2707  0EA5                     	;# 
  2708  0EA6                     	;# 
  2709  0EA7                     	;# 
  2710  0F0F                     	;# 
  2711  0F10                     	;# 
  2712  0F11                     	;# 
  2713  0F12                     	;# 
  2714  0F13                     	;# 
  2715  0F14                     	;# 
  2716  0F15                     	;# 
  2717  0F16                     	;# 
  2718  0F17                     	;# 
  2719  0F18                     	;# 
  2720  0F19                     	;# 
  2721  0F1A                     	;# 
  2722  0F1B                     	;# 
  2723  0F1C                     	;# 
  2724  0F1D                     	;# 
  2725  0F1E                     	;# 
  2726  0F1F                     	;# 
  2727  0F20                     	;# 
  2728  0F21                     	;# 
  2729  0F22                     	;# 
  2730  0F23                     	;# 
  2731  0F24                     	;# 
  2732  0F25                     	;# 
  2733  0F26                     	;# 
  2734  0F27                     	;# 
  2735  0F28                     	;# 
  2736  0F29                     	;# 
  2737  0F2A                     	;# 
  2738  0F2B                     	;# 
  2739  0F2C                     	;# 
  2740  0F2D                     	;# 
  2741  0F2E                     	;# 
  2742  0F2F                     	;# 
  2743  0F30                     	;# 
  2744  0F31                     	;# 
  2745  0F32                     	;# 
  2746  0F33                     	;# 
  2747  0F34                     	;# 
  2748  0F35                     	;# 
  2749  0F36                     	;# 
  2750  0F37                     	;# 
  2751  0FE4                     	;# 
  2752  0FE5                     	;# 
  2753  0FE6                     	;# 
  2754  0FE7                     	;# 
  2755  0FE8                     	;# 
  2756  0FE9                     	;# 
  2757  0FEA                     	;# 
  2758  0FEB                     	;# 
  2759  0FED                     	;# 
  2760  0FEE                     	;# 
  2761  0FEF                     	;# 
  2762  0000                     	;# 
  2763  0001                     	;# 
  2764  0002                     	;# 
  2765  0003                     	;# 
  2766  0004                     	;# 
  2767  0005                     	;# 
  2768  0006                     	;# 
  2769  0007                     	;# 
  2770  0008                     	;# 
  2771  0009                     	;# 
  2772  000A                     	;# 
  2773  000B                     	;# 
  2774  000C                     	;# 
  2775  000D                     	;# 
  2776  000E                     	;# 
  2777  0010                     	;# 
  2778  0011                     	;# 
  2779  0012                     	;# 
  2780  0013                     	;# 
  2781  0014                     	;# 
  2782  0015                     	;# 
  2783  0016                     	;# 
  2784  0016                     	;# 
  2785  0017                     	;# 
  2786  0018                     	;# 
  2787  0019                     	;# 
  2788  001A                     	;# 
  2789  001A                     	;# 
  2790  001B                     	;# 
  2791  001B                     	;# 
  2792  001C                     	;# 
  2793  001D                     	;# 
  2794  001E                     	;# 
  2795  001F                     	;# 
  2796  008C                     	;# 
  2797  008D                     	;# 
  2798  008E                     	;# 
  2799  0090                     	;# 
  2800  0091                     	;# 
  2801  0092                     	;# 
  2802  0093                     	;# 
  2803  0094                     	;# 
  2804  0095                     	;# 
  2805  0096                     	;# 
  2806  0098                     	;# 
  2807  0099                     	;# 
  2808  009A                     	;# 
  2809  009B                     	;# 
  2810  009B                     	;# 
  2811  009C                     	;# 
  2812  009D                     	;# 
  2813  009E                     	;# 
  2814  009F                     	;# 
  2815  010C                     	;# 
  2816  010D                     	;# 
  2817  010E                     	;# 
  2818  0111                     	;# 
  2819  0112                     	;# 
  2820  0113                     	;# 
  2821  0114                     	;# 
  2822  0115                     	;# 
  2823  0116                     	;# 
  2824  0117                     	;# 
  2825  0118                     	;# 
  2826  0119                     	;# 
  2827  011C                     	;# 
  2828  018C                     	;# 
  2829  018D                     	;# 
  2830  018E                     	;# 
  2831  0191                     	;# 
  2832  0191                     	;# 
  2833  0192                     	;# 
  2834  0193                     	;# 
  2835  0193                     	;# 
  2836  0194                     	;# 
  2837  0195                     	;# 
  2838  0196                     	;# 
  2839  0197                     	;# 
  2840  0199                     	;# 
  2841  0199                     	;# 
  2842  0199                     	;# 
  2843  019A                     	;# 
  2844  019A                     	;# 
  2845  019A                     	;# 
  2846  019B                     	;# 
  2847  019B                     	;# 
  2848  019B                     	;# 
  2849  019B                     	;# 
  2850  019B                     	;# 
  2851  019C                     	;# 
  2852  019C                     	;# 
  2853  019C                     	;# 
  2854  019D                     	;# 
  2855  019D                     	;# 
  2856  019D                     	;# 
  2857  019E                     	;# 
  2858  019E                     	;# 
  2859  019E                     	;# 
  2860  019F                     	;# 
  2861  019F                     	;# 
  2862  019F                     	;# 
  2863  019F                     	;# 
  2864  019F                     	;# 
  2865  020C                     	;# 
  2866  020D                     	;# 
  2867  020E                     	;# 
  2868  0211                     	;# 
  2869  0211                     	;# 
  2870  0212                     	;# 
  2871  0212                     	;# 
  2872  0213                     	;# 
  2873  0213                     	;# 
  2874  0214                     	;# 
  2875  0214                     	;# 
  2876  0215                     	;# 
  2877  0215                     	;# 
  2878  0215                     	;# 
  2879  0215                     	;# 
  2880  0216                     	;# 
  2881  0216                     	;# 
  2882  0217                     	;# 
  2883  0217                     	;# 
  2884  028C                     	;# 
  2885  028D                     	;# 
  2886  028E                     	;# 
  2887  0291                     	;# 
  2888  0291                     	;# 
  2889  0292                     	;# 
  2890  0293                     	;# 
  2891  0294                     	;# 
  2892  0298                     	;# 
  2893  0298                     	;# 
  2894  0299                     	;# 
  2895  029A                     	;# 
  2896  029B                     	;# 
  2897  029E                     	;# 
  2898  030C                     	;# 
  2899  030D                     	;# 
  2900  030E                     	;# 
  2901  038C                     	;# 
  2902  038D                     	;# 
  2903  038E                     	;# 
  2904  0391                     	;# 
  2905  0392                     	;# 
  2906  0393                     	;# 
  2907  0394                     	;# 
  2908  0395                     	;# 
  2909  0396                     	;# 
  2910  0397                     	;# 
  2911  0398                     	;# 
  2912  0399                     	;# 
  2913  040E                     	;# 
  2914  0413                     	;# 
  2915  0413                     	;# 
  2916  0414                     	;# 
  2917  0414                     	;# 
  2918  0415                     	;# 
  2919  0416                     	;# 
  2920  0417                     	;# 
  2921  0418                     	;# 
  2922  041A                     	;# 
  2923  041A                     	;# 
  2924  041B                     	;# 
  2925  041B                     	;# 
  2926  041C                     	;# 
  2927  041D                     	;# 
  2928  041E                     	;# 
  2929  041F                     	;# 
  2930  0493                     	;# 
  2931  0494                     	;# 
  2932  0495                     	;# 
  2933  0496                     	;# 
  2934  049A                     	;# 
  2935  049B                     	;# 
  2936  049C                     	;# 
  2937  049D                     	;# 
  2938  058C                     	;# 
  2939  058C                     	;# 
  2940  058D                     	;# 
  2941  058E                     	;# 
  2942  058E                     	;# 
  2943  058F                     	;# 
  2944  0590                     	;# 
  2945  0590                     	;# 
  2946  0591                     	;# 
  2947  0592                     	;# 
  2948  0592                     	;# 
  2949  0593                     	;# 
  2950  0594                     	;# 
  2951  0594                     	;# 
  2952  0595                     	;# 
  2953  0596                     	;# 
  2954  0596                     	;# 
  2955  0597                     	;# 
  2956  0598                     	;# 
  2957  0599                     	;# 
  2958  059A                     	;# 
  2959  059B                     	;# 
  2960  059B                     	;# 
  2961  059C                     	;# 
  2962  059D                     	;# 
  2963  060C                     	;# 
  2964  060C                     	;# 
  2965  060D                     	;# 
  2966  060E                     	;# 
  2967  060F                     	;# 
  2968  060F                     	;# 
  2969  0610                     	;# 
  2970  0611                     	;# 
  2971  0612                     	;# 
  2972  0613                     	;# 
  2973  0614                     	;# 
  2974  0617                     	;# 
  2975  0617                     	;# 
  2976  0618                     	;# 
  2977  0619                     	;# 
  2978  061A                     	;# 
  2979  061A                     	;# 
  2980  061B                     	;# 
  2981  061C                     	;# 
  2982  0691                     	;# 
  2983  0692                     	;# 
  2984  0693                     	;# 
  2985  0694                     	;# 
  2986  0695                     	;# 
  2987  0696                     	;# 
  2988  0697                     	;# 
  2989  0699                     	;# 
  2990  069A                     	;# 
  2991  0711                     	;# 
  2992  0712                     	;# 
  2993  0713                     	;# 
  2994  0714                     	;# 
  2995  0715                     	;# 
  2996  0718                     	;# 
  2997  0718                     	;# 
  2998  0719                     	;# 
  2999  071A                     	;# 
  3000  071A                     	;# 
  3001  071B                     	;# 
  3002  071C                     	;# 
  3003  071D                     	;# 
  3004  0791                     	;# 
  3005  0791                     	;# 
  3006  0792                     	;# 
  3007  0793                     	;# 
  3008  0793                     	;# 
  3009  0794                     	;# 
  3010  0795                     	;# 
  3011  0795                     	;# 
  3012  0796                     	;# 
  3013  0797                     	;# 
  3014  0797                     	;# 
  3015  0798                     	;# 
  3016  0799                     	;# 
  3017  079A                     	;# 
  3018  080C                     	;# 
  3019  080C                     	;# 
  3020  080D                     	;# 
  3021  080E                     	;# 
  3022  080E                     	;# 
  3023  080F                     	;# 
  3024  0810                     	;# 
  3025  0810                     	;# 
  3026  0811                     	;# 
  3027  0812                     	;# 
  3028  0812                     	;# 
  3029  0813                     	;# 
  3030  0814                     	;# 
  3031  0815                     	;# 
  3032  0816                     	;# 
  3033  0817                     	;# 
  3034  0818                     	;# 
  3035  0819                     	;# 
  3036  081A                     	;# 
  3037  081A                     	;# 
  3038  081B                     	;# 
  3039  081C                     	;# 
  3040  081C                     	;# 
  3041  081D                     	;# 
  3042  088C                     	;# 
  3043  088D                     	;# 
  3044  088E                     	;# 
  3045  088F                     	;# 
  3046  088F                     	;# 
  3047  0890                     	;# 
  3048  0891                     	;# 
  3049  0892                     	;# 
  3050  0893                     	;# 
  3051  0893                     	;# 
  3052  0894                     	;# 
  3053  0895                     	;# 
  3054  0896                     	;# 
  3055  0897                     	;# 
  3056  0897                     	;# 
  3057  0898                     	;# 
  3058  0899                     	;# 
  3059  0D8C                     	;# 
  3060  0D8C                     	;# 
  3061  0D8D                     	;# 
  3062  0D8E                     	;# 
  3063  0D8F                     	;# 
  3064  0D8F                     	;# 
  3065  0D90                     	;# 
  3066  0D91                     	;# 
  3067  0D92                     	;# 
  3068  0D92                     	;# 
  3069  0D93                     	;# 
  3070  0D94                     	;# 
  3071  0D95                     	;# 
  3072  0D95                     	;# 
  3073  0D96                     	;# 
  3074  0D97                     	;# 
  3075  0D98                     	;# 
  3076  0D99                     	;# 
  3077  0D9A                     	;# 
  3078  0D9B                     	;# 
  3079  0D9C                     	;# 
  3080  0D9D                     	;# 
  3081  0D9E                     	;# 
  3082  0D9E                     	;# 
  3083  0D9F                     	;# 
  3084  0DA0                     	;# 
  3085  0DA1                     	;# 
  3086  0DA1                     	;# 
  3087  0DA2                     	;# 
  3088  0DA3                     	;# 
  3089  0DA4                     	;# 
  3090  0DA4                     	;# 
  3091  0DA5                     	;# 
  3092  0DA6                     	;# 
  3093  0DA7                     	;# 
  3094  0DA7                     	;# 
  3095  0DA8                     	;# 
  3096  0DA9                     	;# 
  3097  0DAA                     	;# 
  3098  0DAB                     	;# 
  3099  0DAC                     	;# 
  3100  0DAD                     	;# 
  3101  0DAE                     	;# 
  3102  0DAF                     	;# 
  3103  0E0F                     	;# 
  3104  0E10                     	;# 
  3105  0E11                     	;# 
  3106  0E12                     	;# 
  3107  0E13                     	;# 
  3108  0E14                     	;# 
  3109  0E15                     	;# 
  3110  0E16                     	;# 
  3111  0E17                     	;# 
  3112  0E18                     	;# 
  3113  0E19                     	;# 
  3114  0E1A                     	;# 
  3115  0E1B                     	;# 
  3116  0E1C                     	;# 
  3117  0E1D                     	;# 
  3118  0E1E                     	;# 
  3119  0E1F                     	;# 
  3120  0E20                     	;# 
  3121  0E21                     	;# 
  3122  0E22                     	;# 
  3123  0E23                     	;# 
  3124  0E24                     	;# 
  3125  0E25                     	;# 
  3126  0E26                     	;# 
  3127  0E27                     	;# 
  3128  0E28                     	;# 
  3129  0E29                     	;# 
  3130  0E2A                     	;# 
  3131  0E2B                     	;# 
  3132  0E2C                     	;# 
  3133  0E2D                     	;# 
  3134  0E2E                     	;# 
  3135  0E90                     	;# 
  3136  0E91                     	;# 
  3137  0E92                     	;# 
  3138  0E94                     	;# 
  3139  0E95                     	;# 
  3140  0E9C                     	;# 
  3141  0E9D                     	;# 
  3142  0E9E                     	;# 
  3143  0E9F                     	;# 
  3144  0EA0                     	;# 
  3145  0EA1                     	;# 
  3146  0EA2                     	;# 
  3147  0EA3                     	;# 
  3148  0EA4                     	;# 
  3149  0EA5                     	;# 
  3150  0EA6                     	;# 
  3151  0EA7                     	;# 
  3152  0F0F                     	;# 
  3153  0F10                     	;# 
  3154  0F11                     	;# 
  3155  0F12                     	;# 
  3156  0F13                     	;# 
  3157  0F14                     	;# 
  3158  0F15                     	;# 
  3159  0F16                     	;# 
  3160  0F17                     	;# 
  3161  0F18                     	;# 
  3162  0F19                     	;# 
  3163  0F1A                     	;# 
  3164  0F1B                     	;# 
  3165  0F1C                     	;# 
  3166  0F1D                     	;# 
  3167  0F1E                     	;# 
  3168  0F1F                     	;# 
  3169  0F20                     	;# 
  3170  0F21                     	;# 
  3171  0F22                     	;# 
  3172  0F23                     	;# 
  3173  0F24                     	;# 
  3174  0F25                     	;# 
  3175  0F26                     	;# 
  3176  0F27                     	;# 
  3177  0F28                     	;# 
  3178  0F29                     	;# 
  3179  0F2A                     	;# 
  3180  0F2B                     	;# 
  3181  0F2C                     	;# 
  3182  0F2D                     	;# 
  3183  0F2E                     	;# 
  3184  0F2F                     	;# 
  3185  0F30                     	;# 
  3186  0F31                     	;# 
  3187  0F32                     	;# 
  3188  0F33                     	;# 
  3189  0F34                     	;# 
  3190  0F35                     	;# 
  3191  0F36                     	;# 
  3192  0F37                     	;# 
  3193  0FE4                     	;# 
  3194  0FE5                     	;# 
  3195  0FE6                     	;# 
  3196  0FE7                     	;# 
  3197  0FE8                     	;# 
  3198  0FE9                     	;# 
  3199  0FEA                     	;# 
  3200  0FEB                     	;# 
  3201  0FED                     	;# 
  3202  0FEE                     	;# 
  3203  0FEF                     	;# 
  3204  0000                     	;# 
  3205  0001                     	;# 
  3206  0002                     	;# 
  3207  0003                     	;# 
  3208  0004                     	;# 
  3209  0005                     	;# 
  3210  0006                     	;# 
  3211  0007                     	;# 
  3212  0008                     	;# 
  3213  0009                     	;# 
  3214  000A                     	;# 
  3215  000B                     	;# 
  3216  000C                     	;# 
  3217  000D                     	;# 
  3218  000E                     	;# 
  3219  0010                     	;# 
  3220  0011                     	;# 
  3221  0012                     	;# 
  3222  0013                     	;# 
  3223  0014                     	;# 
  3224  0015                     	;# 
  3225  0016                     	;# 
  3226  0016                     	;# 
  3227  0017                     	;# 
  3228  0018                     	;# 
  3229  0019                     	;# 
  3230  001A                     	;# 
  3231  001A                     	;# 
  3232  001B                     	;# 
  3233  001B                     	;# 
  3234  001C                     	;# 
  3235  001D                     	;# 
  3236  001E                     	;# 
  3237  001F                     	;# 
  3238  008C                     	;# 
  3239  008D                     	;# 
  3240  008E                     	;# 
  3241  0090                     	;# 
  3242  0091                     	;# 
  3243  0092                     	;# 
  3244  0093                     	;# 
  3245  0094                     	;# 
  3246  0095                     	;# 
  3247  0096                     	;# 
  3248  0098                     	;# 
  3249  0099                     	;# 
  3250  009A                     	;# 
  3251  009B                     	;# 
  3252  009B                     	;# 
  3253  009C                     	;# 
  3254  009D                     	;# 
  3255  009E                     	;# 
  3256  009F                     	;# 
  3257  010C                     	;# 
  3258  010D                     	;# 
  3259  010E                     	;# 
  3260  0111                     	;# 
  3261  0112                     	;# 
  3262  0113                     	;# 
  3263  0114                     	;# 
  3264  0115                     	;# 
  3265  0116                     	;# 
  3266  0117                     	;# 
  3267  0118                     	;# 
  3268  0119                     	;# 
  3269  011C                     	;# 
  3270  018C                     	;# 
  3271  018D                     	;# 
  3272  018E                     	;# 
  3273  0191                     	;# 
  3274  0191                     	;# 
  3275  0192                     	;# 
  3276  0193                     	;# 
  3277  0193                     	;# 
  3278  0194                     	;# 
  3279  0195                     	;# 
  3280  0196                     	;# 
  3281  0197                     	;# 
  3282  0199                     	;# 
  3283  0199                     	;# 
  3284  0199                     	;# 
  3285  019A                     	;# 
  3286  019A                     	;# 
  3287  019A                     	;# 
  3288  019B                     	;# 
  3289  019B                     	;# 
  3290  019B                     	;# 
  3291  019B                     	;# 
  3292  019B                     	;# 
  3293  019C                     	;# 
  3294  019C                     	;# 
  3295  019C                     	;# 
  3296  019D                     	;# 
  3297  019D                     	;# 
  3298  019D                     	;# 
  3299  019E                     	;# 
  3300  019E                     	;# 
  3301  019E                     	;# 
  3302  019F                     	;# 
  3303  019F                     	;# 
  3304  019F                     	;# 
  3305  019F                     	;# 
  3306  019F                     	;# 
  3307  020C                     	;# 
  3308  020D                     	;# 
  3309  020E                     	;# 
  3310  0211                     	;# 
  3311  0211                     	;# 
  3312  0212                     	;# 
  3313  0212                     	;# 
  3314  0213                     	;# 
  3315  0213                     	;# 
  3316  0214                     	;# 
  3317  0214                     	;# 
  3318  0215                     	;# 
  3319  0215                     	;# 
  3320  0215                     	;# 
  3321  0215                     	;# 
  3322  0216                     	;# 
  3323  0216                     	;# 
  3324  0217                     	;# 
  3325  0217                     	;# 
  3326  028C                     	;# 
  3327  028D                     	;# 
  3328  028E                     	;# 
  3329  0291                     	;# 
  3330  0291                     	;# 
  3331  0292                     	;# 
  3332  0293                     	;# 
  3333  0294                     	;# 
  3334  0298                     	;# 
  3335  0298                     	;# 
  3336  0299                     	;# 
  3337  029A                     	;# 
  3338  029B                     	;# 
  3339  029E                     	;# 
  3340  030C                     	;# 
  3341  030D                     	;# 
  3342  030E                     	;# 
  3343  038C                     	;# 
  3344  038D                     	;# 
  3345  038E                     	;# 
  3346  0391                     	;# 
  3347  0392                     	;# 
  3348  0393                     	;# 
  3349  0394                     	;# 
  3350  0395                     	;# 
  3351  0396                     	;# 
  3352  0397                     	;# 
  3353  0398                     	;# 
  3354  0399                     	;# 
  3355  040E                     	;# 
  3356  0413                     	;# 
  3357  0413                     	;# 
  3358  0414                     	;# 
  3359  0414                     	;# 
  3360  0415                     	;# 
  3361  0416                     	;# 
  3362  0417                     	;# 
  3363  0418                     	;# 
  3364  041A                     	;# 
  3365  041A                     	;# 
  3366  041B                     	;# 
  3367  041B                     	;# 
  3368  041C                     	;# 
  3369  041D                     	;# 
  3370  041E                     	;# 
  3371  041F                     	;# 
  3372  0493                     	;# 
  3373  0494                     	;# 
  3374  0495                     	;# 
  3375  0496                     	;# 
  3376  049A                     	;# 
  3377  049B                     	;# 
  3378  049C                     	;# 
  3379  049D                     	;# 
  3380  058C                     	;# 
  3381  058C                     	;# 
  3382  058D                     	;# 
  3383  058E                     	;# 
  3384  058E                     	;# 
  3385  058F                     	;# 
  3386  0590                     	;# 
  3387  0590                     	;# 
  3388  0591                     	;# 
  3389  0592                     	;# 
  3390  0592                     	;# 
  3391  0593                     	;# 
  3392  0594                     	;# 
  3393  0594                     	;# 
  3394  0595                     	;# 
  3395  0596                     	;# 
  3396  0596                     	;# 
  3397  0597                     	;# 
  3398  0598                     	;# 
  3399  0599                     	;# 
  3400  059A                     	;# 
  3401  059B                     	;# 
  3402  059B                     	;# 
  3403  059C                     	;# 
  3404  059D                     	;# 
  3405  060C                     	;# 
  3406  060C                     	;# 
  3407  060D                     	;# 
  3408  060E                     	;# 
  3409  060F                     	;# 
  3410  060F                     	;# 
  3411  0610                     	;# 
  3412  0611                     	;# 
  3413  0612                     	;# 
  3414  0613                     	;# 
  3415  0614                     	;# 
  3416  0617                     	;# 
  3417  0617                     	;# 
  3418  0618                     	;# 
  3419  0619                     	;# 
  3420  061A                     	;# 
  3421  061A                     	;# 
  3422  061B                     	;# 
  3423  061C                     	;# 
  3424  0691                     	;# 
  3425  0692                     	;# 
  3426  0693                     	;# 
  3427  0694                     	;# 
  3428  0695                     	;# 
  3429  0696                     	;# 
  3430  0697                     	;# 
  3431  0699                     	;# 
  3432  069A                     	;# 
  3433  0711                     	;# 
  3434  0712                     	;# 
  3435  0713                     	;# 
  3436  0714                     	;# 
  3437  0715                     	;# 
  3438  0718                     	;# 
  3439  0718                     	;# 
  3440  0719                     	;# 
  3441  071A                     	;# 
  3442  071A                     	;# 
  3443  071B                     	;# 
  3444  071C                     	;# 
  3445  071D                     	;# 
  3446  0791                     	;# 
  3447  0791                     	;# 
  3448  0792                     	;# 
  3449  0793                     	;# 
  3450  0793                     	;# 
  3451  0794                     	;# 
  3452  0795                     	;# 
  3453  0795                     	;# 
  3454  0796                     	;# 
  3455  0797                     	;# 
  3456  0797                     	;# 
  3457  0798                     	;# 
  3458  0799                     	;# 
  3459  079A                     	;# 
  3460  080C                     	;# 
  3461  080C                     	;# 
  3462  080D                     	;# 
  3463  080E                     	;# 
  3464  080E                     	;# 
  3465  080F                     	;# 
  3466  0810                     	;# 
  3467  0810                     	;# 
  3468  0811                     	;# 
  3469  0812                     	;# 
  3470  0812                     	;# 
  3471  0813                     	;# 
  3472  0814                     	;# 
  3473  0815                     	;# 
  3474  0816                     	;# 
  3475  0817                     	;# 
  3476  0818                     	;# 
  3477  0819                     	;# 
  3478  081A                     	;# 
  3479  081A                     	;# 
  3480  081B                     	;# 
  3481  081C                     	;# 
  3482  081C                     	;# 
  3483  081D                     	;# 
  3484  088C                     	;# 
  3485  088D                     	;# 
  3486  088E                     	;# 
  3487  088F                     	;# 
  3488  088F                     	;# 
  3489  0890                     	;# 
  3490  0891                     	;# 
  3491  0892                     	;# 
  3492  0893                     	;# 
  3493  0893                     	;# 
  3494  0894                     	;# 
  3495  0895                     	;# 
  3496  0896                     	;# 
  3497  0897                     	;# 
  3498  0897                     	;# 
  3499  0898                     	;# 
  3500  0899                     	;# 
  3501  0D8C                     	;# 
  3502  0D8C                     	;# 
  3503  0D8D                     	;# 
  3504  0D8E                     	;# 
  3505  0D8F                     	;# 
  3506  0D8F                     	;# 
  3507  0D90                     	;# 
  3508  0D91                     	;# 
  3509  0D92                     	;# 
  3510  0D92                     	;# 
  3511  0D93                     	;# 
  3512  0D94                     	;# 
  3513  0D95                     	;# 
  3514  0D95                     	;# 
  3515  0D96                     	;# 
  3516  0D97                     	;# 
  3517  0D98                     	;# 
  3518  0D99                     	;# 
  3519  0D9A                     	;# 
  3520  0D9B                     	;# 
  3521  0D9C                     	;# 
  3522  0D9D                     	;# 
  3523  0D9E                     	;# 
  3524  0D9E                     	;# 
  3525  0D9F                     	;# 
  3526  0DA0                     	;# 
  3527  0DA1                     	;# 
  3528  0DA1                     	;# 
  3529  0DA2                     	;# 
  3530  0DA3                     	;# 
  3531  0DA4                     	;# 
  3532  0DA4                     	;# 
  3533  0DA5                     	;# 
  3534  0DA6                     	;# 
  3535  0DA7                     	;# 
  3536  0DA7                     	;# 
  3537  0DA8                     	;# 
  3538  0DA9                     	;# 
  3539  0DAA                     	;# 
  3540  0DAB                     	;# 
  3541  0DAC                     	;# 
  3542  0DAD                     	;# 
  3543  0DAE                     	;# 
  3544  0DAF                     	;# 
  3545  0E0F                     	;# 
  3546  0E10                     	;# 
  3547  0E11                     	;# 
  3548  0E12                     	;# 
  3549  0E13                     	;# 
  3550  0E14                     	;# 
  3551  0E15                     	;# 
  3552  0E16                     	;# 
  3553  0E17                     	;# 
  3554  0E18                     	;# 
  3555  0E19                     	;# 
  3556  0E1A                     	;# 
  3557  0E1B                     	;# 
  3558  0E1C                     	;# 
  3559  0E1D                     	;# 
  3560  0E1E                     	;# 
  3561  0E1F                     	;# 
  3562  0E20                     	;# 
  3563  0E21                     	;# 
  3564  0E22                     	;# 
  3565  0E23                     	;# 
  3566  0E24                     	;# 
  3567  0E25                     	;# 
  3568  0E26                     	;# 
  3569  0E27                     	;# 
  3570  0E28                     	;# 
  3571  0E29                     	;# 
  3572  0E2A                     	;# 
  3573  0E2B                     	;# 
  3574  0E2C                     	;# 
  3575  0E2D                     	;# 
  3576  0E2E                     	;# 
  3577  0E90                     	;# 
  3578  0E91                     	;# 
  3579  0E92                     	;# 
  3580  0E94                     	;# 
  3581  0E95                     	;# 
  3582  0E9C                     	;# 
  3583  0E9D                     	;# 
  3584  0E9E                     	;# 
  3585  0E9F                     	;# 
  3586  0EA0                     	;# 
  3587  0EA1                     	;# 
  3588  0EA2                     	;# 
  3589  0EA3                     	;# 
  3590  0EA4                     	;# 
  3591  0EA5                     	;# 
  3592  0EA6                     	;# 
  3593  0EA7                     	;# 
  3594  0F0F                     	;# 
  3595  0F10                     	;# 
  3596  0F11                     	;# 
  3597  0F12                     	;# 
  3598  0F13                     	;# 
  3599  0F14                     	;# 
  3600  0F15                     	;# 
  3601  0F16                     	;# 
  3602  0F17                     	;# 
  3603  0F18                     	;# 
  3604  0F19                     	;# 
  3605  0F1A                     	;# 
  3606  0F1B                     	;# 
  3607  0F1C                     	;# 
  3608  0F1D                     	;# 
  3609  0F1E                     	;# 
  3610  0F1F                     	;# 
  3611  0F20                     	;# 
  3612  0F21                     	;# 
  3613  0F22                     	;# 
  3614  0F23                     	;# 
  3615  0F24                     	;# 
  3616  0F25                     	;# 
  3617  0F26                     	;# 
  3618  0F27                     	;# 
  3619  0F28                     	;# 
  3620  0F29                     	;# 
  3621  0F2A                     	;# 
  3622  0F2B                     	;# 
  3623  0F2C                     	;# 
  3624  0F2D                     	;# 
  3625  0F2E                     	;# 
  3626  0F2F                     	;# 
  3627  0F30                     	;# 
  3628  0F31                     	;# 
  3629  0F32                     	;# 
  3630  0F33                     	;# 
  3631  0F34                     	;# 
  3632  0F35                     	;# 
  3633  0F36                     	;# 
  3634  0F37                     	;# 
  3635  0FE4                     	;# 
  3636  0FE5                     	;# 
  3637  0FE6                     	;# 
  3638  0FE7                     	;# 
  3639  0FE8                     	;# 
  3640  0FE9                     	;# 
  3641  0FEA                     	;# 
  3642  0FEB                     	;# 
  3643  0FED                     	;# 
  3644  0FEE                     	;# 
  3645  0FEF                     	;# 
  3646  0000                     	;# 
  3647  0001                     	;# 
  3648  0002                     	;# 
  3649  0003                     	;# 
  3650  0004                     	;# 
  3651  0005                     	;# 
  3652  0006                     	;# 
  3653  0007                     	;# 
  3654  0008                     	;# 
  3655  0009                     	;# 
  3656  000A                     	;# 
  3657  000B                     	;# 
  3658  000C                     	;# 
  3659  000D                     	;# 
  3660  000E                     	;# 
  3661  0010                     	;# 
  3662  0011                     	;# 
  3663  0012                     	;# 
  3664  0013                     	;# 
  3665  0014                     	;# 
  3666  0015                     	;# 
  3667  0016                     	;# 
  3668  0016                     	;# 
  3669  0017                     	;# 
  3670  0018                     	;# 
  3671  0019                     	;# 
  3672  001A                     	;# 
  3673  001A                     	;# 
  3674  001B                     	;# 
  3675  001B                     	;# 
  3676  001C                     	;# 
  3677  001D                     	;# 
  3678  001E                     	;# 
  3679  001F                     	;# 
  3680  008C                     	;# 
  3681  008D                     	;# 
  3682  008E                     	;# 
  3683  0090                     	;# 
  3684  0091                     	;# 
  3685  0092                     	;# 
  3686  0093                     	;# 
  3687  0094                     	;# 
  3688  0095                     	;# 
  3689  0096                     	;# 
  3690  0098                     	;# 
  3691  0099                     	;# 
  3692  009A                     	;# 
  3693  009B                     	;# 
  3694  009B                     	;# 
  3695  009C                     	;# 
  3696  009D                     	;# 
  3697  009E                     	;# 
  3698  009F                     	;# 
  3699  010C                     	;# 
  3700  010D                     	;# 
  3701  010E                     	;# 
  3702  0111                     	;# 
  3703  0112                     	;# 
  3704  0113                     	;# 
  3705  0114                     	;# 
  3706  0115                     	;# 
  3707  0116                     	;# 
  3708  0117                     	;# 
  3709  0118                     	;# 
  3710  0119                     	;# 
  3711  011C                     	;# 
  3712  018C                     	;# 
  3713  018D                     	;# 
  3714  018E                     	;# 
  3715  0191                     	;# 
  3716  0191                     	;# 
  3717  0192                     	;# 
  3718  0193                     	;# 
  3719  0193                     	;# 
  3720  0194                     	;# 
  3721  0195                     	;# 
  3722  0196                     	;# 
  3723  0197                     	;# 
  3724  0199                     	;# 
  3725  0199                     	;# 
  3726  0199                     	;# 
  3727  019A                     	;# 
  3728  019A                     	;# 
  3729  019A                     	;# 
  3730  019B                     	;# 
  3731  019B                     	;# 
  3732  019B                     	;# 
  3733  019B                     	;# 
  3734  019B                     	;# 
  3735  019C                     	;# 
  3736  019C                     	;# 
  3737  019C                     	;# 
  3738  019D                     	;# 
  3739  019D                     	;# 
  3740  019D                     	;# 
  3741  019E                     	;# 
  3742  019E                     	;# 
  3743  019E                     	;# 
  3744  019F                     	;# 
  3745  019F                     	;# 
  3746  019F                     	;# 
  3747  019F                     	;# 
  3748  019F                     	;# 
  3749  020C                     	;# 
  3750  020D                     	;# 
  3751  020E                     	;# 
  3752  0211                     	;# 
  3753  0211                     	;# 
  3754  0212                     	;# 
  3755  0212                     	;# 
  3756  0213                     	;# 
  3757  0213                     	;# 
  3758  0214                     	;# 
  3759  0214                     	;# 
  3760  0215                     	;# 
  3761  0215                     	;# 
  3762  0215                     	;# 
  3763  0215                     	;# 
  3764  0216                     	;# 
  3765  0216                     	;# 
  3766  0217                     	;# 
  3767  0217                     	;# 
  3768  028C                     	;# 
  3769  028D                     	;# 
  3770  028E                     	;# 
  3771  0291                     	;# 
  3772  0291                     	;# 
  3773  0292                     	;# 
  3774  0293                     	;# 
  3775  0294                     	;# 
  3776  0298                     	;# 
  3777  0298                     	;# 
  3778  0299                     	;# 
  3779  029A                     	;# 
  3780  029B                     	;# 
  3781  029E                     	;# 
  3782  030C                     	;# 
  3783  030D                     	;# 
  3784  030E                     	;# 
  3785  038C                     	;# 
  3786  038D                     	;# 
  3787  038E                     	;# 
  3788  0391                     	;# 
  3789  0392                     	;# 
  3790  0393                     	;# 
  3791  0394                     	;# 
  3792  0395                     	;# 
  3793  0396                     	;# 
  3794  0397                     	;# 
  3795  0398                     	;# 
  3796  0399                     	;# 
  3797  040E                     	;# 
  3798  0413                     	;# 
  3799  0413                     	;# 
  3800  0414                     	;# 
  3801  0414                     	;# 
  3802  0415                     	;# 
  3803  0416                     	;# 
  3804  0417                     	;# 
  3805  0418                     	;# 
  3806  041A                     	;# 
  3807  041A                     	;# 
  3808  041B                     	;# 
  3809  041B                     	;# 
  3810  041C                     	;# 
  3811  041D                     	;# 
  3812  041E                     	;# 
  3813  041F                     	;# 
  3814  0493                     	;# 
  3815  0494                     	;# 
  3816  0495                     	;# 
  3817  0496                     	;# 
  3818  049A                     	;# 
  3819  049B                     	;# 
  3820  049C                     	;# 
  3821  049D                     	;# 
  3822  058C                     	;# 
  3823  058C                     	;# 
  3824  058D                     	;# 
  3825  058E                     	;# 
  3826  058E                     	;# 
  3827  058F                     	;# 
  3828  0590                     	;# 
  3829  0590                     	;# 
  3830  0591                     	;# 
  3831  0592                     	;# 
  3832  0592                     	;# 
  3833  0593                     	;# 
  3834  0594                     	;# 
  3835  0594                     	;# 
  3836  0595                     	;# 
  3837  0596                     	;# 
  3838  0596                     	;# 
  3839  0597                     	;# 
  3840  0598                     	;# 
  3841  0599                     	;# 
  3842  059A                     	;# 
  3843  059B                     	;# 
  3844  059B                     	;# 
  3845  059C                     	;# 
  3846  059D                     	;# 
  3847  060C                     	;# 
  3848  060C                     	;# 
  3849  060D                     	;# 
  3850  060E                     	;# 
  3851  060F                     	;# 
  3852  060F                     	;# 
  3853  0610                     	;# 
  3854  0611                     	;# 
  3855  0612                     	;# 
  3856  0613                     	;# 
  3857  0614                     	;# 
  3858  0617                     	;# 
  3859  0617                     	;# 
  3860  0618                     	;# 
  3861  0619                     	;# 
  3862  061A                     	;# 
  3863  061A                     	;# 
  3864  061B                     	;# 
  3865  061C                     	;# 
  3866  0691                     	;# 
  3867  0692                     	;# 
  3868  0693                     	;# 
  3869  0694                     	;# 
  3870  0695                     	;# 
  3871  0696                     	;# 
  3872  0697                     	;# 
  3873  0699                     	;# 
  3874  069A                     	;# 
  3875  0711                     	;# 
  3876  0712                     	;# 
  3877  0713                     	;# 
  3878  0714                     	;# 
  3879  0715                     	;# 
  3880  0718                     	;# 
  3881  0718                     	;# 
  3882  0719                     	;# 
  3883  071A                     	;# 
  3884  071A                     	;# 
  3885  071B                     	;# 
  3886  071C                     	;# 
  3887  071D                     	;# 
  3888  0791                     	;# 
  3889  0791                     	;# 
  3890  0792                     	;# 
  3891  0793                     	;# 
  3892  0793                     	;# 
  3893  0794                     	;# 
  3894  0795                     	;# 
  3895  0795                     	;# 
  3896  0796                     	;# 
  3897  0797                     	;# 
  3898  0797                     	;# 
  3899  0798                     	;# 
  3900  0799                     	;# 
  3901  079A                     	;# 
  3902  080C                     	;# 
  3903  080C                     	;# 
  3904  080D                     	;# 
  3905  080E                     	;# 
  3906  080E                     	;# 
  3907  080F                     	;# 
  3908  0810                     	;# 
  3909  0810                     	;# 
  3910  0811                     	;# 
  3911  0812                     	;# 
  3912  0812                     	;# 
  3913  0813                     	;# 
  3914  0814                     	;# 
  3915  0815                     	;# 
  3916  0816                     	;# 
  3917  0817                     	;# 
  3918  0818                     	;# 
  3919  0819                     	;# 
  3920  081A                     	;# 
  3921  081A                     	;# 
  3922  081B                     	;# 
  3923  081C                     	;# 
  3924  081C                     	;# 
  3925  081D                     	;# 
  3926  088C                     	;# 
  3927  088D                     	;# 
  3928  088E                     	;# 
  3929  088F                     	;# 
  3930  088F                     	;# 
  3931  0890                     	;# 
  3932  0891                     	;# 
  3933  0892                     	;# 
  3934  0893                     	;# 
  3935  0893                     	;# 
  3936  0894                     	;# 
  3937  0895                     	;# 
  3938  0896                     	;# 
  3939  0897                     	;# 
  3940  0897                     	;# 
  3941  0898                     	;# 
  3942  0899                     	;# 
  3943  0D8C                     	;# 
  3944  0D8C                     	;# 
  3945  0D8D                     	;# 
  3946  0D8E                     	;# 
  3947  0D8F                     	;# 
  3948  0D8F                     	;# 
  3949  0D90                     	;# 
  3950  0D91                     	;# 
  3951  0D92                     	;# 
  3952  0D92                     	;# 
  3953  0D93                     	;# 
  3954  0D94                     	;# 
  3955  0D95                     	;# 
  3956  0D95                     	;# 
  3957  0D96                     	;# 
  3958  0D97                     	;# 
  3959  0D98                     	;# 
  3960  0D99                     	;# 
  3961  0D9A                     	;# 
  3962  0D9B                     	;# 
  3963  0D9C                     	;# 
  3964  0D9D                     	;# 
  3965  0D9E                     	;# 
  3966  0D9E                     	;# 
  3967  0D9F                     	;# 
  3968  0DA0                     	;# 
  3969  0DA1                     	;# 
  3970  0DA1                     	;# 
  3971  0DA2                     	;# 
  3972  0DA3                     	;# 
  3973  0DA4                     	;# 
  3974  0DA4                     	;# 
  3975  0DA5                     	;# 
  3976  0DA6                     	;# 
  3977  0DA7                     	;# 
  3978  0DA7                     	;# 
  3979  0DA8                     	;# 
  3980  0DA9                     	;# 
  3981  0DAA                     	;# 
  3982  0DAB                     	;# 
  3983  0DAC                     	;# 
  3984  0DAD                     	;# 
  3985  0DAE                     	;# 
  3986  0DAF                     	;# 
  3987  0E0F                     	;# 
  3988  0E10                     	;# 
  3989  0E11                     	;# 
  3990  0E12                     	;# 
  3991  0E13                     	;# 
  3992  0E14                     	;# 
  3993  0E15                     	;# 
  3994  0E16                     	;# 
  3995  0E17                     	;# 
  3996  0E18                     	;# 
  3997  0E19                     	;# 
  3998  0E1A                     	;# 
  3999  0E1B                     	;# 
  4000  0E1C                     	;# 
  4001  0E1D                     	;# 
  4002  0E1E                     	;# 
  4003  0E1F                     	;# 
  4004  0E20                     	;# 
  4005  0E21                     	;# 
  4006  0E22                     	;# 
  4007  0E23                     	;# 
  4008  0E24                     	;# 
  4009  0E25                     	;# 
  4010  0E26                     	;# 
  4011  0E27                     	;# 
  4012  0E28                     	;# 
  4013  0E29                     	;# 
  4014  0E2A                     	;# 
  4015  0E2B                     	;# 
  4016  0E2C                     	;# 
  4017  0E2D                     	;# 
  4018  0E2E                     	;# 
  4019  0E90                     	;# 
  4020  0E91                     	;# 
  4021  0E92                     	;# 
  4022  0E94                     	;# 
  4023  0E95                     	;# 
  4024  0E9C                     	;# 
  4025  0E9D                     	;# 
  4026  0E9E                     	;# 
  4027  0E9F                     	;# 
  4028  0EA0                     	;# 
  4029  0EA1                     	;# 
  4030  0EA2                     	;# 
  4031  0EA3                     	;# 
  4032  0EA4                     	;# 
  4033  0EA5                     	;# 
  4034  0EA6                     	;# 
  4035  0EA7                     	;# 
  4036  0F0F                     	;# 
  4037  0F10                     	;# 
  4038  0F11                     	;# 
  4039  0F12                     	;# 
  4040  0F13                     	;# 
  4041  0F14                     	;# 
  4042  0F15                     	;# 
  4043  0F16                     	;# 
  4044  0F17                     	;# 
  4045  0F18                     	;# 
  4046  0F19                     	;# 
  4047  0F1A                     	;# 
  4048  0F1B                     	;# 
  4049  0F1C                     	;# 
  4050  0F1D                     	;# 
  4051  0F1E                     	;# 
  4052  0F1F                     	;# 
  4053  0F20                     	;# 
  4054  0F21                     	;# 
  4055  0F22                     	;# 
  4056  0F23                     	;# 
  4057  0F24                     	;# 
  4058  0F25                     	;# 
  4059  0F26                     	;# 
  4060  0F27                     	;# 
  4061  0F28                     	;# 
  4062  0F29                     	;# 
  4063  0F2A                     	;# 
  4064  0F2B                     	;# 
  4065  0F2C                     	;# 
  4066  0F2D                     	;# 
  4067  0F2E                     	;# 
  4068  0F2F                     	;# 
  4069  0F30                     	;# 
  4070  0F31                     	;# 
  4071  0F32                     	;# 
  4072  0F33                     	;# 
  4073  0F34                     	;# 
  4074  0F35                     	;# 
  4075  0F36                     	;# 
  4076  0F37                     	;# 
  4077  0FE4                     	;# 
  4078  0FE5                     	;# 
  4079  0FE6                     	;# 
  4080  0FE7                     	;# 
  4081  0FE8                     	;# 
  4082  0FE9                     	;# 
  4083  0FEA                     	;# 
  4084  0FEB                     	;# 
  4085  0FED                     	;# 
  4086  0FEE                     	;# 
  4087  0FEF                     	;# 
  4088  0000                     	;# 
  4089  0001                     	;# 
  4090  0002                     	;# 
  4091  0003                     	;# 
  4092  0004                     	;# 
  4093  0005                     	;# 
  4094  0006                     	;# 
  4095  0007                     	;# 
  4096  0008                     	;# 
  4097  0009                     	;# 
  4098  000A                     	;# 
  4099  000B                     	;# 
  4100  000C                     	;# 
  4101  000D                     	;# 
  4102  000E                     	;# 
  4103  0010                     	;# 
  4104  0011                     	;# 
  4105  0012                     	;# 
  4106  0013                     	;# 
  4107  0014                     	;# 
  4108  0015                     	;# 
  4109  0016                     	;# 
  4110  0016                     	;# 
  4111  0017                     	;# 
  4112  0018                     	;# 
  4113  0019                     	;# 
  4114  001A                     	;# 
  4115  001A                     	;# 
  4116  001B                     	;# 
  4117  001B                     	;# 
  4118  001C                     	;# 
  4119  001D                     	;# 
  4120  001E                     	;# 
  4121  001F                     	;# 
  4122  008C                     	;# 
  4123  008D                     	;# 
  4124  008E                     	;# 
  4125  0090                     	;# 
  4126  0091                     	;# 
  4127  0092                     	;# 
  4128  0093                     	;# 
  4129  0094                     	;# 
  4130  0095                     	;# 
  4131  0096                     	;# 
  4132  0098                     	;# 
  4133  0099                     	;# 
  4134  009A                     	;# 
  4135  009B                     	;# 
  4136  009B                     	;# 
  4137  009C                     	;# 
  4138  009D                     	;# 
  4139  009E                     	;# 
  4140  009F                     	;# 
  4141  010C                     	;# 
  4142  010D                     	;# 
  4143  010E                     	;# 
  4144  0111                     	;# 
  4145  0112                     	;# 
  4146  0113                     	;# 
  4147  0114                     	;# 
  4148  0115                     	;# 
  4149  0116                     	;# 
  4150  0117                     	;# 
  4151  0118                     	;# 
  4152  0119                     	;# 
  4153  011C                     	;# 
  4154  018C                     	;# 
  4155  018D                     	;# 
  4156  018E                     	;# 
  4157  0191                     	;# 
  4158  0191                     	;# 
  4159  0192                     	;# 
  4160  0193                     	;# 
  4161  0193                     	;# 
  4162  0194                     	;# 
  4163  0195                     	;# 
  4164  0196                     	;# 
  4165  0197                     	;# 
  4166  0199                     	;# 
  4167  0199                     	;# 
  4168  0199                     	;# 
  4169  019A                     	;# 
  4170  019A                     	;# 
  4171  019A                     	;# 
  4172  019B                     	;# 
  4173  019B                     	;# 
  4174  019B                     	;# 
  4175  019B                     	;# 
  4176  019B                     	;# 
  4177  019C                     	;# 
  4178  019C                     	;# 
  4179  019C                     	;# 
  4180  019D                     	;# 
  4181  019D                     	;# 
  4182  019D                     	;# 
  4183  019E                     	;# 
  4184  019E                     	;# 
  4185  019E                     	;# 
  4186  019F                     	;# 
  4187  019F                     	;# 
  4188  019F                     	;# 
  4189  019F                     	;# 
  4190  019F                     	;# 
  4191  020C                     	;# 
  4192  020D                     	;# 
  4193  020E                     	;# 
  4194  0211                     	;# 
  4195  0211                     	;# 
  4196  0212                     	;# 
  4197  0212                     	;# 
  4198  0213                     	;# 
  4199  0213                     	;# 
  4200  0214                     	;# 
  4201  0214                     	;# 
  4202  0215                     	;# 
  4203  0215                     	;# 
  4204  0215                     	;# 
  4205  0215                     	;# 
  4206  0216                     	;# 
  4207  0216                     	;# 
  4208  0217                     	;# 
  4209  0217                     	;# 
  4210  028C                     	;# 
  4211  028D                     	;# 
  4212  028E                     	;# 
  4213  0291                     	;# 
  4214  0291                     	;# 
  4215  0292                     	;# 
  4216  0293                     	;# 
  4217  0294                     	;# 
  4218  0298                     	;# 
  4219  0298                     	;# 
  4220  0299                     	;# 
  4221  029A                     	;# 
  4222  029B                     	;# 
  4223  029E                     	;# 
  4224  030C                     	;# 
  4225  030D                     	;# 
  4226  030E                     	;# 
  4227  038C                     	;# 
  4228  038D                     	;# 
  4229  038E                     	;# 
  4230  0391                     	;# 
  4231  0392                     	;# 
  4232  0393                     	;# 
  4233  0394                     	;# 
  4234  0395                     	;# 
  4235  0396                     	;# 
  4236  0397                     	;# 
  4237  0398                     	;# 
  4238  0399                     	;# 
  4239  040E                     	;# 
  4240  0413                     	;# 
  4241  0413                     	;# 
  4242  0414                     	;# 
  4243  0414                     	;# 
  4244  0415                     	;# 
  4245  0416                     	;# 
  4246  0417                     	;# 
  4247  0418                     	;# 
  4248  041A                     	;# 
  4249  041A                     	;# 
  4250  041B                     	;# 
  4251  041B                     	;# 
  4252  041C                     	;# 
  4253  041D                     	;# 
  4254  041E                     	;# 
  4255  041F                     	;# 
  4256  0493                     	;# 
  4257  0494                     	;# 
  4258  0495                     	;# 
  4259  0496                     	;# 
  4260  049A                     	;# 
  4261  049B                     	;# 
  4262  049C                     	;# 
  4263  049D                     	;# 
  4264  058C                     	;# 
  4265  058C                     	;# 
  4266  058D                     	;# 
  4267  058E                     	;# 
  4268  058E                     	;# 
  4269  058F                     	;# 
  4270  0590                     	;# 
  4271  0590                     	;# 
  4272  0591                     	;# 
  4273  0592                     	;# 
  4274  0592                     	;# 
  4275  0593                     	;# 
  4276  0594                     	;# 
  4277  0594                     	;# 
  4278  0595                     	;# 
  4279  0596                     	;# 
  4280  0596                     	;# 
  4281  0597                     	;# 
  4282  0598                     	;# 
  4283  0599                     	;# 
  4284  059A                     	;# 
  4285  059B                     	;# 
  4286  059B                     	;# 
  4287  059C                     	;# 
  4288  059D                     	;# 
  4289  060C                     	;# 
  4290  060C                     	;# 
  4291  060D                     	;# 
  4292  060E                     	;# 
  4293  060F                     	;# 
  4294  060F                     	;# 
  4295  0610                     	;# 
  4296  0611                     	;# 
  4297  0612                     	;# 
  4298  0613                     	;# 
  4299  0614                     	;# 
  4300  0617                     	;# 
  4301  0617                     	;# 
  4302  0618                     	;# 
  4303  0619                     	;# 
  4304  061A                     	;# 
  4305  061A                     	;# 
  4306  061B                     	;# 
  4307  061C                     	;# 
  4308  0691                     	;# 
  4309  0692                     	;# 
  4310  0693                     	;# 
  4311  0694                     	;# 
  4312  0695                     	;# 
  4313  0696                     	;# 
  4314  0697                     	;# 
  4315  0699                     	;# 
  4316  069A                     	;# 
  4317  0711                     	;# 
  4318  0712                     	;# 
  4319  0713                     	;# 
  4320  0714                     	;# 
  4321  0715                     	;# 
  4322  0718                     	;# 
  4323  0718                     	;# 
  4324  0719                     	;# 
  4325  071A                     	;# 
  4326  071A                     	;# 
  4327  071B                     	;# 
  4328  071C                     	;# 
  4329  071D                     	;# 
  4330  0791                     	;# 
  4331  0791                     	;# 
  4332  0792                     	;# 
  4333  0793                     	;# 
  4334  0793                     	;# 
  4335  0794                     	;# 
  4336  0795                     	;# 
  4337  0795                     	;# 
  4338  0796                     	;# 
  4339  0797                     	;# 
  4340  0797                     	;# 
  4341  0798                     	;# 
  4342  0799                     	;# 
  4343  079A                     	;# 
  4344  080C                     	;# 
  4345  080C                     	;# 
  4346  080D                     	;# 
  4347  080E                     	;# 
  4348  080E                     	;# 
  4349  080F                     	;# 
  4350  0810                     	;# 
  4351  0810                     	;# 
  4352  0811                     	;# 
  4353  0812                     	;# 
  4354  0812                     	;# 
  4355  0813                     	;# 
  4356  0814                     	;# 
  4357  0815                     	;# 
  4358  0816                     	;# 
  4359  0817                     	;# 
  4360  0818                     	;# 
  4361  0819                     	;# 
  4362  081A                     	;# 
  4363  081A                     	;# 
  4364  081B                     	;# 
  4365  081C                     	;# 
  4366  081C                     	;# 
  4367  081D                     	;# 
  4368  088C                     	;# 
  4369  088D                     	;# 
  4370  088E                     	;# 
  4371  088F                     	;# 
  4372  088F                     	;# 
  4373  0890                     	;# 
  4374  0891                     	;# 
  4375  0892                     	;# 
  4376  0893                     	;# 
  4377  0893                     	;# 
  4378  0894                     	;# 
  4379  0895                     	;# 
  4380  0896                     	;# 
  4381  0897                     	;# 
  4382  0897                     	;# 
  4383  0898                     	;# 
  4384  0899                     	;# 
  4385  0D8C                     	;# 
  4386  0D8C                     	;# 
  4387  0D8D                     	;# 
  4388  0D8E                     	;# 
  4389  0D8F                     	;# 
  4390  0D8F                     	;# 
  4391  0D90                     	;# 
  4392  0D91                     	;# 
  4393  0D92                     	;# 
  4394  0D92                     	;# 
  4395  0D93                     	;# 
  4396  0D94                     	;# 
  4397  0D95                     	;# 
  4398  0D95                     	;# 
  4399  0D96                     	;# 
  4400  0D97                     	;# 
  4401  0D98                     	;# 
  4402  0D99                     	;# 
  4403  0D9A                     	;# 
  4404  0D9B                     	;# 
  4405  0D9C                     	;# 
  4406  0D9D                     	;# 
  4407  0D9E                     	;# 
  4408  0D9E                     	;# 
  4409  0D9F                     	;# 
  4410  0DA0                     	;# 
  4411  0DA1                     	;# 
  4412  0DA1                     	;# 
  4413  0DA2                     	;# 
  4414  0DA3                     	;# 
  4415  0DA4                     	;# 
  4416  0DA4                     	;# 
  4417  0DA5                     	;# 
  4418  0DA6                     	;# 
  4419  0DA7                     	;# 
  4420  0DA7                     	;# 
  4421  0DA8                     	;# 
  4422  0DA9                     	;# 
  4423  0DAA                     	;# 
  4424  0DAB                     	;# 
  4425  0DAC                     	;# 
  4426  0DAD                     	;# 
  4427  0DAE                     	;# 
  4428  0DAF                     	;# 
  4429  0E0F                     	;# 
  4430  0E10                     	;# 
  4431  0E11                     	;# 
  4432  0E12                     	;# 
  4433  0E13                     	;# 
  4434  0E14                     	;# 
  4435  0E15                     	;# 
  4436  0E16                     	;# 
  4437  0E17                     	;# 
  4438  0E18                     	;# 
  4439  0E19                     	;# 
  4440  0E1A                     	;# 
  4441  0E1B                     	;# 
  4442  0E1C                     	;# 
  4443  0E1D                     	;# 
  4444  0E1E                     	;# 
  4445  0E1F                     	;# 
  4446  0E20                     	;# 
  4447  0E21                     	;# 
  4448  0E22                     	;# 
  4449  0E23                     	;# 
  4450  0E24                     	;# 
  4451  0E25                     	;# 
  4452  0E26                     	;# 
  4453  0E27                     	;# 
  4454  0E28                     	;# 
  4455  0E29                     	;# 
  4456  0E2A                     	;# 
  4457  0E2B                     	;# 
  4458  0E2C                     	;# 
  4459  0E2D                     	;# 
  4460  0E2E                     	;# 
  4461  0E90                     	;# 
  4462  0E91                     	;# 
  4463  0E92                     	;# 
  4464  0E94                     	;# 
  4465  0E95                     	;# 
  4466  0E9C                     	;# 
  4467  0E9D                     	;# 
  4468  0E9E                     	;# 
  4469  0E9F                     	;# 
  4470  0EA0                     	;# 
  4471  0EA1                     	;# 
  4472  0EA2                     	;# 
  4473  0EA3                     	;# 
  4474  0EA4                     	;# 
  4475  0EA5                     	;# 
  4476  0EA6                     	;# 
  4477  0EA7                     	;# 
  4478  0F0F                     	;# 
  4479  0F10                     	;# 
  4480  0F11                     	;# 
  4481  0F12                     	;# 
  4482  0F13                     	;# 
  4483  0F14                     	;# 
  4484  0F15                     	;# 
  4485  0F16                     	;# 
  4486  0F17                     	;# 
  4487  0F18                     	;# 
  4488  0F19                     	;# 
  4489  0F1A                     	;# 
  4490  0F1B                     	;# 
  4491  0F1C                     	;# 
  4492  0F1D                     	;# 
  4493  0F1E                     	;# 
  4494  0F1F                     	;# 
  4495  0F20                     	;# 
  4496  0F21                     	;# 
  4497  0F22                     	;# 
  4498  0F23                     	;# 
  4499  0F24                     	;# 
  4500  0F25                     	;# 
  4501  0F26                     	;# 
  4502  0F27                     	;# 
  4503  0F28                     	;# 
  4504  0F29                     	;# 
  4505  0F2A                     	;# 
  4506  0F2B                     	;# 
  4507  0F2C                     	;# 
  4508  0F2D                     	;# 
  4509  0F2E                     	;# 
  4510  0F2F                     	;# 
  4511  0F30                     	;# 
  4512  0F31                     	;# 
  4513  0F32                     	;# 
  4514  0F33                     	;# 
  4515  0F34                     	;# 
  4516  0F35                     	;# 
  4517  0F36                     	;# 
  4518  0F37                     	;# 
  4519  0FE4                     	;# 
  4520  0FE5                     	;# 
  4521  0FE6                     	;# 
  4522  0FE7                     	;# 
  4523  0FE8                     	;# 
  4524  0FE9                     	;# 
  4525  0FEA                     	;# 
  4526  0FEB                     	;# 
  4527  0FED                     	;# 
  4528  0FEE                     	;# 
  4529  0FEF                     	;# 
  4530  0000                     	;# 
  4531  0001                     	;# 
  4532  0002                     	;# 
  4533  0003                     	;# 
  4534  0004                     	;# 
  4535  0005                     	;# 
  4536  0006                     	;# 
  4537  0007                     	;# 
  4538  0008                     	;# 
  4539  0009                     	;# 
  4540  000A                     	;# 
  4541  000B                     	;# 
  4542  000C                     	;# 
  4543  000D                     	;# 
  4544  000E                     	;# 
  4545  0010                     	;# 
  4546  0011                     	;# 
  4547  0012                     	;# 
  4548  0013                     	;# 
  4549  0014                     	;# 
  4550  0015                     	;# 
  4551  0016                     	;# 
  4552  0016                     	;# 
  4553  0017                     	;# 
  4554  0018                     	;# 
  4555  0019                     	;# 
  4556  001A                     	;# 
  4557  001A                     	;# 
  4558  001B                     	;# 
  4559  001B                     	;# 
  4560  001C                     	;# 
  4561  001D                     	;# 
  4562  001E                     	;# 
  4563  001F                     	;# 
  4564  008C                     	;# 
  4565  008D                     	;# 
  4566  008E                     	;# 
  4567  0090                     	;# 
  4568  0091                     	;# 
  4569  0092                     	;# 
  4570  0093                     	;# 
  4571  0094                     	;# 
  4572  0095                     	;# 
  4573  0096                     	;# 
  4574  0098                     	;# 
  4575  0099                     	;# 
  4576  009A                     	;# 
  4577  009B                     	;# 
  4578  009B                     	;# 
  4579  009C                     	;# 
  4580  009D                     	;# 
  4581  009E                     	;# 
  4582  009F                     	;# 
  4583  010C                     	;# 
  4584  010D                     	;# 
  4585  010E                     	;# 
  4586  0111                     	;# 
  4587  0112                     	;# 
  4588  0113                     	;# 
  4589  0114                     	;# 
  4590  0115                     	;# 
  4591  0116                     	;# 
  4592  0117                     	;# 
  4593  0118                     	;# 
  4594  0119                     	;# 
  4595  011C                     	;# 
  4596  018C                     	;# 
  4597  018D                     	;# 
  4598  018E                     	;# 
  4599  0191                     	;# 
  4600  0191                     	;# 
  4601  0192                     	;# 
  4602  0193                     	;# 
  4603  0193                     	;# 
  4604  0194                     	;# 
  4605  0195                     	;# 
  4606  0196                     	;# 
  4607  0197                     	;# 
  4608  0199                     	;# 
  4609  0199                     	;# 
  4610  0199                     	;# 
  4611  019A                     	;# 
  4612  019A                     	;# 
  4613  019A                     	;# 
  4614  019B                     	;# 
  4615  019B                     	;# 
  4616  019B                     	;# 
  4617  019B                     	;# 
  4618  019B                     	;# 
  4619  019C                     	;# 
  4620  019C                     	;# 
  4621  019C                     	;# 
  4622  019D                     	;# 
  4623  019D                     	;# 
  4624  019D                     	;# 
  4625  019E                     	;# 
  4626  019E                     	;# 
  4627  019E                     	;# 
  4628  019F                     	;# 
  4629  019F                     	;# 
  4630  019F                     	;# 
  4631  019F                     	;# 
  4632  019F                     	;# 
  4633  020C                     	;# 
  4634  020D                     	;# 
  4635  020E                     	;# 
  4636  0211                     	;# 
  4637  0211                     	;# 
  4638  0212                     	;# 
  4639  0212                     	;# 
  4640  0213                     	;# 
  4641  0213                     	;# 
  4642  0214                     	;# 
  4643  0214                     	;# 
  4644  0215                     	;# 
  4645  0215                     	;# 
  4646  0215                     	;# 
  4647  0215                     	;# 
  4648  0216                     	;# 
  4649  0216                     	;# 
  4650  0217                     	;# 
  4651  0217                     	;# 
  4652  028C                     	;# 
  4653  028D                     	;# 
  4654  028E                     	;# 
  4655  0291                     	;# 
  4656  0291                     	;# 
  4657  0292                     	;# 
  4658  0293                     	;# 
  4659  0294                     	;# 
  4660  0298                     	;# 
  4661  0298                     	;# 
  4662  0299                     	;# 
  4663  029A                     	;# 
  4664  029B                     	;# 
  4665  029E                     	;# 
  4666  030C                     	;# 
  4667  030D                     	;# 
  4668  030E                     	;# 
  4669  038C                     	;# 
  4670  038D                     	;# 
  4671  038E                     	;# 
  4672  0391                     	;# 
  4673  0392                     	;# 
  4674  0393                     	;# 
  4675  0394                     	;# 
  4676  0395                     	;# 
  4677  0396                     	;# 
  4678  0397                     	;# 
  4679  0398                     	;# 
  4680  0399                     	;# 
  4681  040E                     	;# 
  4682  0413                     	;# 
  4683  0413                     	;# 
  4684  0414                     	;# 
  4685  0414                     	;# 
  4686  0415                     	;# 
  4687  0416                     	;# 
  4688  0417                     	;# 
  4689  0418                     	;# 
  4690  041A                     	;# 
  4691  041A                     	;# 
  4692  041B                     	;# 
  4693  041B                     	;# 
  4694  041C                     	;# 
  4695  041D                     	;# 
  4696  041E                     	;# 
  4697  041F                     	;# 
  4698  0493                     	;# 
  4699  0494                     	;# 
  4700  0495                     	;# 
  4701  0496                     	;# 
  4702  049A                     	;# 
  4703  049B                     	;# 
  4704  049C                     	;# 
  4705  049D                     	;# 
  4706  058C                     	;# 
  4707  058C                     	;# 
  4708  058D                     	;# 
  4709  058E                     	;# 
  4710  058E                     	;# 
  4711  058F                     	;# 
  4712  0590                     	;# 
  4713  0590                     	;# 
  4714  0591                     	;# 
  4715  0592                     	;# 
  4716  0592                     	;# 
  4717  0593                     	;# 
  4718  0594                     	;# 
  4719  0594                     	;# 
  4720  0595                     	;# 
  4721  0596                     	;# 
  4722  0596                     	;# 
  4723  0597                     	;# 
  4724  0598                     	;# 
  4725  0599                     	;# 
  4726  059A                     	;# 
  4727  059B                     	;# 
  4728  059B                     	;# 
  4729  059C                     	;# 
  4730  059D                     	;# 
  4731  060C                     	;# 
  4732  060C                     	;# 
  4733  060D                     	;# 
  4734  060E                     	;# 
  4735  060F                     	;# 
  4736  060F                     	;# 
  4737  0610                     	;# 
  4738  0611                     	;# 
  4739  0612                     	;# 
  4740  0613                     	;# 
  4741  0614                     	;# 
  4742  0617                     	;# 
  4743  0617                     	;# 
  4744  0618                     	;# 
  4745  0619                     	;# 
  4746  061A                     	;# 
  4747  061A                     	;# 
  4748  061B                     	;# 
  4749  061C                     	;# 
  4750  0691                     	;# 
  4751  0692                     	;# 
  4752  0693                     	;# 
  4753  0694                     	;# 
  4754  0695                     	;# 
  4755  0696                     	;# 
  4756  0697                     	;# 
  4757  0699                     	;# 
  4758  069A                     	;# 
  4759  0711                     	;# 
  4760  0712                     	;# 
  4761  0713                     	;# 
  4762  0714                     	;# 
  4763  0715                     	;# 
  4764  0718                     	;# 
  4765  0718                     	;# 
  4766  0719                     	;# 
  4767  071A                     	;# 
  4768  071A                     	;# 
  4769  071B                     	;# 
  4770  071C                     	;# 
  4771  071D                     	;# 
  4772  0791                     	;# 
  4773  0791                     	;# 
  4774  0792                     	;# 
  4775  0793                     	;# 
  4776  0793                     	;# 
  4777  0794                     	;# 
  4778  0795                     	;# 
  4779  0795                     	;# 
  4780  0796                     	;# 
  4781  0797                     	;# 
  4782  0797                     	;# 
  4783  0798                     	;# 
  4784  0799                     	;# 
  4785  079A                     	;# 
  4786  080C                     	;# 
  4787  080C                     	;# 
  4788  080D                     	;# 
  4789  080E                     	;# 
  4790  080E                     	;# 
  4791  080F                     	;# 
  4792  0810                     	;# 
  4793  0810                     	;# 
  4794  0811                     	;# 
  4795  0812                     	;# 
  4796  0812                     	;# 
  4797  0813                     	;# 
  4798  0814                     	;# 
  4799  0815                     	;# 
  4800  0816                     	;# 
  4801  0817                     	;# 
  4802  0818                     	;# 
  4803  0819                     	;# 
  4804  081A                     	;# 
  4805  081A                     	;# 
  4806  081B                     	;# 
  4807  081C                     	;# 
  4808  081C                     	;# 
  4809  081D                     	;# 
  4810  088C                     	;# 
  4811  088D                     	;# 
  4812  088E                     	;# 
  4813  088F                     	;# 
  4814  088F                     	;# 
  4815  0890                     	;# 
  4816  0891                     	;# 
  4817  0892                     	;# 
  4818  0893                     	;# 
  4819  0893                     	;# 
  4820  0894                     	;# 
  4821  0895                     	;# 
  4822  0896                     	;# 
  4823  0897                     	;# 
  4824  0897                     	;# 
  4825  0898                     	;# 
  4826  0899                     	;# 
  4827  0D8C                     	;# 
  4828  0D8C                     	;# 
  4829  0D8D                     	;# 
  4830  0D8E                     	;# 
  4831  0D8F                     	;# 
  4832  0D8F                     	;# 
  4833  0D90                     	;# 
  4834  0D91                     	;# 
  4835  0D92                     	;# 
  4836  0D92                     	;# 
  4837  0D93                     	;# 
  4838  0D94                     	;# 
  4839  0D95                     	;# 
  4840  0D95                     	;# 
  4841  0D96                     	;# 
  4842  0D97                     	;# 
  4843  0D98                     	;# 
  4844  0D99                     	;# 
  4845  0D9A                     	;# 
  4846  0D9B                     	;# 
  4847  0D9C                     	;# 
  4848  0D9D                     	;# 
  4849  0D9E                     	;# 
  4850  0D9E                     	;# 
  4851  0D9F                     	;# 
  4852  0DA0                     	;# 
  4853  0DA1                     	;# 
  4854  0DA1                     	;# 
  4855  0DA2                     	;# 
  4856  0DA3                     	;# 
  4857  0DA4                     	;# 
  4858  0DA4                     	;# 
  4859  0DA5                     	;# 
  4860  0DA6                     	;# 
  4861  0DA7                     	;# 
  4862  0DA7                     	;# 
  4863  0DA8                     	;# 
  4864  0DA9                     	;# 
  4865  0DAA                     	;# 
  4866  0DAB                     	;# 
  4867  0DAC                     	;# 
  4868  0DAD                     	;# 
  4869  0DAE                     	;# 
  4870  0DAF                     	;# 
  4871  0E0F                     	;# 
  4872  0E10                     	;# 
  4873  0E11                     	;# 
  4874  0E12                     	;# 
  4875  0E13                     	;# 
  4876  0E14                     	;# 
  4877  0E15                     	;# 
  4878  0E16                     	;# 
  4879  0E17                     	;# 
  4880  0E18                     	;# 
  4881  0E19                     	;# 
  4882  0E1A                     	;# 
  4883  0E1B                     	;# 
  4884  0E1C                     	;# 
  4885  0E1D                     	;# 
  4886  0E1E                     	;# 
  4887  0E1F                     	;# 
  4888  0E20                     	;# 
  4889  0E21                     	;# 
  4890  0E22                     	;# 
  4891  0E23                     	;# 
  4892  0E24                     	;# 
  4893  0E25                     	;# 
  4894  0E26                     	;# 
  4895  0E27                     	;# 
  4896  0E28                     	;# 
  4897  0E29                     	;# 
  4898  0E2A                     	;# 
  4899  0E2B                     	;# 
  4900  0E2C                     	;# 
  4901  0E2D                     	;# 
  4902  0E2E                     	;# 
  4903  0E90                     	;# 
  4904  0E91                     	;# 
  4905  0E92                     	;# 
  4906  0E94                     	;# 
  4907  0E95                     	;# 
  4908  0E9C                     	;# 
  4909  0E9D                     	;# 
  4910  0E9E                     	;# 
  4911  0E9F                     	;# 
  4912  0EA0                     	;# 
  4913  0EA1                     	;# 
  4914  0EA2                     	;# 
  4915  0EA3                     	;# 
  4916  0EA4                     	;# 
  4917  0EA5                     	;# 
  4918  0EA6                     	;# 
  4919  0EA7                     	;# 
  4920  0F0F                     	;# 
  4921  0F10                     	;# 
  4922  0F11                     	;# 
  4923  0F12                     	;# 
  4924  0F13                     	;# 
  4925  0F14                     	;# 
  4926  0F15                     	;# 
  4927  0F16                     	;# 
  4928  0F17                     	;# 
  4929  0F18                     	;# 
  4930  0F19                     	;# 
  4931  0F1A                     	;# 
  4932  0F1B                     	;# 
  4933  0F1C                     	;# 
  4934  0F1D                     	;# 
  4935  0F1E                     	;# 
  4936  0F1F                     	;# 
  4937  0F20                     	;# 
  4938  0F21                     	;# 
  4939  0F22                     	;# 
  4940  0F23                     	;# 
  4941  0F24                     	;# 
  4942  0F25                     	;# 
  4943  0F26                     	;# 
  4944  0F27                     	;# 
  4945  0F28                     	;# 
  4946  0F29                     	;# 
  4947  0F2A                     	;# 
  4948  0F2B                     	;# 
  4949  0F2C                     	;# 
  4950  0F2D                     	;# 
  4951  0F2E                     	;# 
  4952  0F2F                     	;# 
  4953  0F30                     	;# 
  4954  0F31                     	;# 
  4955  0F32                     	;# 
  4956  0F33                     	;# 
  4957  0F34                     	;# 
  4958  0F35                     	;# 
  4959  0F36                     	;# 
  4960  0F37                     	;# 
  4961  0FE4                     	;# 
  4962  0FE5                     	;# 
  4963  0FE6                     	;# 
  4964  0FE7                     	;# 
  4965  0FE8                     	;# 
  4966  0FE9                     	;# 
  4967  0FEA                     	;# 
  4968  0FEB                     	;# 
  4969  0FED                     	;# 
  4970  0FEE                     	;# 
  4971  0FEF                     	;# 
  4972  0000                     	;# 
  4973  0001                     	;# 
  4974  0002                     	;# 
  4975  0003                     	;# 
  4976  0004                     	;# 
  4977  0005                     	;# 
  4978  0006                     	;# 
  4979  0007                     	;# 
  4980  0008                     	;# 
  4981  0009                     	;# 
  4982  000A                     	;# 
  4983  000B                     	;# 
  4984  000C                     	;# 
  4985  000D                     	;# 
  4986  000E                     	;# 
  4987  0010                     	;# 
  4988  0011                     	;# 
  4989  0012                     	;# 
  4990  0013                     	;# 
  4991  0014                     	;# 
  4992  0015                     	;# 
  4993  0016                     	;# 
  4994  0016                     	;# 
  4995  0017                     	;# 
  4996  0018                     	;# 
  4997  0019                     	;# 
  4998  001A                     	;# 
  4999  001A                     	;# 
  5000  001B                     	;# 
  5001  001B                     	;# 
  5002  001C                     	;# 
  5003  001D                     	;# 
  5004  001E                     	;# 
  5005  001F                     	;# 
  5006  008C                     	;# 
  5007  008D                     	;# 
  5008  008E                     	;# 
  5009  0090                     	;# 
  5010  0091                     	;# 
  5011  0092                     	;# 
  5012  0093                     	;# 
  5013  0094                     	;# 
  5014  0095                     	;# 
  5015  0096                     	;# 
  5016  0098                     	;# 
  5017  0099                     	;# 
  5018  009A                     	;# 
  5019  009B                     	;# 
  5020  009B                     	;# 
  5021  009C                     	;# 
  5022  009D                     	;# 
  5023  009E                     	;# 
  5024  009F                     	;# 
  5025  010C                     	;# 
  5026  010D                     	;# 
  5027  010E                     	;# 
  5028  0111                     	;# 
  5029  0112                     	;# 
  5030  0113                     	;# 
  5031  0114                     	;# 
  5032  0115                     	;# 
  5033  0116                     	;# 
  5034  0117                     	;# 
  5035  0118                     	;# 
  5036  0119                     	;# 
  5037  011C                     	;# 
  5038  018C                     	;# 
  5039  018D                     	;# 
  5040  018E                     	;# 
  5041  0191                     	;# 
  5042  0191                     	;# 
  5043  0192                     	;# 
  5044  0193                     	;# 
  5045  0193                     	;# 
  5046  0194                     	;# 
  5047  0195                     	;# 
  5048  0196                     	;# 
  5049  0197                     	;# 
  5050  0199                     	;# 
  5051  0199                     	;# 
  5052  0199                     	;# 
  5053  019A                     	;# 
  5054  019A                     	;# 
  5055  019A                     	;# 
  5056  019B                     	;# 
  5057  019B                     	;# 
  5058  019B                     	;# 
  5059  019B                     	;# 
  5060  019B                     	;# 
  5061  019C                     	;# 
  5062  019C                     	;# 
  5063  019C                     	;# 
  5064  019D                     	;# 
  5065  019D                     	;# 
  5066  019D                     	;# 
  5067  019E                     	;# 
  5068  019E                     	;# 
  5069  019E                     	;# 
  5070  019F                     	;# 
  5071  019F                     	;# 
  5072  019F                     	;# 
  5073  019F                     	;# 
  5074  019F                     	;# 
  5075  020C                     	;# 
  5076  020D                     	;# 
  5077  020E                     	;# 
  5078  0211                     	;# 
  5079  0211                     	;# 
  5080  0212                     	;# 
  5081  0212                     	;# 
  5082  0213                     	;# 
  5083  0213                     	;# 
  5084  0214                     	;# 
  5085  0214                     	;# 
  5086  0215                     	;# 
  5087  0215                     	;# 
  5088  0215                     	;# 
  5089  0215                     	;# 
  5090  0216                     	;# 
  5091  0216                     	;# 
  5092  0217                     	;# 
  5093  0217                     	;# 
  5094  028C                     	;# 
  5095  028D                     	;# 
  5096  028E                     	;# 
  5097  0291                     	;# 
  5098  0291                     	;# 
  5099  0292                     	;# 
  5100  0293                     	;# 
  5101  0294                     	;# 
  5102  0298                     	;# 
  5103  0298                     	;# 
  5104  0299                     	;# 
  5105  029A                     	;# 
  5106  029B                     	;# 
  5107  029E                     	;# 
  5108  030C                     	;# 
  5109  030D                     	;# 
  5110  030E                     	;# 
  5111  038C                     	;# 
  5112  038D                     	;# 
  5113  038E                     	;# 
  5114  0391                     	;# 
  5115  0392                     	;# 
  5116  0393                     	;# 
  5117  0394                     	;# 
  5118  0395                     	;# 
  5119  0396                     	;# 
  5120  0397                     	;# 
  5121  0398                     	;# 
  5122  0399                     	;# 
  5123  040E                     	;# 
  5124  0413                     	;# 
  5125  0413                     	;# 
  5126  0414                     	;# 
  5127  0414                     	;# 
  5128  0415                     	;# 
  5129  0416                     	;# 
  5130  0417                     	;# 
  5131  0418                     	;# 
  5132  041A                     	;# 
  5133  041A                     	;# 
  5134  041B                     	;# 
  5135  041B                     	;# 
  5136  041C                     	;# 
  5137  041D                     	;# 
  5138  041E                     	;# 
  5139  041F                     	;# 
  5140  0493                     	;# 
  5141  0494                     	;# 
  5142  0495                     	;# 
  5143  0496                     	;# 
  5144  049A                     	;# 
  5145  049B                     	;# 
  5146  049C                     	;# 
  5147  049D                     	;# 
  5148  058C                     	;# 
  5149  058C                     	;# 
  5150  058D                     	;# 
  5151  058E                     	;# 
  5152  058E                     	;# 
  5153  058F                     	;# 
  5154  0590                     	;# 
  5155  0590                     	;# 
  5156  0591                     	;# 
  5157  0592                     	;# 
  5158  0592                     	;# 
  5159  0593                     	;# 
  5160  0594                     	;# 
  5161  0594                     	;# 
  5162  0595                     	;# 
  5163  0596                     	;# 
  5164  0596                     	;# 
  5165  0597                     	;# 
  5166  0598                     	;# 
  5167  0599                     	;# 
  5168  059A                     	;# 
  5169  059B                     	;# 
  5170  059B                     	;# 
  5171  059C                     	;# 
  5172  059D                     	;# 
  5173  060C                     	;# 
  5174  060C                     	;# 
  5175  060D                     	;# 
  5176  060E                     	;# 
  5177  060F                     	;# 
  5178  060F                     	;# 
  5179  0610                     	;# 
  5180  0611                     	;# 
  5181  0612                     	;# 
  5182  0613                     	;# 
  5183  0614                     	;# 
  5184  0617                     	;# 
  5185  0617                     	;# 
  5186  0618                     	;# 
  5187  0619                     	;# 
  5188  061A                     	;# 
  5189  061A                     	;# 
  5190  061B                     	;# 
  5191  061C                     	;# 
  5192  0691                     	;# 
  5193  0692                     	;# 
  5194  0693                     	;# 
  5195  0694                     	;# 
  5196  0695                     	;# 
  5197  0696                     	;# 
  5198  0697                     	;# 
  5199  0699                     	;# 
  5200  069A                     	;# 
  5201  0711                     	;# 
  5202  0712                     	;# 
  5203  0713                     	;# 
  5204  0714                     	;# 
  5205  0715                     	;# 
  5206  0718                     	;# 
  5207  0718                     	;# 
  5208  0719                     	;# 
  5209  071A                     	;# 
  5210  071A                     	;# 
  5211  071B                     	;# 
  5212  071C                     	;# 
  5213  071D                     	;# 
  5214  0791                     	;# 
  5215  0791                     	;# 
  5216  0792                     	;# 
  5217  0793                     	;# 
  5218  0793                     	;# 
  5219  0794                     	;# 
  5220  0795                     	;# 
  5221  0795                     	;# 
  5222  0796                     	;# 
  5223  0797                     	;# 
  5224  0797                     	;# 
  5225  0798                     	;# 
  5226  0799                     	;# 
  5227  079A                     	;# 
  5228  080C                     	;# 
  5229  080C                     	;# 
  5230  080D                     	;# 
  5231  080E                     	;# 
  5232  080E                     	;# 
  5233  080F                     	;# 
  5234  0810                     	;# 
  5235  0810                     	;# 
  5236  0811                     	;# 
  5237  0812                     	;# 
  5238  0812                     	;# 
  5239  0813                     	;# 
  5240  0814                     	;# 
  5241  0815                     	;# 
  5242  0816                     	;# 
  5243  0817                     	;# 
  5244  0818                     	;# 
  5245  0819                     	;# 
  5246  081A                     	;# 
  5247  081A                     	;# 
  5248  081B                     	;# 
  5249  081C                     	;# 
  5250  081C                     	;# 
  5251  081D                     	;# 
  5252  088C                     	;# 
  5253  088D                     	;# 
  5254  088E                     	;# 
  5255  088F                     	;# 
  5256  088F                     	;# 
  5257  0890                     	;# 
  5258  0891                     	;# 
  5259  0892                     	;# 
  5260  0893                     	;# 
  5261  0893                     	;# 
  5262  0894                     	;# 
  5263  0895                     	;# 
  5264  0896                     	;# 
  5265  0897                     	;# 
  5266  0897                     	;# 
  5267  0898                     	;# 
  5268  0899                     	;# 
  5269  0D8C                     	;# 
  5270  0D8C                     	;# 
  5271  0D8D                     	;# 
  5272  0D8E                     	;# 
  5273  0D8F                     	;# 
  5274  0D8F                     	;# 
  5275  0D90                     	;# 
  5276  0D91                     	;# 
  5277  0D92                     	;# 
  5278  0D92                     	;# 
  5279  0D93                     	;# 
  5280  0D94                     	;# 
  5281  0D95                     	;# 
  5282  0D95                     	;# 
  5283  0D96                     	;# 
  5284  0D97                     	;# 
  5285  0D98                     	;# 
  5286  0D99                     	;# 
  5287  0D9A                     	;# 
  5288  0D9B                     	;# 
  5289  0D9C                     	;# 
  5290  0D9D                     	;# 
  5291  0D9E                     	;# 
  5292  0D9E                     	;# 
  5293  0D9F                     	;# 
  5294  0DA0                     	;# 
  5295  0DA1                     	;# 
  5296  0DA1                     	;# 
  5297  0DA2                     	;# 
  5298  0DA3                     	;# 
  5299  0DA4                     	;# 
  5300  0DA4                     	;# 
  5301  0DA5                     	;# 
  5302  0DA6                     	;# 
  5303  0DA7                     	;# 
  5304  0DA7                     	;# 
  5305  0DA8                     	;# 
  5306  0DA9                     	;# 
  5307  0DAA                     	;# 
  5308  0DAB                     	;# 
  5309  0DAC                     	;# 
  5310  0DAD                     	;# 
  5311  0DAE                     	;# 
  5312  0DAF                     	;# 
  5313  0E0F                     	;# 
  5314  0E10                     	;# 
  5315  0E11                     	;# 
  5316  0E12                     	;# 
  5317  0E13                     	;# 
  5318  0E14                     	;# 
  5319  0E15                     	;# 
  5320  0E16                     	;# 
  5321  0E17                     	;# 
  5322  0E18                     	;# 
  5323  0E19                     	;# 
  5324  0E1A                     	;# 
  5325  0E1B                     	;# 
  5326  0E1C                     	;# 
  5327  0E1D                     	;# 
  5328  0E1E                     	;# 
  5329  0E1F                     	;# 
  5330  0E20                     	;# 
  5331  0E21                     	;# 
  5332  0E22                     	;# 
  5333  0E23                     	;# 
  5334  0E24                     	;# 
  5335  0E25                     	;# 
  5336  0E26                     	;# 
  5337  0E27                     	;# 
  5338  0E28                     	;# 
  5339  0E29                     	;# 
  5340  0E2A                     	;# 
  5341  0E2B                     	;# 
  5342  0E2C                     	;# 
  5343  0E2D                     	;# 
  5344  0E2E                     	;# 
  5345  0E90                     	;# 
  5346  0E91                     	;# 
  5347  0E92                     	;# 
  5348  0E94                     	;# 
  5349  0E95                     	;# 
  5350  0E9C                     	;# 
  5351  0E9D                     	;# 
  5352  0E9E                     	;# 
  5353  0E9F                     	;# 
  5354  0EA0                     	;# 
  5355  0EA1                     	;# 
  5356  0EA2                     	;# 
  5357  0EA3                     	;# 
  5358  0EA4                     	;# 
  5359  0EA5                     	;# 
  5360  0EA6                     	;# 
  5361  0EA7                     	;# 
  5362  0F0F                     	;# 
  5363  0F10                     	;# 
  5364  0F11                     	;# 
  5365  0F12                     	;# 
  5366  0F13                     	;# 
  5367  0F14                     	;# 
  5368  0F15                     	;# 
  5369  0F16                     	;# 
  5370  0F17                     	;# 
  5371  0F18                     	;# 
  5372  0F19                     	;# 
  5373  0F1A                     	;# 
  5374  0F1B                     	;# 
  5375  0F1C                     	;# 
  5376  0F1D                     	;# 
  5377  0F1E                     	;# 
  5378  0F1F                     	;# 
  5379  0F20                     	;# 
  5380  0F21                     	;# 
  5381  0F22                     	;# 
  5382  0F23                     	;# 
  5383  0F24                     	;# 
  5384  0F25                     	;# 
  5385  0F26                     	;# 
  5386  0F27                     	;# 
  5387  0F28                     	;# 
  5388  0F29                     	;# 
  5389  0F2A                     	;# 
  5390  0F2B                     	;# 
  5391  0F2C                     	;# 
  5392  0F2D                     	;# 
  5393  0F2E                     	;# 
  5394  0F2F                     	;# 
  5395  0F30                     	;# 
  5396  0F31                     	;# 
  5397  0F32                     	;# 
  5398  0F33                     	;# 
  5399  0F34                     	;# 
  5400  0F35                     	;# 
  5401  0F36                     	;# 
  5402  0F37                     	;# 
  5403  0FE4                     	;# 
  5404  0FE5                     	;# 
  5405  0FE6                     	;# 
  5406  0FE7                     	;# 
  5407  0FE8                     	;# 
  5408  0FE9                     	;# 
  5409  0FEA                     	;# 
  5410  0FEB                     	;# 
  5411  0FED                     	;# 
  5412  0FEE                     	;# 
  5413  0FEF                     	;# 
  5414                           
  5415 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  5416  0000                     
  5417 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  5418  0000                     
  5419 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  5420  0000                     
  5421                           	psect	idataBANK1
  5422  083D                     __pidataBANK1:
  5423                           
  5424                           ;initializer for main@F10208
  5425  083D  3420               	retlw	32
  5426  083E  3405               	retlw	5
  5427  083F  340C               	retlw	12
  5428  0840  3400               	retlw	0
  5429                           
  5430                           ;initializer for main@F10206
  5431  0841  3404               	retlw	4
  5432  0842  3402               	retlw	2
  5433  0843  340C               	retlw	12
  5434  0844  3400               	retlw	0
  5435                           
  5436                           	psect	stringtext1
  5437  1030                     __pstringtext1:
  5438  1030                     _segmentMap:
  5439  1030  343F               	retlw	63
  5440  1031  3406               	retlw	6
  5441  1032  345B               	retlw	91
  5442  1033  344F               	retlw	79
  5443  1034  3466               	retlw	102
  5444  1035  346D               	retlw	109
  5445  1036  347D               	retlw	125
  5446  1037  3407               	retlw	7
  5447  1038  347F               	retlw	127
  5448  1039  346F               	retlw	111
  5449  103A  3477               	retlw	119
  5450  103B  347C               	retlw	124
  5451  103C  3439               	retlw	57
  5452  103D  345E               	retlw	94
  5453  103E  3479               	retlw	121
  5454  103F  3471               	retlw	113
  5455  1040  3400               	retlw	0
  5456  1041                     __end_of_segmentMap:
  5457                           
  5458                           	psect	stringtext2
  5459  1041                     __pstringtext2:
  5460  1041                     _rotationMapSize:
  5461  1041  340C               	retlw	12
  5462  1042  3400               	retlw	0
  5463  1043  3400               	retlw	0
  5464  1044  3400               	retlw	0
  5465  1045                     __end_of_rotationMapSize:
  5466                           
  5467                           	psect	stringtext3
  5468  1000                     __pstringtext3:
  5469  1000                     _rotationMap:
  5470  1000  3401               	retlw	1
  5471  1001  3400               	retlw	0
  5472  1002  3400               	retlw	0
  5473  1003  3400               	retlw	0
  5474  1004  3400               	retlw	0
  5475  1005  3401               	retlw	1
  5476  1006  3400               	retlw	0
  5477  1007  3400               	retlw	0
  5478  1008  3400               	retlw	0
  5479  1009  3400               	retlw	0
  5480  100A  3401               	retlw	1
  5481  100B  3400               	retlw	0
  5482  100C  3400               	retlw	0
  5483  100D  3400               	retlw	0
  5484  100E  3400               	retlw	0
  5485  100F  3401               	retlw	1
  5486  1010  3400               	retlw	0
  5487  1011  3400               	retlw	0
  5488  1012  3400               	retlw	0
  5489  1013  3420               	retlw	32
  5490  1014  3400               	retlw	0
  5491  1015  3400               	retlw	0
  5492  1016  3400               	retlw	0
  5493  1017  3410               	retlw	16
  5494  1018  3400               	retlw	0
  5495  1019  3400               	retlw	0
  5496  101A  3400               	retlw	0
  5497  101B  3408               	retlw	8
  5498  101C  3400               	retlw	0
  5499  101D  3400               	retlw	0
  5500  101E  3408               	retlw	8
  5501  101F  3400               	retlw	0
  5502  1020  3400               	retlw	0
  5503  1021  3408               	retlw	8
  5504  1022  3400               	retlw	0
  5505  1023  3400               	retlw	0
  5506  1024  3408               	retlw	8
  5507  1025  3400               	retlw	0
  5508  1026  3400               	retlw	0
  5509  1027  3400               	retlw	0
  5510  1028  3404               	retlw	4
  5511  1029  3400               	retlw	0
  5512  102A  3400               	retlw	0
  5513  102B  3400               	retlw	0
  5514  102C  3402               	retlw	2
  5515  102D  3400               	retlw	0
  5516  102E  3400               	retlw	0
  5517  102F  3400               	retlw	0
  5518  1030                     __end_of_rotationMap:
  5519  0011                     _PIR2bits	set	17
  5520  000E                     _PORTCbits	set	14
  5521  000B                     _INTCONbits	set	11
  5522  001B                     _PR2	set	27
  5523  001A                     _TMR2	set	26
  5524  001C                     _T2CONbits	set	28
  5525  001F                     _T2RSTbits	set	31
  5526  001D                     _T2HLTbits	set	29
  5527  001C                     _T2CON	set	28
  5528  0010                     _PIR1bits	set	16
  5529  001A                     _T2TMR	set	26
  5530  001B                     _T2PR	set	27
  5531  001F                     _T2RST	set	31
  5532  001D                     _T2HLT	set	29
  5533  001E                     _T2CLKCON	set	30
  5534  0091                     _PIE2bits	set	145
  5535  009D                     _ADCON0bits	set	157
  5536  009D                     _ADCON0	set	157
  5537  009C                     _ADRESH	set	156
  5538  009B                     _ADRESL	set	155
  5539  009F                     _ADCON2	set	159
  5540  009E                     _ADCON1	set	158
  5541  0098                     _OSCTUNE	set	152
  5542  0099                     _OSCCON	set	153
  5543  0095                     _OPTION_REGbits	set	149
  5544  008E                     _TRISC	set	142
  5545  008D                     _TRISB	set	141
  5546  008C                     _TRISA	set	140
  5547  04D6                     _PLLR	set	1238
  5548  010C                     _LATAbits	set	268
  5549  010E                     _LATCbits	set	270
  5550  0116                     _BORCON	set	278
  5551  010E                     _LATC	set	270
  5552  010D                     _LATB	set	269
  5553  010C                     _LATA	set	268
  5554  019A                     _TX1REG	set	410
  5555  0199                     _RC1REG	set	409
  5556  019D                     _RC1STAbits	set	413
  5557  019E                     _TX1STAbits	set	414
  5558  019C                     _SPBRGH	set	412
  5559  019B                     _SPBRGL	set	411
  5560  019E                     _TX1STA	set	414
  5561  019D                     _RC1STA	set	413
  5562  019F                     _BAUD1CON	set	415
  5563  018C                     _ANSELA	set	396
  5564  018D                     _ANSELB	set	397
  5565  018E                     _ANSELC	set	398
  5566  020E                     _WPUC	set	526
  5567  020C                     _WPUA	set	524
  5568  020D                     _WPUB	set	525
  5569  028E                     _ODCONC	set	654
  5570  028D                     _ODCONB	set	653
  5571  028C                     _ODCONA	set	652
  5572  029E                     _CCPTMRSbits	set	670
  5573  030E                     _SLRCONC	set	782
  5574  030D                     _SLRCONB	set	781
  5575  030C                     _SLRCONA	set	780
  5576  038E                     _INLVLC	set	910
  5577  038D                     _INLVLB	set	909
  5578  038C                     _INLVLA	set	908
  5579  0414                     _PR4	set	1044
  5580  0413                     _TMR4	set	1043
  5581  0415                     _T4CONbits	set	1045
  5582  0418                     _T4RSTbits	set	1048
  5583  0416                     _T4HLTbits	set	1046
  5584  0415                     _T4CON	set	1045
  5585  0413                     _T4TMR	set	1043
  5586  0414                     _T4PR	set	1044
  5587  0418                     _T4RST	set	1048
  5588  0416                     _T4HLT	set	1046
  5589  0417                     _T4CLKCON	set	1047
  5590  061A                     _PWM4DCL	set	1562
  5591  061B                     _PWM4DCH	set	1563
  5592  061C                     _PWM4CON	set	1564
  5593  0617                     _PWM3DCL	set	1559
  5594  0618                     _PWM3DCH	set	1560
  5595  0619                     _PWM3CON	set	1561
  5596  0EA7                     _RC7PPS	set	3751
  5597  0EA6                     _RC6PPS	set	3750
  5598  0E9F                     _RB7PPS	set	3743
  5599                           
  5600                           	psect	cinit
  5601  001B                     start_initialization:	
  5602                           ; #config settings
  5603                           
  5604  001B                     __initialization:
  5605                           
  5606                           ; Initialize objects allocated to BANK1
  5607  001B  303D               	movlw	low __pidataBANK1
  5608  001C  0084               	movwf	4
  5609  001D  3088               	movlw	(high __pidataBANK1)| (0+128)
  5610  001E  0085               	movwf	5
  5611  001F  30E1               	movlw	low __pdataBANK1
  5612  0020  0086               	movwf	6
  5613  0021  3000               	movlw	high __pdataBANK1
  5614  0022  0087               	movwf	7
  5615  0023  3008               	movlw	8
  5616  0024  3188  2037  3180   	fcall	init_ram
  5617                           
  5618                           ; Clear objects allocated to BANK0
  5619  0027  3050               	movlw	low __pbssBANK0
  5620  0028  0084               	movwf	4
  5621  0029  3000               	movlw	high __pbssBANK0
  5622  002A  0085               	movwf	5
  5623  002B  3010               	movlw	16
  5624  002C  3188  2031  3180   	fcall	clear_ram0
  5625                           
  5626                           ; Clear objects allocated to BANK1
  5627  002F  30E9               	movlw	low __pbssBANK1
  5628  0030  0084               	movwf	4
  5629  0031  3000               	movlw	high __pbssBANK1
  5630  0032  0085               	movwf	5
  5631  0033  3007               	movlw	7
  5632  0034  3188  2031  3180   	fcall	clear_ram0
  5633  0037                     end_of_initialization:	
  5634                           ;End of C runtime variable initialization code
  5635                           
  5636  0037                     __end_of__initialization:
  5637  0037  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5638  0038  0020               	movlb	0
  5639  0039  3185  2D27         	ljmp	_main	;jump to C main() function
  5640                           
  5641                           	psect	bssBANK0
  5642  0050                     __pbssBANK0:
  5643  0050                     TMR4_ISR@CountCallBack:
  5644  0050                     	ds	2
  5645  0052                     _TMR4_InterruptHandler:
  5646  0052                     	ds	2
  5647  0054                     _EUSART_ErrorHandler:
  5648  0054                     	ds	2
  5649  0056                     _EUSART_OverrunErrorHandler:
  5650  0056                     	ds	2
  5651  0058                     _EUSART_FramingErrorHandler:
  5652  0058                     	ds	2
  5653  005A                     _ADC_InterruptHandler:
  5654  005A                     	ds	2
  5655  005C                     _rotationAnimationStep:
  5656  005C                     	ds	1
  5657  005D                     _displayHandle:
  5658  005D                     	ds	1
  5659  005E                     _rotationMapIdx:
  5660  005E                     	ds	1
  5661  005F                     _eusartRxLastError:
  5662  005F                     	ds	1
  5663                           
  5664                           	psect	bssBANK1
  5665  00E9                     __pbssBANK1:
  5666  00E9                     tm1637Init@display:
  5667  00E9                     	ds	7
  5668                           
  5669                           	psect	dataBANK1
  5670  00E1                     __pdataBANK1:
  5671  00E1                     main@F10208:
  5672  00E1                     	ds	4
  5673  00E5                     main@F10206:
  5674  00E5                     	ds	4
  5675                           
  5676                           	psect	inittext
  5677  0837                     init_ram:
  5678  0837  00FE               	movwf	btemp
  5679  0838                     initloop:
  5680  0838  0012               	moviw fsr0++
  5681  0839  001E               	movwi fsr1++
  5682  083A  0BFE               	decfsz	btemp,f
  5683  083B  2838               	goto	initloop
  5684  083C  3400               	retlw	0
  5685                           
  5686                           	psect	clrtext
  5687  0831                     clear_ram0:	
  5688                           ;	Called with FSR0 containing the base address, and
  5689                           ;	WREG with the size to clear
  5690                           
  5691  0831  0064               	clrwdt	;clear the watchdog before getting into this loop
  5692  0832                     clrloop0:
  5693  0832  0180               	clrf	0	;clear RAM location pointed to by FSR
  5694  0833  3101               	addfsr 0,1
  5695  0834  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5696  0835  2832               	goto	clrloop0	;have we reached the end yet?
  5697  0836  3400               	retlw	0	;all done for this memory range, return
  5698                           
  5699                           	psect	cstackBANK1
  5700  00A0                     __pcstackBANK1:
  5701  00A0                     ??_ramp_motor:
  5702  00A0                     ___flmul@sign:	
  5703                           ; 1 bytes @ 0x0
  5704                           
  5705                           
  5706                           ; 1 bytes @ 0x0
  5707  00A0                     	ds	1
  5708  00A1                     ___flmul@aexp:
  5709                           
  5710                           ; 1 bytes @ 0x1
  5711  00A1                     	ds	1
  5712  00A2                     ramp_motor@step_sz:
  5713  00A2                     ___flmul@grs:	
  5714                           ; 2 bytes @ 0x2
  5715                           
  5716                           
  5717                           ; 4 bytes @ 0x2
  5718  00A2                     	ds	2
  5719  00A4                     _ramp_motor$2030:
  5720                           
  5721                           ; 2 bytes @ 0x4
  5722  00A4                     	ds	2
  5723  00A6                     ___flmul@bexp:
  5724  00A6                     _ramp_motor$2031:	
  5725                           ; 1 bytes @ 0x6
  5726                           
  5727                           
  5728                           ; 2 bytes @ 0x6
  5729  00A6                     	ds	1
  5730  00A7                     ___flmul@prod:
  5731                           
  5732                           ; 4 bytes @ 0x7
  5733  00A7                     	ds	1
  5734  00A8                     ramp_motor@gnd_controller:
  5735                           
  5736                           ; 2 bytes @ 0x8
  5737  00A8                     	ds	2
  5738  00AA                     ramp_motor@i:
  5739                           
  5740                           ; 2 bytes @ 0xA
  5741  00AA                     	ds	1
  5742  00AB                     ___flmul@temp:
  5743                           
  5744                           ; 2 bytes @ 0xB
  5745  00AB                     	ds	1
  5746  00AC                     ramp_motor@curr_speed:
  5747                           
  5748                           ; 2 bytes @ 0xC
  5749  00AC                     	ds	1
  5750  00AD                     ?___fldiv:
  5751  00AD                     ___fldiv@a:	
  5752                           ; 4 bytes @ 0xD
  5753                           
  5754                           
  5755                           ; 4 bytes @ 0xD
  5756  00AD                     	ds	1
  5757  00AE                     ramp_motor@speed_controller:
  5758                           
  5759                           ; 2 bytes @ 0xE
  5760  00AE                     	ds	3
  5761  00B1                     ___fldiv@b:
  5762                           
  5763                           ; 4 bytes @ 0x11
  5764  00B1                     	ds	4
  5765  00B5                     ___fldiv@rem:
  5766                           
  5767                           ; 4 bytes @ 0x15
  5768  00B5                     	ds	4
  5769  00B9                     ___fldiv@sign:
  5770                           
  5771                           ; 1 bytes @ 0x19
  5772  00B9                     	ds	1
  5773  00BA                     ___fldiv@new_exp:
  5774                           
  5775                           ; 2 bytes @ 0x1A
  5776  00BA                     	ds	2
  5777  00BC                     ___fldiv@grs:
  5778                           
  5779                           ; 4 bytes @ 0x1C
  5780  00BC                     	ds	4
  5781  00C0                     ___fldiv@bexp:
  5782                           
  5783                           ; 1 bytes @ 0x20
  5784  00C0                     	ds	1
  5785  00C1                     ___fldiv@aexp:
  5786                           
  5787                           ; 1 bytes @ 0x21
  5788  00C1                     	ds	1
  5789  00C2                     ?___fltol:
  5790  00C2                     ___fltol@f1:	
  5791                           ; 4 bytes @ 0x22
  5792                           
  5793                           
  5794                           ; 4 bytes @ 0x22
  5795  00C2                     	ds	4
  5796  00C6                     ??___fltol:
  5797                           
  5798                           ; 1 bytes @ 0x26
  5799  00C6                     	ds	5
  5800  00CB                     ___fltol@sign1:
  5801                           
  5802                           ; 1 bytes @ 0x2B
  5803  00CB                     	ds	1
  5804  00CC                     ___fltol@exp1:
  5805                           
  5806                           ; 1 bytes @ 0x2C
  5807  00CC                     	ds	1
  5808  00CD                     ??_main:
  5809                           
  5810                           ; 1 bytes @ 0x2D
  5811  00CD                     	ds	2
  5812  00CF                     _main$2032:
  5813                           
  5814                           ; 4 bytes @ 0x2F
  5815  00CF                     	ds	4
  5816  00D3                     main@dir:
  5817                           
  5818                           ; 1 bytes @ 0x33
  5819  00D3                     	ds	1
  5820  00D4                     main@adc_conv:
  5821                           
  5822                           ; 2 bytes @ 0x34
  5823  00D4                     	ds	2
  5824  00D6                     main@adc_v:
  5825                           
  5826                           ; 2 bytes @ 0x36
  5827  00D6                     	ds	2
  5828  00D8                     main@10207:
  5829                           
  5830                           ; 4 bytes @ 0x38
  5831  00D8                     	ds	4
  5832  00DC                     main@10209:
  5833                           
  5834                           ; 4 bytes @ 0x3C
  5835  00DC                     	ds	4
  5836  00E0                     main@display:
  5837                           
  5838                           ; 1 bytes @ 0x40
  5839  00E0                     	ds	1
  5840                           
  5841                           	psect	cstackCOMMON
  5842  0070                     __pcstackCOMMON:
  5843  0070                     ?_OSCILLATOR_Initialize:
  5844  0070                     ?_ADC_Initialize:	
  5845                           ; 1 bytes @ 0x0
  5846                           
  5847  0070                     ?_PWM4_Initialize:	
  5848                           ; 1 bytes @ 0x0
  5849                           
  5850  0070                     ?_TMR4_Initialize:	
  5851                           ; 1 bytes @ 0x0
  5852                           
  5853  0070                     ?_TMR2_Initialize:	
  5854                           ; 1 bytes @ 0x0
  5855                           
  5856  0070                     ?_EUSART_Initialize:	
  5857                           ; 1 bytes @ 0x0
  5858                           
  5859  0070                     ?_tm1637CycleAnimationStop:	
  5860                           ; 1 bytes @ 0x0
  5861                           
  5862  0070                     ?_TMR4_StopTimer:	
  5863                           ; 1 bytes @ 0x0
  5864                           
  5865  0070                     ?_TMR4_StartTimer:	
  5866                           ; 1 bytes @ 0x0
  5867                           
  5868  0070                     ?__tm1637Start:	
  5869                           ; 1 bytes @ 0x0
  5870                           
  5871  0070                     ?__tm1637ReadResult:	
  5872                           ; 1 bytes @ 0x0
  5873                           
  5874  0070                     ?__tm1637Stop:	
  5875                           ; 1 bytes @ 0x0
  5876                           
  5877  0070                     ?_TMR4_ISR:	
  5878                           ; 1 bytes @ 0x0
  5879                           
  5880  0070                     ?_TMR4_DefaultInterruptHandler:	
  5881                           ; 1 bytes @ 0x0
  5882                           
  5883  0070                     ??_TMR4_DefaultInterruptHandler:	
  5884                           ; 1 bytes @ 0x0
  5885                           
  5886  0070                     ?_TMR4_CallBack:	
  5887                           ; 1 bytes @ 0x0
  5888                           
  5889  0070                     ?_PWM3_Initialize:	
  5890                           ; 1 bytes @ 0x0
  5891                           
  5892  0070                     ?_PIN_MANAGER_Initialize:	
  5893                           ; 1 bytes @ 0x0
  5894                           
  5895  0070                     ?_SYSTEM_Initialize:	
  5896                           ; 1 bytes @ 0x0
  5897                           
  5898  0070                     ?_main:	
  5899                           ; 1 bytes @ 0x0
  5900                           
  5901  0070                     ?_display_animation_timer_isr:	
  5902                           ; 1 bytes @ 0x0
  5903                           
  5904  0070                     ?_INTERRUPT_InterruptManager:	
  5905                           ; 1 bytes @ 0x0
  5906                           
  5907  0070                     ?_TMR4_Start:	
  5908                           ; 1 bytes @ 0x0
  5909                           
  5910  0070                     ?_TMR4_Stop:	
  5911                           ; 1 bytes @ 0x0
  5912                           
  5913  0070                     ?i1__tm1637Start:	
  5914                           ; 1 bytes @ 0x0
  5915                           
  5916  0070                     ?i1__tm1637Stop:	
  5917                           ; 1 bytes @ 0x0
  5918                           
  5919  0070                     ?i1__tm1637ReadResult:	
  5920                           ; 1 bytes @ 0x0
  5921                           
  5922  0070                     ?i1_write_reg:	
  5923                           ; 1 bytes @ 0x0
  5924                           
  5925  0070                     ?___llmod:	
  5926                           ; 1 bytes @ 0x0
  5927                           
  5928  0070                     i1write_reg@pin:	
  5929                           ; 4 bytes @ 0x0
  5930                           
  5931  0070                     ___llmod@divisor:	
  5932                           ; 3 bytes @ 0x0
  5933                           
  5934                           
  5935                           ; 4 bytes @ 0x0
  5936  0070                     	ds	3
  5937  0073                     i1write_reg@data:
  5938                           
  5939                           ; 1 bytes @ 0x3
  5940  0073                     	ds	1
  5941  0074                     ??i1_write_reg:
  5942  0074                     ___llmod@dividend:	
  5943                           ; 1 bytes @ 0x4
  5944                           
  5945                           
  5946                           ; 4 bytes @ 0x4
  5947  0074                     	ds	2
  5948  0076                     ??i1__tm1637Start:
  5949  0076                     ??i1__tm1637Stop:	
  5950                           ; 1 bytes @ 0x6
  5951                           
  5952  0076                     ??i1__tm1637ReadResult:	
  5953                           ; 1 bytes @ 0x6
  5954                           
  5955  0076                     ?i1__tm1637WriteByte:	
  5956                           ; 1 bytes @ 0x6
  5957                           
  5958  0076                     i1__tm1637Start@display:	
  5959                           ; 1 bytes @ 0x6
  5960                           
  5961  0076                     i1__tm1637Stop@display:	
  5962                           ; 1 bytes @ 0x6
  5963                           
  5964  0076                     i1__tm1637ReadResult@display:	
  5965                           ; 1 bytes @ 0x6
  5966                           
  5967  0076                     i1__tm1637WriteByte@b:	
  5968                           ; 1 bytes @ 0x6
  5969                           
  5970                           
  5971                           ; 1 bytes @ 0x6
  5972  0076                     	ds	1
  5973  0077                     ??i1__tm1637WriteByte:
  5974                           
  5975                           ; 1 bytes @ 0x7
  5976  0077                     	ds	1
  5977  0078                     ??___llmod:
  5978  0078                     i1__tm1637WriteByte@i:	
  5979                           ; 1 bytes @ 0x8
  5980                           
  5981                           
  5982                           ; 2 bytes @ 0x8
  5983  0078                     	ds	1
  5984  0079                     ___llmod@counter:
  5985                           
  5986                           ; 1 bytes @ 0x9
  5987  0079                     	ds	1
  5988  007A                     i1__tm1637WriteByte@display:
  5989                           
  5990                           ; 1 bytes @ 0xA
  5991  007A                     	ds	1
  5992  007B                     ?_tm1637DisplayDecimalRaw:
  5993  007B                     tm1637DisplayDecimalRaw@digitArr:	
  5994                           ; 1 bytes @ 0xB
  5995                           
  5996                           
  5997                           ; 1 bytes @ 0xB
  5998  007B                     	ds	1
  5999  007C                     tm1637DisplayDecimalRaw@displaySeparator:
  6000                           
  6001                           ; 2 bytes @ 0xC
  6002  007C                     	ds	2
  6003  007E                     ??_TMR4_ISR:
  6004  007E                     ??_TMR4_CallBack:	
  6005                           ; 1 bytes @ 0xE
  6006                           
  6007  007E                     ??_INTERRUPT_InterruptManager:	
  6008                           ; 1 bytes @ 0xE
  6009                           
  6010                           
  6011                           	psect	cstackBANK0
  6012  0020                     __pcstackBANK0:	
  6013                           ; 1 bytes @ 0xE
  6014                           
  6015  0020                     ??_tm1637DisplayDecimalRaw:
  6016                           
  6017                           ; 1 bytes @ 0x0
  6018  0020                     	ds	1
  6019  0021                     tm1637DisplayDecimalRaw@i:
  6020                           
  6021                           ; 2 bytes @ 0x1
  6022  0021                     	ds	2
  6023  0023                     tm1637DisplayDecimalRaw@display:
  6024                           
  6025                           ; 1 bytes @ 0x3
  6026  0023                     	ds	1
  6027  0024                     ??_display_animation_timer_isr:
  6028                           
  6029                           ; 1 bytes @ 0x4
  6030  0024                     	ds	8
  6031  002C                     display_animation_timer_isr@digitArr:
  6032                           
  6033                           ; 4 bytes @ 0xC
  6034  002C                     	ds	4
  6035  0030                     ??_OSCILLATOR_Initialize:
  6036  0030                     ??_ADC_Initialize:	
  6037                           ; 1 bytes @ 0x10
  6038                           
  6039  0030                     ??_PWM4_Initialize:	
  6040                           ; 1 bytes @ 0x10
  6041                           
  6042  0030                     ??_TMR2_Initialize:	
  6043                           ; 1 bytes @ 0x10
  6044                           
  6045  0030                     ?_EUSART_SetFramingErrorHandler:	
  6046                           ; 1 bytes @ 0x10
  6047                           
  6048  0030                     ?_EUSART_SetOverrunErrorHandler:	
  6049                           ; 1 bytes @ 0x10
  6050                           
  6051  0030                     ?_EUSART_SetErrorHandler:	
  6052                           ; 1 bytes @ 0x10
  6053                           
  6054  0030                     ?_tm1637CycleAnimationStart:	
  6055                           ; 1 bytes @ 0x10
  6056                           
  6057  0030                     ??_tm1637CycleAnimationStop:	
  6058                           ; 1 bytes @ 0x10
  6059                           
  6060  0030                     ??_TMR4_StopTimer:	
  6061                           ; 1 bytes @ 0x10
  6062                           
  6063  0030                     ?_TMR4_SetInterruptHandler:	
  6064                           ; 1 bytes @ 0x10
  6065                           
  6066  0030                     ??_TMR4_StartTimer:	
  6067                           ; 1 bytes @ 0x10
  6068                           
  6069  0030                     ?_write_reg:	
  6070                           ; 1 bytes @ 0x10
  6071                           
  6072  0030                     ??_PWM3_Initialize:	
  6073                           ; 1 bytes @ 0x10
  6074                           
  6075  0030                     ??_PIN_MANAGER_Initialize:	
  6076                           ; 1 bytes @ 0x10
  6077                           
  6078  0030                     ??_TMR4_Start:	
  6079                           ; 1 bytes @ 0x10
  6080                           
  6081  0030                     ??_TMR4_Stop:	
  6082                           ; 1 bytes @ 0x10
  6083                           
  6084  0030                     ?__Umul8_16:	
  6085                           ; 1 bytes @ 0x10
  6086                           
  6087  0030                     ?_ADC_GetConversion:	
  6088                           ; 2 bytes @ 0x10
  6089                           
  6090  0030                     ?___wmul:	
  6091                           ; 2 bytes @ 0x10
  6092                           
  6093  0030                     ?___awdiv:	
  6094                           ; 2 bytes @ 0x10
  6095                           
  6096  0030                     ?___awmod:	
  6097                           ; 2 bytes @ 0x10
  6098                           
  6099  0030                     ?___xxtofl:	
  6100                           ; 2 bytes @ 0x10
  6101                           
  6102  0030                     tm1637CycleAnimationStart@dir:	
  6103                           ; 4 bytes @ 0x10
  6104                           
  6105  0030                     tm1637CycleAnimationStop@display:	
  6106                           ; 1 bytes @ 0x10
  6107                           
  6108  0030                     __Umul8_16@multiplicand:	
  6109                           ; 1 bytes @ 0x10
  6110                           
  6111  0030                     EUSART_SetFramingErrorHandler@interruptHandler:	
  6112                           ; 1 bytes @ 0x10
  6113                           
  6114  0030                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  6115                           ; 2 bytes @ 0x10
  6116                           
  6117  0030                     EUSART_SetErrorHandler@interruptHandler:	
  6118                           ; 2 bytes @ 0x10
  6119                           
  6120  0030                     TMR4_SetInterruptHandler@InterruptHandler:	
  6121                           ; 2 bytes @ 0x10
  6122                           
  6123  0030                     ___wmul@multiplier:	
  6124                           ; 2 bytes @ 0x10
  6125                           
  6126  0030                     ___awdiv@divisor:	
  6127                           ; 2 bytes @ 0x10
  6128                           
  6129  0030                     ___awmod@divisor:	
  6130                           ; 2 bytes @ 0x10
  6131                           
  6132  0030                     write_reg@pin:	
  6133                           ; 2 bytes @ 0x10
  6134                           
  6135  0030                     ___xxtofl@val:	
  6136                           ; 3 bytes @ 0x10
  6137                           
  6138                           
  6139                           ; 4 bytes @ 0x10
  6140  0030                     	ds	1
  6141  0031                     ??_tm1637CycleAnimationStart:
  6142                           
  6143                           ; 1 bytes @ 0x11
  6144  0031                     	ds	1
  6145  0032                     ??_TMR4_Initialize:
  6146  0032                     ??_EUSART_Initialize:	
  6147                           ; 1 bytes @ 0x12
  6148                           
  6149  0032                     ??_EUSART_SetFramingErrorHandler:	
  6150                           ; 1 bytes @ 0x12
  6151                           
  6152  0032                     ??_EUSART_SetOverrunErrorHandler:	
  6153                           ; 1 bytes @ 0x12
  6154                           
  6155  0032                     ??_EUSART_SetErrorHandler:	
  6156                           ; 1 bytes @ 0x12
  6157                           
  6158  0032                     ??_TMR4_SetInterruptHandler:	
  6159                           ; 1 bytes @ 0x12
  6160                           
  6161  0032                     ??__Umul8_16:	
  6162                           ; 1 bytes @ 0x12
  6163                           
  6164  0032                     ??_SYSTEM_Initialize:	
  6165                           ; 1 bytes @ 0x12
  6166                           
  6167  0032                     ??_ADC_GetConversion:	
  6168                           ; 1 bytes @ 0x12
  6169                           
  6170  0032                     _tm1637CycleAnimationStart$1017:	
  6171                           ; 1 bytes @ 0x12
  6172                           
  6173  0032                     ___wmul@multiplicand:	
  6174                           ; 2 bytes @ 0x12
  6175                           
  6176  0032                     ___awdiv@dividend:	
  6177                           ; 2 bytes @ 0x12
  6178                           
  6179  0032                     ___awmod@dividend:	
  6180                           ; 2 bytes @ 0x12
  6181                           
  6182                           
  6183                           ; 2 bytes @ 0x12
  6184  0032                     	ds	1
  6185  0033                     ADC_GetConversion@channel:
  6186  0033                     write_reg@data:	
  6187                           ; 1 bytes @ 0x13
  6188                           
  6189                           
  6190                           ; 1 bytes @ 0x13
  6191  0033                     	ds	1
  6192  0034                     ??_write_reg:
  6193  0034                     ??___wmul:	
  6194                           ; 1 bytes @ 0x14
  6195                           
  6196  0034                     ??___awdiv:	
  6197                           ; 1 bytes @ 0x14
  6198                           
  6199  0034                     ??___awmod:	
  6200                           ; 1 bytes @ 0x14
  6201                           
  6202  0034                     ??___xxtofl:	
  6203                           ; 1 bytes @ 0x14
  6204                           
  6205  0034                     tm1637CycleAnimationStart@display:	
  6206                           ; 1 bytes @ 0x14
  6207                           
  6208  0034                     ___wmul@product:	
  6209                           ; 1 bytes @ 0x14
  6210                           
  6211  0034                     __Umul8_16@product:	
  6212                           ; 2 bytes @ 0x14
  6213                           
  6214                           
  6215                           ; 2 bytes @ 0x14
  6216  0034                     	ds	1
  6217  0035                     ___awdiv@counter:
  6218  0035                     ___awmod@counter:	
  6219                           ; 1 bytes @ 0x15
  6220                           
  6221                           
  6222                           ; 1 bytes @ 0x15
  6223  0035                     	ds	1
  6224  0036                     ??__tm1637Start:
  6225  0036                     ?__tm1637WriteByte:	
  6226                           ; 1 bytes @ 0x16
  6227                           
  6228  0036                     ??__tm1637ReadResult:	
  6229                           ; 1 bytes @ 0x16
  6230                           
  6231  0036                     ??__tm1637Stop:	
  6232                           ; 1 bytes @ 0x16
  6233                           
  6234  0036                     ?___lwdiv:	
  6235                           ; 1 bytes @ 0x16
  6236                           
  6237  0036                     __tm1637Start@display:	
  6238                           ; 2 bytes @ 0x16
  6239                           
  6240  0036                     __tm1637Stop@display:	
  6241                           ; 1 bytes @ 0x16
  6242                           
  6243  0036                     __tm1637ReadResult@display:	
  6244                           ; 1 bytes @ 0x16
  6245                           
  6246  0036                     __tm1637WriteByte@b:	
  6247                           ; 1 bytes @ 0x16
  6248                           
  6249  0036                     ___awdiv@sign:	
  6250                           ; 1 bytes @ 0x16
  6251                           
  6252  0036                     ___awmod@sign:	
  6253                           ; 1 bytes @ 0x16
  6254                           
  6255  0036                     ___lwdiv@divisor:	
  6256                           ; 1 bytes @ 0x16
  6257                           
  6258  0036                     __Umul8_16@word_mpld:	
  6259                           ; 2 bytes @ 0x16
  6260                           
  6261                           
  6262                           ; 2 bytes @ 0x16
  6263  0036                     	ds	1
  6264  0037                     ??__tm1637WriteByte:
  6265  0037                     ___awdiv@quotient:	
  6266                           ; 1 bytes @ 0x17
  6267                           
  6268                           
  6269                           ; 2 bytes @ 0x17
  6270  0037                     	ds	1
  6271  0038                     __Umul8_16@multiplier:
  6272  0038                     ___xxtofl@sign:	
  6273                           ; 1 bytes @ 0x18
  6274                           
  6275  0038                     __tm1637WriteByte@i:	
  6276                           ; 1 bytes @ 0x18
  6277                           
  6278  0038                     ___lwdiv@dividend:	
  6279                           ; 2 bytes @ 0x18
  6280                           
  6281                           
  6282                           ; 2 bytes @ 0x18
  6283  0038                     	ds	1
  6284  0039                     ___xxtofl@exp:
  6285                           
  6286                           ; 1 bytes @ 0x19
  6287  0039                     	ds	1
  6288  003A                     ??___lwdiv:
  6289  003A                     __tm1637WriteByte@display:	
  6290                           ; 1 bytes @ 0x1A
  6291                           
  6292  003A                     ___xxtofl@arg:	
  6293                           ; 1 bytes @ 0x1A
  6294                           
  6295                           
  6296                           ; 4 bytes @ 0x1A
  6297  003A                     	ds	1
  6298  003B                     ?_tm1637SetBrightness:
  6299  003B                     ?_tm1637DisplayDecimal:	
  6300                           ; 1 bytes @ 0x1B
  6301                           
  6302  003B                     tm1637SetBrightness@brightness:	
  6303                           ; 1 bytes @ 0x1B
  6304                           
  6305  003B                     ___lwdiv@counter:	
  6306                           ; 1 bytes @ 0x1B
  6307                           
  6308  003B                     tm1637DisplayDecimal@v:	
  6309                           ; 1 bytes @ 0x1B
  6310                           
  6311                           
  6312                           ; 2 bytes @ 0x1B
  6313  003B                     	ds	1
  6314  003C                     ??_tm1637SetBrightness:
  6315  003C                     ___lwdiv@quotient:	
  6316                           ; 1 bytes @ 0x1C
  6317                           
  6318                           
  6319                           ; 2 bytes @ 0x1C
  6320  003C                     	ds	1
  6321  003D                     tm1637SetBrightness@display:
  6322  003D                     tm1637DisplayDecimal@displaySeparator:	
  6323                           ; 1 bytes @ 0x1D
  6324                           
  6325                           
  6326                           ; 2 bytes @ 0x1D
  6327  003D                     	ds	1
  6328  003E                     ?_tm1637Init:
  6329  003E                     ?_duty_cycle:	
  6330                           ; 1 bytes @ 0x1E
  6331                           
  6332  003E                     ?___flmul:	
  6333                           ; 2 bytes @ 0x1E
  6334                           
  6335  003E                     duty_cycle@percent:	
  6336                           ; 4 bytes @ 0x1E
  6337                           
  6338  003E                     tm1637Init@DIO:	
  6339                           ; 2 bytes @ 0x1E
  6340                           
  6341  003E                     ___flmul@b:	
  6342                           ; 3 bytes @ 0x1E
  6343                           
  6344                           
  6345                           ; 4 bytes @ 0x1E
  6346  003E                     	ds	1
  6347  003F                     ??_tm1637DisplayDecimal:
  6348                           
  6349                           ; 1 bytes @ 0x1F
  6350  003F                     	ds	1
  6351  0040                     ?_PWM3_LoadDutyValue:
  6352  0040                     ?_PWM4_LoadDutyValue:	
  6353                           ; 1 bytes @ 0x20
  6354                           
  6355  0040                     ??_duty_cycle:	
  6356                           ; 1 bytes @ 0x20
  6357                           
  6358  0040                     PWM3_LoadDutyValue@dutyValue:	
  6359                           ; 1 bytes @ 0x20
  6360                           
  6361  0040                     PWM4_LoadDutyValue@dutyValue:	
  6362                           ; 2 bytes @ 0x20
  6363                           
  6364  0040                     tm1637DisplayDecimal@digitArr:	
  6365                           ; 2 bytes @ 0x20
  6366                           
  6367                           
  6368                           ; 4 bytes @ 0x20
  6369  0040                     	ds	1
  6370  0041                     tm1637Init@CLK:
  6371                           
  6372                           ; 3 bytes @ 0x21
  6373  0041                     	ds	1
  6374  0042                     ??_PWM3_LoadDutyValue:
  6375  0042                     ??_PWM4_LoadDutyValue:	
  6376                           ; 1 bytes @ 0x22
  6377                           
  6378  0042                     ___flmul@a:	
  6379                           ; 1 bytes @ 0x22
  6380                           
  6381                           
  6382                           ; 4 bytes @ 0x22
  6383  0042                     	ds	2
  6384  0044                     ??_tm1637Init:
  6385  0044                     ?_ramp_motor:	
  6386                           ; 1 bytes @ 0x24
  6387                           
  6388  0044                     ramp_motor@speed_controller_A:	
  6389                           ; 1 bytes @ 0x24
  6390                           
  6391  0044                     tm1637DisplayDecimal@i_1049:	
  6392                           ; 2 bytes @ 0x24
  6393                           
  6394                           
  6395                           ; 2 bytes @ 0x24
  6396  0044                     	ds	2
  6397  0046                     ??___flmul:
  6398  0046                     ramp_motor@speed_controller_B:	
  6399                           ; 1 bytes @ 0x26
  6400                           
  6401  0046                     tm1637DisplayDecimal@i:	
  6402                           ; 2 bytes @ 0x26
  6403                           
  6404                           
  6405                           ; 2 bytes @ 0x26
  6406  0046                     	ds	2
  6407  0048                     ramp_motor@dir:
  6408  0048                     tm1637DisplayDecimal@display:	
  6409                           ; 1 bytes @ 0x28
  6410                           
  6411                           
  6412                           ; 1 bytes @ 0x28
  6413  0048                     	ds	1
  6414  0049                     ramp_motor@start_speed:
  6415                           
  6416                           ; 2 bytes @ 0x29
  6417  0049                     	ds	2
  6418  004B                     ??___fldiv:
  6419  004B                     ramp_motor@end_speed:	
  6420                           ; 1 bytes @ 0x2B
  6421                           
  6422                           
  6423                           ; 2 bytes @ 0x2B
  6424  004B                     	ds	2
  6425  004D                     ramp_motor@ms:
  6426                           
  6427                           ; 2 bytes @ 0x2D
  6428  004D                     	ds	3
  6429                           
  6430                           	psect	maintext
  6431  0527                     __pmaintext:	
  6432 ;;
  6433 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6434 ;;
  6435 ;; *************** function _main *****************
  6436 ;; Defined at:
  6437 ;;		line 47 in file "main.c"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;		None
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;  adc_v           2   54[BANK1 ] unsigned short 
  6442 ;;  dir             1   51[BANK1 ] unsigned char 
  6443 ;;  10209           4   60[BANK1 ] volatile struct .
  6444 ;;  10207           4   56[BANK1 ] volatile struct .
  6445 ;;  adc_conv        2   52[BANK1 ] unsigned short 
  6446 ;;  display         1   64[BANK1 ] PTR volatile struct .
  6447 ;;		 -> tm1637Init@display(7), 
  6448 ;; Return value:  Size  Location     Type
  6449 ;;                  1    wreg      void 
  6450 ;; Registers used:
  6451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6452 ;; Tracked objects:
  6453 ;;		On entry : B1F/0
  6454 ;;		On exit  : 0/0
  6455 ;;		Unchanged: 0/0
  6456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6458 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  6459 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6460 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6461 ;;Total ram usage:       20 bytes
  6462 ;; Hardware stack levels required when called: 11
  6463 ;; This function calls:
  6464 ;;		_ADC_GetConversion
  6465 ;;		_PWM3_LoadDutyValue
  6466 ;;		_PWM4_LoadDutyValue
  6467 ;;		_SYSTEM_Initialize
  6468 ;;		___fldiv
  6469 ;;		___flmul
  6470 ;;		___fltol
  6471 ;;		___xxtofl
  6472 ;;		_duty_cycle
  6473 ;;		_ramp_motor
  6474 ;;		_tm1637CycleAnimationStart
  6475 ;;		_tm1637CycleAnimationStop
  6476 ;;		_tm1637DisplayDecimal
  6477 ;;		_tm1637Init
  6478 ;;		_tm1637SetBrightness
  6479 ;; This function is called by:
  6480 ;;		Startup code after reset
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484  0527                     _main:	
  6485                           ;psect for function _main
  6486                           
  6487  0527                     l3524:	
  6488                           ;incstack = 0
  6489                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6490                           
  6491                           
  6492                           ;main.c: 60:         (tPin){0x4, 0x2, &PORTA},;main.c: 61:         (tPin){0x20, 0x5, &PO
      +                          RTA};main.c: 49:     SYSTEM_Initialize();
  6493  0527  3188  20F1  3185   	fcall	_SYSTEM_Initialize
  6494                           
  6495                           ;main.c: 51:     PWM3_LoadDutyValue(duty_cycle(0));
  6496  052A  3000               	movlw	0
  6497  052B  0020               	movlb	0	; select bank0
  6498  052C  00BE               	movwf	duty_cycle@percent
  6499  052D  00BF               	movwf	duty_cycle@percent+1
  6500  052E  3189  2157  3185   	fcall	_duty_cycle
  6501  0531  0020               	movlb	0	; select bank0
  6502  0532  083F               	movf	?_duty_cycle+1,w
  6503  0533  00C1               	movwf	PWM3_LoadDutyValue@dutyValue+1
  6504  0534  083E               	movf	?_duty_cycle,w
  6505  0535  00C0               	movwf	PWM3_LoadDutyValue@dutyValue
  6506  0536  3189  2123  3185   	fcall	_PWM3_LoadDutyValue
  6507                           
  6508                           ;main.c: 52:     PWM4_LoadDutyValue(duty_cycle(0));
  6509  0539  3000               	movlw	0
  6510  053A  0020               	movlb	0	; select bank0
  6511  053B  00BE               	movwf	duty_cycle@percent
  6512  053C  00BF               	movwf	duty_cycle@percent+1
  6513  053D  3189  2157  3185   	fcall	_duty_cycle
  6514  0540  0020               	movlb	0	; select bank0
  6515  0541  083F               	movf	?_duty_cycle+1,w
  6516  0542  00C1               	movwf	PWM4_LoadDutyValue@dutyValue+1
  6517  0543  083E               	movf	?_duty_cycle,w
  6518  0544  00C0               	movwf	PWM4_LoadDutyValue@dutyValue
  6519  0545  3189  210A  3185   	fcall	_PWM4_LoadDutyValue
  6520  0548                     l3526:
  6521  0548  0022               	movlb	2	; select bank2
  6522  0549  128E               	bcf	14,5	;volatile
  6523  054A                     l3528:
  6524  054A  100E               	bcf	14,0	;volatile
  6525  054B                     l3530:
  6526  054B  108E               	bcf	14,1	;volatile
  6527  054C                     l3532:
  6528  054C  110C               	bcf	12,2	;volatile
  6529  054D                     l3534:
  6530  054D  128C               	bcf	12,5	;volatile
  6531  054E                     l3536:
  6532                           
  6533                           ;main.c: 59:     tm1637Pins_t *display = tm1637Init(
  6534  054E  0021               	movlb	1	; select bank1
  6535  054F  0864               	movf	(main@F10208+3)^(0+128),w	;volatile
  6536  0550  00DF               	movwf	(main@10209+3)^(0+128)	;volatile
  6537  0551  0863               	movf	(main@F10208+2)^(0+128),w	;volatile
  6538  0552  00DE               	movwf	(main@10209+2)^(0+128)	;volatile
  6539  0553  0862               	movf	(main@F10208+1)^(0+128),w	;volatile
  6540  0554  00DD               	movwf	(main@10209+1)^(0+128)	;volatile
  6541  0555  0861               	movf	main@F10208^(0+128),w	;volatile
  6542  0556  00DC               	movwf	main@10209^(0+128)	;volatile
  6543  0557                     l3538:
  6544  0557  0868               	movf	(main@F10206+3)^(0+128),w	;volatile
  6545  0558  00DB               	movwf	(main@10207+3)^(0+128)	;volatile
  6546  0559  0867               	movf	(main@F10206+2)^(0+128),w	;volatile
  6547  055A  00DA               	movwf	(main@10207+2)^(0+128)	;volatile
  6548  055B  0866               	movf	(main@F10206+1)^(0+128),w	;volatile
  6549  055C  00D9               	movwf	(main@10207+1)^(0+128)	;volatile
  6550  055D  0865               	movf	main@F10206^(0+128),w	;volatile
  6551  055E  00D8               	movwf	main@10207^(0+128)	;volatile
  6552  055F                     l3540:
  6553  055F  0858               	movf	main@10207^(0+128),w	;volatile
  6554  0560  0020               	movlb	0	; select bank0
  6555  0561  00BE               	movwf	tm1637Init@DIO
  6556  0562  0021               	movlb	1	; select bank1
  6557  0563  0859               	movf	(main@10207+1)^(0+128),w	;volatile
  6558  0564  0020               	movlb	0	; select bank0
  6559  0565  00BF               	movwf	tm1637Init@DIO+1
  6560  0566  0021               	movlb	1	; select bank1
  6561  0567  085A               	movf	(main@10207+2)^(0+128),w	;volatile
  6562  0568  0020               	movlb	0	; select bank0
  6563  0569  00C0               	movwf	tm1637Init@DIO+2
  6564  056A  0021               	movlb	1	; select bank1
  6565  056B  085C               	movf	main@10209^(0+128),w	;volatile
  6566  056C  0020               	movlb	0	; select bank0
  6567  056D  00C1               	movwf	tm1637Init@CLK
  6568  056E  0021               	movlb	1	; select bank1
  6569  056F  085D               	movf	(main@10209+1)^(0+128),w	;volatile
  6570  0570  0020               	movlb	0	; select bank0
  6571  0571  00C2               	movwf	tm1637Init@CLK+1
  6572  0572  0021               	movlb	1	; select bank1
  6573  0573  085E               	movf	(main@10209+2)^(0+128),w	;volatile
  6574  0574  0020               	movlb	0	; select bank0
  6575  0575  00C3               	movwf	tm1637Init@CLK+2
  6576  0576  318A  2224  3185   	fcall	_tm1637Init
  6577  0579  0021               	movlb	1	; select bank1
  6578  057A  00CD               	movwf	??_main^(0+128)
  6579  057B  084D               	movf	??_main^(0+128),w
  6580  057C  00E0               	movwf	main@display^(0+128)
  6581  057D                     l3542:
  6582  057D  3000               	movlw	0
  6583  057E  3189  2195  3185   	fcall	_ADC_GetConversion
  6584                           
  6585                           ;main.c: 66:     tm1637SetBrightness(display, 3);
  6586  0581  3003               	movlw	3
  6587  0582  0021               	movlb	1	; select bank1
  6588  0583  00CD               	movwf	??_main^(0+128)
  6589  0584  084D               	movf	??_main^(0+128),w
  6590  0585  0020               	movlb	0	; select bank0
  6591  0586  00BB               	movwf	tm1637SetBrightness@brightness
  6592  0587  0021               	movlb	1	; select bank1
  6593  0588  0860               	movf	main@display^(0+128),w
  6594  0589  3189  213C  3185   	fcall	_tm1637SetBrightness
  6595  058C                     l3544:
  6596                           
  6597                           ;main.c: 67:     tm1637DisplayDecimal(display, 0000, 1);
  6598  058C  3000               	movlw	0
  6599  058D  0020               	movlb	0	; select bank0
  6600  058E  00BB               	movwf	tm1637DisplayDecimal@v
  6601  058F  00BC               	movwf	tm1637DisplayDecimal@v+1
  6602  0590  3001               	movlw	1
  6603  0591  00BD               	movwf	tm1637DisplayDecimal@displaySeparator
  6604  0592  3000               	movlw	0
  6605  0593  00BE               	movwf	tm1637DisplayDecimal@displaySeparator+1
  6606  0594  0021               	movlb	1	; select bank1
  6607  0595  0860               	movf	main@display^(0+128),w
  6608  0596  318F  2753  3185   	fcall	_tm1637DisplayDecimal
  6609  0599                     l3546:
  6610                           
  6611                           ;main.c: 69:     (INTCONbits.GIE = 1);
  6612  0599  178B               	bsf	11,7	;volatile
  6613  059A                     l3548:
  6614                           
  6615                           ;main.c: 70:     (INTCONbits.PEIE = 1);
  6616  059A  170B               	bsf	11,6	;volatile
  6617  059B                     l3550:
  6618                           
  6619                           ;main.c: 73:         _delay((unsigned long)((100)*(32000000/4000.0)));
  6620  059B  3005               	movlw	5
  6621  059C  0021               	movlb	1	; select bank1
  6622  059D  00CE               	movwf	(??_main^(0+128)+1)
  6623  059E  300F               	movlw	15
  6624  059F  00CD               	movwf	??_main^(0+128)
  6625  05A0  30F1               	movlw	241
  6626  05A1                     u3997:
  6627  05A1  0B89               	decfsz	9,f
  6628  05A2  2DA1               	goto	u3997
  6629  05A3  0BCD               	decfsz	??_main^(0+128),f
  6630  05A4  2DA1               	goto	u3997
  6631  05A5  0BCE               	decfsz	(??_main^(0+128)+1),f
  6632  05A6  2DA1               	goto	u3997
  6633  05A7                     l3552:
  6634                           
  6635                           ;main.c: 74:         adc_conv = ADC_GetConversion(channel_AN0);
  6636  05A7  3000               	movlw	0
  6637  05A8  3189  2195  3185   	fcall	_ADC_GetConversion
  6638  05AB  0020               	movlb	0	; select bank0
  6639  05AC  0831               	movf	?_ADC_GetConversion+1,w
  6640  05AD  0021               	movlb	1	; select bank1
  6641  05AE  00D5               	movwf	(main@adc_conv+1)^(0+128)
  6642  05AF  0020               	movlb	0	; select bank0
  6643  05B0  0830               	movf	?_ADC_GetConversion,w
  6644  05B1  0021               	movlb	1	; select bank1
  6645  05B2  00D4               	movwf	main@adc_conv^(0+128)
  6646  05B3                     l3554:
  6647                           
  6648                           ;main.c: 75:         uint16_t adc_v = (uint16_t)((((float)adc_conv * 5)/1023) * 100);
  6649  05B3  0854               	movf	main@adc_conv^(0+128),w
  6650  05B4  0020               	movlb	0	; select bank0
  6651  05B5  00B0               	movwf	___xxtofl@val
  6652  05B6  0021               	movlb	1	; select bank1
  6653  05B7  0855               	movf	(main@adc_conv+1)^(0+128),w
  6654  05B8  0020               	movlb	0	; select bank0
  6655  05B9  00B1               	movwf	___xxtofl@val+1
  6656  05BA  01B2               	clrf	___xxtofl@val+2
  6657  05BB  01B3               	clrf	___xxtofl@val+3
  6658  05BC  3000               	movlw	0
  6659  05BD  318E  26A6  3185   	fcall	___xxtofl
  6660  05C0  0020               	movlb	0	; select bank0
  6661  05C1  0833               	movf	?___xxtofl+3,w
  6662  05C2  00C5               	movwf	___flmul@a+3
  6663  05C3  0832               	movf	?___xxtofl+2,w
  6664  05C4  00C4               	movwf	___flmul@a+2
  6665  05C5  0831               	movf	?___xxtofl+1,w
  6666  05C6  00C3               	movwf	___flmul@a+1
  6667  05C7  0830               	movf	?___xxtofl,w
  6668  05C8  00C2               	movwf	___flmul@a
  6669  05C9  3040               	movlw	64
  6670  05CA  00C1               	movwf	___flmul@b+3
  6671  05CB  30A0               	movlw	160
  6672  05CC  00C0               	movwf	___flmul@b+2
  6673  05CD  3000               	movlw	0
  6674  05CE  00BF               	movwf	___flmul@b+1
  6675  05CF  3000               	movlw	0
  6676  05D0  00BE               	movwf	___flmul@b
  6677  05D1  3180  203B  3185   	fcall	___flmul
  6678  05D4  0020               	movlb	0	; select bank0
  6679  05D5  0841               	movf	?___flmul+3,w
  6680  05D6  0021               	movlb	1	; select bank1
  6681  05D7  00B4               	movwf	(___fldiv@b+3)^(0+128)
  6682  05D8  0020               	movlb	0	; select bank0
  6683  05D9  0840               	movf	?___flmul+2,w
  6684  05DA  0021               	movlb	1	; select bank1
  6685  05DB  00B3               	movwf	(___fldiv@b+2)^(0+128)
  6686  05DC  0020               	movlb	0	; select bank0
  6687  05DD  083F               	movf	?___flmul+1,w
  6688  05DE  0021               	movlb	1	; select bank1
  6689  05DF  00B2               	movwf	(___fldiv@b+1)^(0+128)
  6690  05E0  0020               	movlb	0	; select bank0
  6691  05E1  083E               	movf	?___flmul,w
  6692  05E2  0021               	movlb	1	; select bank1
  6693  05E3  00B1               	movwf	___fldiv@b^(0+128)
  6694  05E4  3044               	movlw	68
  6695  05E5  00B0               	movwf	(___fldiv@a+3)^(0+128)
  6696  05E6  307F               	movlw	127
  6697  05E7  00AF               	movwf	(___fldiv@a+2)^(0+128)
  6698  05E8  30C0               	movlw	192
  6699  05E9  00AE               	movwf	(___fldiv@a+1)^(0+128)
  6700  05EA  3000               	movlw	0
  6701  05EB  00AD               	movwf	___fldiv@a^(0+128)
  6702  05EC  3183  233E  3185   	fcall	___fldiv
  6703  05EF  0021               	movlb	1	; select bank1
  6704  05F0  0830               	movf	(?___fldiv+3)^(0+128),w
  6705  05F1  00D2               	movwf	(_main$2032+3)^(0+128)
  6706  05F2  082F               	movf	(?___fldiv+2)^(0+128),w
  6707  05F3  00D1               	movwf	(_main$2032+2)^(0+128)
  6708  05F4  082E               	movf	(?___fldiv+1)^(0+128),w
  6709  05F5  00D0               	movwf	(_main$2032+1)^(0+128)
  6710  05F6  082D               	movf	?___fldiv^(0+128),w
  6711  05F7  00CF               	movwf	_main$2032^(0+128)
  6712  05F8                     l3556:
  6713                           
  6714                           ;main.c: 75:         uint16_t adc_v = (uint16_t)((((float)adc_conv * 5)/1023) * 100);
  6715  05F8  0852               	movf	(_main$2032+3)^(0+128),w
  6716  05F9  0020               	movlb	0	; select bank0
  6717  05FA  00C5               	movwf	___flmul@a+3
  6718  05FB  0021               	movlb	1	; select bank1
  6719  05FC  0851               	movf	(_main$2032+2)^(0+128),w
  6720  05FD  0020               	movlb	0	; select bank0
  6721  05FE  00C4               	movwf	___flmul@a+2
  6722  05FF  0021               	movlb	1	; select bank1
  6723  0600  0850               	movf	(_main$2032+1)^(0+128),w
  6724  0601  0020               	movlb	0	; select bank0
  6725  0602  00C3               	movwf	___flmul@a+1
  6726  0603  0021               	movlb	1	; select bank1
  6727  0604  084F               	movf	_main$2032^(0+128),w
  6728  0605  0020               	movlb	0	; select bank0
  6729  0606  00C2               	movwf	___flmul@a
  6730  0607  3042               	movlw	66
  6731  0608  00C1               	movwf	___flmul@b+3
  6732  0609  30C8               	movlw	200
  6733  060A  00C0               	movwf	___flmul@b+2
  6734  060B  3000               	movlw	0
  6735  060C  00BF               	movwf	___flmul@b+1
  6736  060D  3000               	movlw	0
  6737  060E  00BE               	movwf	___flmul@b
  6738  060F  3180  203B  3185   	fcall	___flmul
  6739  0612  0020               	movlb	0	; select bank0
  6740  0613  0841               	movf	?___flmul+3,w
  6741  0614  0021               	movlb	1	; select bank1
  6742  0615  00C5               	movwf	(___fltol@f1+3)^(0+128)
  6743  0616  0020               	movlb	0	; select bank0
  6744  0617  0840               	movf	?___flmul+2,w
  6745  0618  0021               	movlb	1	; select bank1
  6746  0619  00C4               	movwf	(___fltol@f1+2)^(0+128)
  6747  061A  0020               	movlb	0	; select bank0
  6748  061B  083F               	movf	?___flmul+1,w
  6749  061C  0021               	movlb	1	; select bank1
  6750  061D  00C3               	movwf	(___fltol@f1+1)^(0+128)
  6751  061E  0020               	movlb	0	; select bank0
  6752  061F  083E               	movf	?___flmul,w
  6753  0620  0021               	movlb	1	; select bank1
  6754  0621  00C2               	movwf	___fltol@f1^(0+128)
  6755  0622  318E  2631  3185   	fcall	___fltol
  6756  0625  0021               	movlb	1	; select bank1
  6757  0626  0843               	movf	(?___fltol+1)^(0+128),w
  6758  0627  00D7               	movwf	(main@adc_v+1)^(0+128)
  6759  0628  0842               	movf	?___fltol^(0+128),w
  6760  0629  00D6               	movwf	main@adc_v^(0+128)
  6761  062A                     l3558:
  6762                           
  6763                           ;main.c: 76:         uint8_t dir = (adc_v > 300) ? 0 : 1;
  6764  062A  3001               	movlw	1
  6765  062B  0257               	subwf	(main@adc_v+1)^(0+128),w
  6766  062C  302D               	movlw	45
  6767  062D  1903               	skipnz
  6768  062E  0256               	subwf	main@adc_v^(0+128),w
  6769  062F  1C03               	skipc
  6770  0630  2E32               	goto	u3891
  6771  0631  2E34               	goto	u3890
  6772  0632                     u3891:
  6773  0632  3001               	movlw	1
  6774  0633  2E35               	goto	u3900
  6775  0634                     u3890:
  6776  0634  3000               	movlw	0
  6777  0635                     u3900:
  6778  0635  00CD               	movwf	??_main^(0+128)
  6779  0636  084D               	movf	??_main^(0+128),w
  6780  0637  00D3               	movwf	main@dir^(0+128)
  6781  0638                     l3560:
  6782                           
  6783                           ;main.c: 83:         if (adc_v > 390 && !display->animationRunning) {
  6784  0638  3001               	movlw	1
  6785  0639  0257               	subwf	(main@adc_v+1)^(0+128),w
  6786  063A  3087               	movlw	135
  6787  063B  1903               	skipnz
  6788  063C  0256               	subwf	main@adc_v^(0+128),w
  6789  063D  1C03               	skipc
  6790  063E  2E40               	goto	u3911
  6791  063F  2E41               	goto	u3910
  6792  0640                     u3911:
  6793  0640  2E52               	goto	l3566
  6794  0641                     u3910:
  6795  0641                     l3562:
  6796  0641  0860               	movf	main@display^(0+128),w
  6797  0642  0086               	movwf	6
  6798  0643  0187               	clrf	7
  6799  0644  0801               	movf	1,w
  6800  0645  1D03               	btfss	3,2
  6801  0646  2E48               	goto	u3921
  6802  0647  2E49               	goto	u3920
  6803  0648                     u3921:
  6804  0648  2E52               	goto	l3566
  6805  0649                     u3920:
  6806  0649                     l3564:
  6807                           
  6808                           ;main.c: 84:             tm1637CycleAnimationStart(display, 1);
  6809  0649  0020               	movlb	0	; select bank0
  6810  064A  01B0               	clrf	tm1637CycleAnimationStart@dir
  6811  064B  0AB0               	incf	tm1637CycleAnimationStart@dir,f
  6812  064C  0021               	movlb	1	; select bank1
  6813  064D  0860               	movf	main@display^(0+128),w
  6814  064E  3189  21DA  3185   	fcall	_tm1637CycleAnimationStart
  6815                           
  6816                           ;main.c: 85:         } else if (adc_v < 110 && !display->animationRunning) {
  6817  0651  2E97               	goto	l3582
  6818  0652                     l3566:
  6819  0652  3000               	movlw	0
  6820  0653  0257               	subwf	(main@adc_v+1)^(0+128),w
  6821  0654  306E               	movlw	110
  6822  0655  1903               	skipnz
  6823  0656  0256               	subwf	main@adc_v^(0+128),w
  6824  0657  1803               	skipnc
  6825  0658  2E5A               	goto	u3931
  6826  0659  2E5B               	goto	u3930
  6827  065A                     u3931:
  6828  065A  2E6B               	goto	l3572
  6829  065B                     u3930:
  6830  065B                     l3568:
  6831  065B  0860               	movf	main@display^(0+128),w
  6832  065C  0086               	movwf	6
  6833  065D  0187               	clrf	7
  6834  065E  0801               	movf	1,w
  6835  065F  1D03               	btfss	3,2
  6836  0660  2E62               	goto	u3941
  6837  0661  2E63               	goto	u3940
  6838  0662                     u3941:
  6839  0662  2E6B               	goto	l3572
  6840  0663                     u3940:
  6841  0663                     l3570:
  6842                           
  6843                           ;main.c: 86:             tm1637CycleAnimationStart(display, 0);
  6844  0663  0020               	movlb	0	; select bank0
  6845  0664  01B0               	clrf	tm1637CycleAnimationStart@dir
  6846  0665  0021               	movlb	1	; select bank1
  6847  0666  0860               	movf	main@display^(0+128),w
  6848  0667  3189  21DA  3185   	fcall	_tm1637CycleAnimationStart
  6849                           
  6850                           ;main.c: 87:         } else if (display->animationRunning && (adc_v > 100 && adc_v < 380
      +                          )){
  6851  066A  2E97               	goto	l3582
  6852  066B                     l3572:
  6853  066B  0860               	movf	main@display^(0+128),w
  6854  066C  0086               	movwf	6
  6855  066D  0187               	clrf	7
  6856  066E  0801               	movf	1,w
  6857  066F  1903               	btfsc	3,2
  6858  0670  2E72               	goto	u3951
  6859  0671  2E73               	goto	u3950
  6860  0672                     u3951:
  6861  0672  2E97               	goto	l3582
  6862  0673                     u3950:
  6863  0673                     l3574:
  6864  0673  3000               	movlw	0
  6865  0674  0257               	subwf	(main@adc_v+1)^(0+128),w
  6866  0675  3065               	movlw	101
  6867  0676  1903               	skipnz
  6868  0677  0256               	subwf	main@adc_v^(0+128),w
  6869  0678  1C03               	skipc
  6870  0679  2E7B               	goto	u3961
  6871  067A  2E7C               	goto	u3960
  6872  067B                     u3961:
  6873  067B  2E97               	goto	l3582
  6874  067C                     u3960:
  6875  067C                     l3576:
  6876  067C  3001               	movlw	1
  6877  067D  0257               	subwf	(main@adc_v+1)^(0+128),w
  6878  067E  307C               	movlw	124
  6879  067F  1903               	skipnz
  6880  0680  0256               	subwf	main@adc_v^(0+128),w
  6881  0681  1803               	skipnc
  6882  0682  2E84               	goto	u3971
  6883  0683  2E85               	goto	u3970
  6884  0684                     u3971:
  6885  0684  2E97               	goto	l3582
  6886  0685                     u3970:
  6887  0685                     l3578:
  6888                           
  6889                           ;main.c: 88:             tm1637DisplayDecimal(display, 0000, 1);
  6890  0685  3000               	movlw	0
  6891  0686  0020               	movlb	0	; select bank0
  6892  0687  00BB               	movwf	tm1637DisplayDecimal@v
  6893  0688  00BC               	movwf	tm1637DisplayDecimal@v+1
  6894  0689  3001               	movlw	1
  6895  068A  00BD               	movwf	tm1637DisplayDecimal@displaySeparator
  6896  068B  3000               	movlw	0
  6897  068C  00BE               	movwf	tm1637DisplayDecimal@displaySeparator+1
  6898  068D  0021               	movlb	1	; select bank1
  6899  068E  0860               	movf	main@display^(0+128),w
  6900  068F  318F  2753  3185   	fcall	_tm1637DisplayDecimal
  6901  0692                     l3580:
  6902                           
  6903                           ;main.c: 89:             tm1637CycleAnimationStop(display);
  6904  0692  0021               	movlb	1	; select bank1
  6905  0693  0860               	movf	main@display^(0+128),w
  6906  0694  3188  2064  3185   	fcall	_tm1637CycleAnimationStop
  6907  0697                     l3582:
  6908                           
  6909                           ;main.c: 91:         if (!PORTCbits.RC4) {
  6910  0697  0020               	movlb	0	; select bank0
  6911  0698  1A0E               	btfsc	14,4	;volatile
  6912  0699  2E9B               	goto	u3981
  6913  069A  2E9C               	goto	u3980
  6914  069B                     u3981:
  6915  069B  2D9B               	goto	l3550
  6916  069C                     u3980:
  6917  069C                     l3584:
  6918                           
  6919                           ;main.c: 100:             ramp_motor(
  6920  069C  3023               	movlw	low _PWM3_LoadDutyValue
  6921  069D  00C4               	movwf	ramp_motor@speed_controller_A
  6922  069E  3009               	movlw	high _PWM3_LoadDutyValue
  6923  069F  00C5               	movwf	ramp_motor@speed_controller_A+1
  6924  06A0  300A               	movlw	low _PWM4_LoadDutyValue
  6925  06A1  00C6               	movwf	ramp_motor@speed_controller_B
  6926  06A2  3009               	movlw	high _PWM4_LoadDutyValue
  6927  06A3  00C7               	movwf	ramp_motor@speed_controller_B+1
  6928  06A4  01C8               	clrf	ramp_motor@dir
  6929  06A5  3000               	movlw	0
  6930  06A6  00C9               	movwf	ramp_motor@start_speed
  6931  06A7  00CA               	movwf	ramp_motor@start_speed+1
  6932  06A8  3046               	movlw	70
  6933  06A9  00CB               	movwf	ramp_motor@end_speed
  6934  06AA  3000               	movlw	0
  6935  06AB  00CC               	movwf	ramp_motor@end_speed+1
  6936  06AC  30D0               	movlw	208
  6937  06AD  00CD               	movwf	ramp_motor@ms
  6938  06AE  3007               	movlw	7
  6939  06AF  00CE               	movwf	ramp_motor@ms+1
  6940  06B0  3186  26C1  3185   	fcall	_ramp_motor
  6941  06B3                     l3586:
  6942                           
  6943                           ;main.c: 108:             tm1637CycleAnimationStart(display, dir);
  6944  06B3  0021               	movlb	1	; select bank1
  6945  06B4  0853               	movf	main@dir^(0+128),w
  6946  06B5  00CD               	movwf	??_main^(0+128)
  6947  06B6  084D               	movf	??_main^(0+128),w
  6948  06B7  0020               	movlb	0	; select bank0
  6949  06B8  00B0               	movwf	tm1637CycleAnimationStart@dir
  6950  06B9  0021               	movlb	1	; select bank1
  6951  06BA  0860               	movf	main@display^(0+128),w
  6952  06BB  3189  21DA  3185   	fcall	_tm1637CycleAnimationStart
  6953  06BE  2D9B               	goto	l3550
  6954  06BF  3180  2819         	ljmp	start
  6955  06C1                     __end_of_main:
  6956                           
  6957                           	psect	text1
  6958  0A24                     __ptext1:	
  6959 ;; *************** function _tm1637Init *****************
  6960 ;; Defined at:
  6961 ;;		line 50 in file "TM1637Display.c"
  6962 ;; Parameters:    Size  Location     Type
  6963 ;;  DIO             3   30[BANK0 ] volatile struct .
  6964 ;;  CLK             3   33[BANK0 ] volatile struct .
  6965 ;; Auto vars:     Size  Location     Type
  6966 ;;		None
  6967 ;; Return value:  Size  Location     Type
  6968 ;;                  1    wreg      PTR volatile struct .
  6969 ;; Registers used:
  6970 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6971 ;; Tracked objects:
  6972 ;;		On entry : 0/0
  6973 ;;		On exit  : 0/0
  6974 ;;		Unchanged: 0/0
  6975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6976 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6978 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6979 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6980 ;;Total ram usage:        7 bytes
  6981 ;; Hardware stack levels used: 1
  6982 ;; Hardware stack levels required when called: 10
  6983 ;; This function calls:
  6984 ;;		_TMR4_SetInterruptHandler
  6985 ;;		_TMR4_StopTimer
  6986 ;;		_tm1637SetBrightness
  6987 ;; This function is called by:
  6988 ;;		_main
  6989 ;; This function uses a non-reentrant model
  6990 ;;
  6991                           
  6992  0A24                     _tm1637Init:	
  6993                           ;psect for function _tm1637Init
  6994                           
  6995  0A24                     l2644:	
  6996                           ;incstack = 0
  6997                           ; Regs used in _tm1637Init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6998                           
  6999                           
  7000                           ;TM1637Display.c: 51:     static tm1637Pins_t display;;TM1637Display.c: 52:     display.
      +                          DIO = DIO;
  7001  0A24  0020               	movlb	0	; select bank0
  7002  0A25  083E               	movf	tm1637Init@DIO,w	;volatile
  7003  0A26  0021               	movlb	1	; select bank1
  7004  0A27  00EA               	movwf	(tm1637Init@display^(0+128)+1)	;volatile
  7005  0A28  0020               	movlb	0	; select bank0
  7006  0A29  083F               	movf	tm1637Init@DIO+1,w	;volatile
  7007  0A2A  0021               	movlb	1	; select bank1
  7008  0A2B  00EB               	movwf	((tm1637Init@display+1)^(0+128)+1)	;volatile
  7009  0A2C  0020               	movlb	0	; select bank0
  7010  0A2D  0840               	movf	tm1637Init@DIO+2,w	;volatile
  7011  0A2E  0021               	movlb	1	; select bank1
  7012  0A2F  00EC               	movwf	((tm1637Init@display+2)^(0+128)+1)	;volatile
  7013                           
  7014                           ;TM1637Display.c: 53:     display.CLK = CLK;
  7015  0A30  0020               	movlb	0	; select bank0
  7016  0A31  0841               	movf	tm1637Init@CLK,w	;volatile
  7017  0A32  0021               	movlb	1	; select bank1
  7018  0A33  00ED               	movwf	(tm1637Init@display^(0+128)+4)	;volatile
  7019  0A34  0020               	movlb	0	; select bank0
  7020  0A35  0842               	movf	tm1637Init@CLK+1,w	;volatile
  7021  0A36  0021               	movlb	1	; select bank1
  7022  0A37  00EE               	movwf	((tm1637Init@display+1)^(0+128)+4)	;volatile
  7023  0A38  0020               	movlb	0	; select bank0
  7024  0A39  0843               	movf	tm1637Init@CLK+2,w	;volatile
  7025  0A3A  0021               	movlb	1	; select bank1
  7026  0A3B  00EF               	movwf	((tm1637Init@display+2)^(0+128)+4)	;volatile
  7027  0A3C                     l2646:
  7028                           
  7029                           ;TM1637Display.c: 54:     display.animationRunning = 0;
  7030  0A3C  01E9               	clrf	tm1637Init@display^(0+128)	;volatile
  7031  0A3D                     l2648:
  7032                           
  7033                           ;TM1637Display.c: 56:     tm1637SetBrightness(&display, 8);
  7034  0A3D  3008               	movlw	8
  7035  0A3E  0020               	movlb	0	; select bank0
  7036  0A3F  00C4               	movwf	??_tm1637Init
  7037  0A40  0844               	movf	??_tm1637Init,w
  7038  0A41  00BB               	movwf	tm1637SetBrightness@brightness
  7039  0A42  30E9               	movlw	(low (tm1637Init@display| 0))& (0+255)
  7040  0A43  3189  213C  318A   	fcall	_tm1637SetBrightness
  7041  0A46                     l2650:
  7042                           
  7043                           ;TM1637Display.c: 58:     TMR4_StopTimer();
  7044  0A46  3188  2015  318A   	fcall	_TMR4_StopTimer
  7045  0A49                     l2652:
  7046                           
  7047                           ;TM1637Display.c: 59:     TMR4_SetInterruptHandler(display_animation_timer_isr);
  7048  0A49  306C               	movlw	low _display_animation_timer_isr
  7049  0A4A  0020               	movlb	0	; select bank0
  7050  0A4B  00B0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  7051  0A4C  300C               	movlw	high _display_animation_timer_isr
  7052  0A4D  00B1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  7053  0A4E  3188  202B  318A   	fcall	_TMR4_SetInterruptHandler
  7054  0A51                     l2654:
  7055                           
  7056                           ;TM1637Display.c: 61:     return &display;
  7057  0A51  30E9               	movlw	(low (tm1637Init@display| 0))& (0+255)
  7058  0A52                     l437:
  7059  0A52  0008               	return
  7060  0A53                     __end_of_tm1637Init:
  7061                           
  7062                           	psect	text2
  7063  093C                     __ptext2:	
  7064 ;; *************** function _tm1637SetBrightness *****************
  7065 ;; Defined at:
  7066 ;;		line 139 in file "TM1637Display.c"
  7067 ;; Parameters:    Size  Location     Type
  7068 ;;  display         1    wreg     PTR volatile struct .
  7069 ;;		 -> tm1637Init@display(7), 
  7070 ;;  brightness      1   27[BANK0 ] unsigned char 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;  display         1   29[BANK0 ] PTR volatile struct .
  7073 ;;		 -> tm1637Init@display(7), 
  7074 ;; Return value:  Size  Location     Type
  7075 ;;                  1    wreg      void 
  7076 ;; Registers used:
  7077 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7078 ;; Tracked objects:
  7079 ;;		On entry : 0/0
  7080 ;;		On exit  : 0/0
  7081 ;;		Unchanged: 0/0
  7082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7083 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7084 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7085 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7086 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7087 ;;Total ram usage:        3 bytes
  7088 ;; Hardware stack levels used: 1
  7089 ;; Hardware stack levels required when called: 9
  7090 ;; This function calls:
  7091 ;;		__tm1637ReadResult
  7092 ;;		__tm1637Start
  7093 ;;		__tm1637Stop
  7094 ;;		__tm1637WriteByte
  7095 ;; This function is called by:
  7096 ;;		_main
  7097 ;;		_tm1637Init
  7098 ;; This function uses a non-reentrant model
  7099 ;;
  7100                           
  7101  093C                     _tm1637SetBrightness:	
  7102                           ;psect for function _tm1637SetBrightness
  7103                           
  7104                           
  7105                           ;incstack = 0
  7106                           ; Regs used in _tm1637SetBrightness: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7107                           ;tm1637SetBrightness@display stored from wreg
  7108  093C  0020               	movlb	0	; select bank0
  7109  093D  00BD               	movwf	tm1637SetBrightness@display
  7110  093E                     l2484:
  7111                           
  7112                           ;TM1637Display.c: 145:     _tm1637Start(display);
  7113  093E  083D               	movf	tm1637SetBrightness@display,w
  7114  093F  318A  22B5  3189   	fcall	__tm1637Start
  7115                           
  7116                           ;TM1637Display.c: 146:     _tm1637WriteByte(display, 0x87 + brightness);
  7117  0942  0020               	movlb	0	; select bank0
  7118  0943  083B               	movf	tm1637SetBrightness@brightness,w
  7119  0944  3E87               	addlw	135
  7120  0945  00BC               	movwf	??_tm1637SetBrightness
  7121  0946  083C               	movf	??_tm1637SetBrightness,w
  7122  0947  00B6               	movwf	__tm1637WriteByte@b
  7123  0948  083D               	movf	tm1637SetBrightness@display,w
  7124  0949  318D  2572  3189   	fcall	__tm1637WriteByte
  7125                           
  7126                           ;TM1637Display.c: 147:     _tm1637ReadResult(display);
  7127  094C  0020               	movlb	0	; select bank0
  7128  094D  083D               	movf	tm1637SetBrightness@display,w
  7129  094E  318B  231D  3189   	fcall	__tm1637ReadResult
  7130                           
  7131                           ;TM1637Display.c: 148:     _tm1637Stop(display);
  7132  0951  0020               	movlb	0	; select bank0
  7133  0952  083D               	movf	tm1637SetBrightness@display,w
  7134  0953  318C  2422  3189   	fcall	__tm1637Stop
  7135  0956                     l463:
  7136  0956  0008               	return
  7137  0957                     __end_of_tm1637SetBrightness:
  7138                           
  7139                           	psect	text3
  7140  0F53                     __ptext3:	
  7141 ;; *************** function _tm1637DisplayDecimal *****************
  7142 ;; Defined at:
  7143 ;;		line 110 in file "TM1637Display.c"
  7144 ;; Parameters:    Size  Location     Type
  7145 ;;  display         1    wreg     PTR volatile struct .
  7146 ;;		 -> tm1637Init@display(7), 
  7147 ;;  v               2   27[BANK0 ] int 
  7148 ;;  displaySepar    2   29[BANK0 ] int 
  7149 ;; Auto vars:     Size  Location     Type
  7150 ;;  display         1   40[BANK0 ] PTR volatile struct .
  7151 ;;		 -> tm1637Init@display(7), 
  7152 ;;  i               2   36[BANK0 ] int 
  7153 ;;  i               2   38[BANK0 ] int 
  7154 ;;  digitArr        4   32[BANK0 ] unsigned char [4]
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  1    wreg      void 
  7157 ;; Registers used:
  7158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7164 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7165 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7166 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7167 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7168 ;;Total ram usage:       14 bytes
  7169 ;; Hardware stack levels used: 1
  7170 ;; Hardware stack levels required when called: 9
  7171 ;; This function calls:
  7172 ;;		___awdiv
  7173 ;;		___awmod
  7174 ;;		__tm1637ReadResult
  7175 ;;		__tm1637Start
  7176 ;;		__tm1637Stop
  7177 ;;		__tm1637WriteByte
  7178 ;; This function is called by:
  7179 ;;		_main
  7180 ;; This function uses a non-reentrant model
  7181 ;;
  7182                           
  7183  0F53                     _tm1637DisplayDecimal:	
  7184                           ;psect for function _tm1637DisplayDecimal
  7185                           
  7186                           
  7187                           ;incstack = 0
  7188                           ; Regs used in _tm1637DisplayDecimal: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7189                           ;tm1637DisplayDecimal@display stored from wreg
  7190  0F53  0020               	movlb	0	; select bank0
  7191  0F54  00C8               	movwf	tm1637DisplayDecimal@display
  7192  0F55                     l2658:
  7193                           
  7194                           ;TM1637Display.c: 111:     unsigned char digitArr[4];;TM1637Display.c: 112:     for (int
      +                           i = 0; i < 4; ++i) {
  7195  0F55  01C6               	clrf	tm1637DisplayDecimal@i
  7196  0F56  01C7               	clrf	tm1637DisplayDecimal@i+1
  7197  0F57                     l2664:
  7198                           
  7199                           ;TM1637Display.c: 113:         digitArr[i] = segmentMap[v % 10];
  7200  0F57  300A               	movlw	10
  7201  0F58  0020               	movlb	0	; select bank0
  7202  0F59  00B0               	movwf	___awmod@divisor
  7203  0F5A  3000               	movlw	0
  7204  0F5B  00B1               	movwf	___awmod@divisor+1
  7205  0F5C  083C               	movf	tm1637DisplayDecimal@v+1,w
  7206  0F5D  00B3               	movwf	___awmod@dividend+1
  7207  0F5E  083B               	movf	tm1637DisplayDecimal@v,w
  7208  0F5F  00B2               	movwf	___awmod@dividend
  7209  0F60  3187  27A9  318F   	fcall	___awmod
  7210  0F63  0020               	movlb	0	; select bank0
  7211  0F64  0831               	movf	?___awmod+1,w
  7212  0F65  0085               	movwf	5
  7213  0F66  0830               	movf	?___awmod,w
  7214  0F67  0084               	movwf	4
  7215  0F68  3030               	movlw	low (_segmentMap| (0+32768))
  7216  0F69  0784               	addwf	4,f
  7217  0F6A  3090               	movlw	high (_segmentMap| (0+32768))
  7218  0F6B  3D85               	addwfc	5,f
  7219  0F6C  0800               	movf	0,w	;code access
  7220  0F6D  00BF               	movwf	??_tm1637DisplayDecimal
  7221  0F6E  0846               	movf	tm1637DisplayDecimal@i,w
  7222  0F6F  3E40               	addlw	(low (tm1637DisplayDecimal@digitArr| 0))& (0+255)
  7223  0F70  0086               	movwf	6
  7224  0F71  0187               	clrf	7
  7225  0F72  083F               	movf	??_tm1637DisplayDecimal,w
  7226  0F73  0081               	movwf	1
  7227  0F74                     l2666:
  7228                           
  7229                           ;TM1637Display.c: 114:         if (i == 2 && displaySeparator) {
  7230  0F74  3002               	movlw	2
  7231  0F75  0646               	xorwf	tm1637DisplayDecimal@i,w
  7232  0F76  0447               	iorwf	tm1637DisplayDecimal@i+1,w
  7233  0F77  1D03               	btfss	3,2
  7234  0F78  2F7A               	goto	u2171
  7235  0F79  2F7B               	goto	u2170
  7236  0F7A                     u2171:
  7237  0F7A  2F86               	goto	l2672
  7238  0F7B                     u2170:
  7239  0F7B                     l2668:
  7240  0F7B  083D               	movf	tm1637DisplayDecimal@displaySeparator,w
  7241  0F7C  043E               	iorwf	tm1637DisplayDecimal@displaySeparator+1,w
  7242  0F7D  1903               	btfsc	3,2
  7243  0F7E  2F80               	goto	u2181
  7244  0F7F  2F81               	goto	u2180
  7245  0F80                     u2181:
  7246  0F80  2F86               	goto	l2672
  7247  0F81                     u2180:
  7248  0F81                     l2670:
  7249                           
  7250                           ;TM1637Display.c: 115:             digitArr[i] |= 1 << 7;
  7251  0F81  0846               	movf	tm1637DisplayDecimal@i,w
  7252  0F82  3E40               	addlw	(low (tm1637DisplayDecimal@digitArr| 0))& (0+255)
  7253  0F83  0086               	movwf	6
  7254  0F84  0187               	clrf	7
  7255  0F85  1781               	bsf	1,7
  7256  0F86                     l2672:
  7257                           
  7258                           ;TM1637Display.c: 117:         v /= 10;
  7259  0F86  300A               	movlw	10
  7260  0F87  00B0               	movwf	___awdiv@divisor
  7261  0F88  3000               	movlw	0
  7262  0F89  00B1               	movwf	___awdiv@divisor+1
  7263  0F8A  083C               	movf	tm1637DisplayDecimal@v+1,w
  7264  0F8B  00B3               	movwf	___awdiv@dividend+1
  7265  0F8C  083B               	movf	tm1637DisplayDecimal@v,w
  7266  0F8D  00B2               	movwf	___awdiv@dividend
  7267  0F8E  318D  25D1  318F   	fcall	___awdiv
  7268  0F91  0020               	movlb	0	; select bank0
  7269  0F92  0831               	movf	?___awdiv+1,w
  7270  0F93  00BC               	movwf	tm1637DisplayDecimal@v+1
  7271  0F94  0830               	movf	?___awdiv,w
  7272  0F95  00BB               	movwf	tm1637DisplayDecimal@v
  7273  0F96                     l2674:
  7274                           
  7275                           ;TM1637Display.c: 118:     }
  7276  0F96  3001               	movlw	1
  7277  0F97  07C6               	addwf	tm1637DisplayDecimal@i,f
  7278  0F98  3000               	movlw	0
  7279  0F99  3DC7               	addwfc	tm1637DisplayDecimal@i+1,f
  7280  0F9A                     l2676:
  7281  0F9A  0847               	movf	tm1637DisplayDecimal@i+1,w
  7282  0F9B  3A80               	xorlw	128
  7283  0F9C  00BF               	movwf	??_tm1637DisplayDecimal
  7284  0F9D  3080               	movlw	128
  7285  0F9E  023F               	subwf	??_tm1637DisplayDecimal,w
  7286  0F9F  1D03               	skipz
  7287  0FA0  2FA3               	goto	u2195
  7288  0FA1  3004               	movlw	4
  7289  0FA2  0246               	subwf	tm1637DisplayDecimal@i,w
  7290  0FA3                     u2195:
  7291  0FA3  1C03               	skipc
  7292  0FA4  2FA6               	goto	u2191
  7293  0FA5  2FA7               	goto	u2190
  7294  0FA6                     u2191:
  7295  0FA6  2F57               	goto	l2664
  7296  0FA7                     u2190:
  7297  0FA7                     l2678:
  7298                           
  7299                           ;TM1637Display.c: 120:     _tm1637Start(display);
  7300  0FA7  0020               	movlb	0	; select bank0
  7301  0FA8  0848               	movf	tm1637DisplayDecimal@display,w
  7302  0FA9  318A  22B5  318F   	fcall	__tm1637Start
  7303                           
  7304                           ;TM1637Display.c: 121:     _tm1637WriteByte(display, 0x40);
  7305  0FAC  3040               	movlw	64
  7306  0FAD  0020               	movlb	0	; select bank0
  7307  0FAE  00BF               	movwf	??_tm1637DisplayDecimal
  7308  0FAF  083F               	movf	??_tm1637DisplayDecimal,w
  7309  0FB0  00B6               	movwf	__tm1637WriteByte@b
  7310  0FB1  0848               	movf	tm1637DisplayDecimal@display,w
  7311  0FB2  318D  2572  318F   	fcall	__tm1637WriteByte
  7312                           
  7313                           ;TM1637Display.c: 122:     _tm1637ReadResult(display);
  7314  0FB5  0020               	movlb	0	; select bank0
  7315  0FB6  0848               	movf	tm1637DisplayDecimal@display,w
  7316  0FB7  318B  231D  318F   	fcall	__tm1637ReadResult
  7317                           
  7318                           ;TM1637Display.c: 123:     _tm1637Stop(display);
  7319  0FBA  0020               	movlb	0	; select bank0
  7320  0FBB  0848               	movf	tm1637DisplayDecimal@display,w
  7321  0FBC  318C  2422  318F   	fcall	__tm1637Stop
  7322                           
  7323                           ;TM1637Display.c: 125:     _tm1637Start(display);
  7324  0FBF  0020               	movlb	0	; select bank0
  7325  0FC0  0848               	movf	tm1637DisplayDecimal@display,w
  7326  0FC1  318A  22B5  318F   	fcall	__tm1637Start
  7327                           
  7328                           ;TM1637Display.c: 126:     _tm1637WriteByte(display, 0xc0);
  7329  0FC4  30C0               	movlw	192
  7330  0FC5  0020               	movlb	0	; select bank0
  7331  0FC6  00BF               	movwf	??_tm1637DisplayDecimal
  7332  0FC7  083F               	movf	??_tm1637DisplayDecimal,w
  7333  0FC8  00B6               	movwf	__tm1637WriteByte@b
  7334  0FC9  0848               	movf	tm1637DisplayDecimal@display,w
  7335  0FCA  318D  2572  318F   	fcall	__tm1637WriteByte
  7336                           
  7337                           ;TM1637Display.c: 127:     _tm1637ReadResult(display);
  7338  0FCD  0020               	movlb	0	; select bank0
  7339  0FCE  0848               	movf	tm1637DisplayDecimal@display,w
  7340  0FCF  318B  231D  318F   	fcall	__tm1637ReadResult
  7341  0FD2                     l2680:
  7342                           
  7343                           ;TM1637Display.c: 129:     for (int i = 0; i < 4; ++i) {
  7344  0FD2  0020               	movlb	0	; select bank0
  7345  0FD3  01C4               	clrf	tm1637DisplayDecimal@i_1049
  7346  0FD4  01C5               	clrf	tm1637DisplayDecimal@i_1049+1
  7347  0FD5                     l2686:
  7348                           
  7349                           ;TM1637Display.c: 130:         _tm1637WriteByte(display, digitArr[3 - i]);
  7350  0FD5  0020               	movlb	0	; select bank0
  7351  0FD6  0844               	movf	tm1637DisplayDecimal@i_1049,w
  7352  0FD7  3C03               	sublw	3
  7353  0FD8  3E40               	addlw	(low (tm1637DisplayDecimal@digitArr| 0))& (0+255)
  7354  0FD9  0086               	movwf	6
  7355  0FDA  0187               	clrf	7
  7356  0FDB  0801               	movf	1,w
  7357  0FDC  00BF               	movwf	??_tm1637DisplayDecimal
  7358  0FDD  083F               	movf	??_tm1637DisplayDecimal,w
  7359  0FDE  00B6               	movwf	__tm1637WriteByte@b
  7360  0FDF  0848               	movf	tm1637DisplayDecimal@display,w
  7361  0FE0  318D  2572  318F   	fcall	__tm1637WriteByte
  7362                           
  7363                           ;TM1637Display.c: 131:         _tm1637ReadResult(display);
  7364  0FE3  0020               	movlb	0	; select bank0
  7365  0FE4  0848               	movf	tm1637DisplayDecimal@display,w
  7366  0FE5  318B  231D  318F   	fcall	__tm1637ReadResult
  7367  0FE8                     l2688:
  7368                           
  7369                           ;TM1637Display.c: 132:     }
  7370  0FE8  3001               	movlw	1
  7371  0FE9  0020               	movlb	0	; select bank0
  7372  0FEA  07C4               	addwf	tm1637DisplayDecimal@i_1049,f
  7373  0FEB  3000               	movlw	0
  7374  0FEC  3DC5               	addwfc	tm1637DisplayDecimal@i_1049+1,f
  7375  0FED                     l2690:
  7376  0FED  0845               	movf	tm1637DisplayDecimal@i_1049+1,w
  7377  0FEE  3A80               	xorlw	128
  7378  0FEF  00BF               	movwf	??_tm1637DisplayDecimal
  7379  0FF0  3080               	movlw	128
  7380  0FF1  023F               	subwf	??_tm1637DisplayDecimal,w
  7381  0FF2  1D03               	skipz
  7382  0FF3  2FF6               	goto	u2205
  7383  0FF4  3004               	movlw	4
  7384  0FF5  0244               	subwf	tm1637DisplayDecimal@i_1049,w
  7385  0FF6                     u2205:
  7386  0FF6  1C03               	skipc
  7387  0FF7  2FF9               	goto	u2201
  7388  0FF8  2FFA               	goto	u2200
  7389  0FF9                     u2201:
  7390  0FF9  2FD5               	goto	l2686
  7391  0FFA                     u2200:
  7392  0FFA                     l2692:
  7393                           
  7394                           ;TM1637Display.c: 134:     _tm1637Stop(display);
  7395  0FFA  0020               	movlb	0	; select bank0
  7396  0FFB  0848               	movf	tm1637DisplayDecimal@display,w
  7397  0FFC  318C  2422  318F   	fcall	__tm1637Stop
  7398  0FFF                     l460:
  7399  0FFF  0008               	return
  7400  1000                     __end_of_tm1637DisplayDecimal:
  7401                           
  7402                           	psect	text4
  7403  0D72                     __ptext4:	
  7404 ;; *************** function __tm1637WriteByte *****************
  7405 ;; Defined at:
  7406 ;;		line 177 in file "TM1637Display.c"
  7407 ;; Parameters:    Size  Location     Type
  7408 ;;  display         1    wreg     PTR volatile struct .
  7409 ;;		 -> tm1637Init@display(7), NULL(0), 
  7410 ;;  b               1   22[BANK0 ] unsigned char 
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;  display         1   26[BANK0 ] PTR volatile struct .
  7413 ;;		 -> tm1637Init@display(7), NULL(0), 
  7414 ;;  i               2   24[BANK0 ] int 
  7415 ;; Return value:  Size  Location     Type
  7416 ;;                  1    wreg      void 
  7417 ;; Registers used:
  7418 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7419 ;; Tracked objects:
  7420 ;;		On entry : 0/0
  7421 ;;		On exit  : 0/0
  7422 ;;		Unchanged: 0/0
  7423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7424 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7425 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7426 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7427 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7428 ;;Total ram usage:        5 bytes
  7429 ;; Hardware stack levels used: 1
  7430 ;; Hardware stack levels required when called: 8
  7431 ;; This function calls:
  7432 ;;		_write_reg
  7433 ;; This function is called by:
  7434 ;;		_tm1637DisplayDecimal
  7435 ;;		_tm1637SetBrightness
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439  0D72                     __tm1637WriteByte:	
  7440                           ;psect for function __tm1637WriteByte
  7441                           
  7442                           
  7443                           ;incstack = 0
  7444                           ; Regs used in __tm1637WriteByte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7445                           ;__tm1637WriteByte@display stored from wreg
  7446  0D72  0020               	movlb	0	; select bank0
  7447  0D73  00BA               	movwf	__tm1637WriteByte@display
  7448  0D74                     l2294:
  7449                           
  7450                           ;TM1637Display.c: 178:     for (int i = 0; i < 8; ++i) {
  7451  0D74  01B8               	clrf	__tm1637WriteByte@i
  7452  0D75  01B9               	clrf	__tm1637WriteByte@i+1
  7453  0D76                     l2300:
  7454                           
  7455                           ;TM1637Display.c: 179:         write_reg(display->CLK, 0);
  7456  0D76  0020               	movlb	0	; select bank0
  7457  0D77  083A               	movf	__tm1637WriteByte@display,w
  7458  0D78  3E04               	addlw	4
  7459  0D79  0086               	movwf	6
  7460  0D7A  0187               	clrf	7
  7461  0D7B  3F40               	moviw [0]fsr1
  7462  0D7C  00B0               	movwf	write_reg@pin
  7463  0D7D  3F41               	moviw [1]fsr1
  7464  0D7E  00B1               	movwf	write_reg@pin+1
  7465  0D7F  3F42               	moviw [2]fsr1
  7466  0D80  00B2               	movwf	write_reg@pin+2
  7467  0D81  01B3               	clrf	write_reg@data
  7468  0D82  3188  20D9  318D   	fcall	_write_reg
  7469  0D85                     l2302:
  7470                           
  7471                           ;TM1637Display.c: 180:         if (b & 0x01) {
  7472  0D85  0020               	movlb	0	; select bank0
  7473  0D86  1C36               	btfss	__tm1637WriteByte@b,0
  7474  0D87  2D89               	goto	u1721
  7475  0D88  2D8A               	goto	u1720
  7476  0D89                     u1721:
  7477  0D89  2D99               	goto	l2306
  7478  0D8A                     u1720:
  7479  0D8A                     l2304:
  7480                           
  7481                           ;TM1637Display.c: 181:             write_reg(display->DIO, 1);
  7482  0D8A  0A3A               	incf	__tm1637WriteByte@display,w
  7483  0D8B  0086               	movwf	6
  7484  0D8C  0187               	clrf	7
  7485  0D8D  3F40               	moviw [0]fsr1
  7486  0D8E  00B0               	movwf	write_reg@pin
  7487  0D8F  3F41               	moviw [1]fsr1
  7488  0D90  00B1               	movwf	write_reg@pin+1
  7489  0D91  3F42               	moviw [2]fsr1
  7490  0D92  00B2               	movwf	write_reg@pin+2
  7491  0D93  01B3               	clrf	write_reg@data
  7492  0D94  0AB3               	incf	write_reg@data,f
  7493  0D95  3188  20D9  318D   	fcall	_write_reg
  7494                           
  7495                           ;TM1637Display.c: 182:         }
  7496  0D98  2DA6               	goto	l2308
  7497  0D99                     l2306:
  7498                           
  7499                           ;TM1637Display.c: 184:             write_reg(display->DIO, 0);
  7500  0D99  0A3A               	incf	__tm1637WriteByte@display,w
  7501  0D9A  0086               	movwf	6
  7502  0D9B  0187               	clrf	7
  7503  0D9C  3F40               	moviw [0]fsr1
  7504  0D9D  00B0               	movwf	write_reg@pin
  7505  0D9E  3F41               	moviw [1]fsr1
  7506  0D9F  00B1               	movwf	write_reg@pin+1
  7507  0DA0  3F42               	moviw [2]fsr1
  7508  0DA1  00B2               	movwf	write_reg@pin+2
  7509  0DA2  01B3               	clrf	write_reg@data
  7510  0DA3  3188  20D9  318D   	fcall	_write_reg
  7511  0DA6                     l2308:
  7512                           
  7513                           ;TM1637Display.c: 186:         _delay((unsigned long)((3)*(32000000/4000000.0)));
  7514  0DA6  3008               	movlw	8
  7515  0DA7                     u4007:
  7516  0DA7  0B89               	decfsz	9,f
  7517  0DA8  2DA7               	goto	u4007
  7518  0DA9                     l2310:
  7519                           
  7520                           ;TM1637Display.c: 187:         b >>= 1;
  7521  0DA9  1003               	clrc
  7522  0DAA  0020               	movlb	0	; select bank0
  7523  0DAB  0CB6               	rrf	__tm1637WriteByte@b,f
  7524                           
  7525                           ;TM1637Display.c: 188:         write_reg(display->CLK, 1);
  7526  0DAC  083A               	movf	__tm1637WriteByte@display,w
  7527  0DAD  3E04               	addlw	4
  7528  0DAE  0086               	movwf	6
  7529  0DAF  0187               	clrf	7
  7530  0DB0  3F40               	moviw [0]fsr1
  7531  0DB1  00B0               	movwf	write_reg@pin
  7532  0DB2  3F41               	moviw [1]fsr1
  7533  0DB3  00B1               	movwf	write_reg@pin+1
  7534  0DB4  3F42               	moviw [2]fsr1
  7535  0DB5  00B2               	movwf	write_reg@pin+2
  7536  0DB6  01B3               	clrf	write_reg@data
  7537  0DB7  0AB3               	incf	write_reg@data,f
  7538  0DB8  3188  20D9  318D   	fcall	_write_reg
  7539  0DBB                     l2312:
  7540                           
  7541                           ;TM1637Display.c: 189:         _delay((unsigned long)((3)*(32000000/4000000.0)));
  7542  0DBB  3008               	movlw	8
  7543  0DBC                     u4017:
  7544  0DBC  0B89               	decfsz	9,f
  7545  0DBD  2DBC               	goto	u4017
  7546  0DBE                     l2314:
  7547                           
  7548                           ;TM1637Display.c: 190:     }
  7549  0DBE  3001               	movlw	1
  7550  0DBF  0020               	movlb	0	; select bank0
  7551  0DC0  07B8               	addwf	__tm1637WriteByte@i,f
  7552  0DC1  3000               	movlw	0
  7553  0DC2  3DB9               	addwfc	__tm1637WriteByte@i+1,f
  7554  0DC3                     l2316:
  7555  0DC3  0839               	movf	__tm1637WriteByte@i+1,w
  7556  0DC4  3A80               	xorlw	128
  7557  0DC5  00B7               	movwf	??__tm1637WriteByte
  7558  0DC6  3080               	movlw	128
  7559  0DC7  0237               	subwf	??__tm1637WriteByte,w
  7560  0DC8  1D03               	skipz
  7561  0DC9  2DCC               	goto	u1735
  7562  0DCA  3008               	movlw	8
  7563  0DCB  0238               	subwf	__tm1637WriteByte@i,w
  7564  0DCC                     u1735:
  7565  0DCC  1C03               	skipc
  7566  0DCD  2DCF               	goto	u1731
  7567  0DCE  2DD0               	goto	u1730
  7568  0DCF                     u1731:
  7569  0DCF  2D76               	goto	l2300
  7570  0DD0                     u1730:
  7571  0DD0                     l479:
  7572  0DD0  0008               	return
  7573  0DD1                     __end_of__tm1637WriteByte:
  7574                           
  7575                           	psect	text5
  7576  0C22                     __ptext5:	
  7577 ;; *************** function __tm1637Stop *****************
  7578 ;; Defined at:
  7579 ;;		line 158 in file "TM1637Display.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;  display         1    wreg     PTR volatile struct .
  7582 ;;		 -> tm1637Init@display(7), NULL(0), 
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;  display         1   22[BANK0 ] PTR volatile struct .
  7585 ;;		 -> tm1637Init@display(7), NULL(0), 
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  1    wreg      void 
  7588 ;; Registers used:
  7589 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7596 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7598 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7599 ;;Total ram usage:        1 bytes
  7600 ;; Hardware stack levels used: 1
  7601 ;; Hardware stack levels required when called: 8
  7602 ;; This function calls:
  7603 ;;		_write_reg
  7604 ;; This function is called by:
  7605 ;;		_tm1637DisplayDecimal
  7606 ;;		_tm1637SetBrightness
  7607 ;; This function uses a non-reentrant model
  7608 ;;
  7609                           
  7610  0C22                     __tm1637Stop:	
  7611                           ;psect for function __tm1637Stop
  7612                           
  7613                           
  7614                           ;incstack = 0
  7615                           ; Regs used in __tm1637Stop: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7616                           ;__tm1637Stop@display stored from wreg
  7617  0C22  0020               	movlb	0	; select bank0
  7618  0C23  00B6               	movwf	__tm1637Stop@display
  7619  0C24                     l2326:
  7620                           
  7621                           ;TM1637Display.c: 159:     write_reg(display->CLK, 0);
  7622  0C24  0836               	movf	__tm1637Stop@display,w
  7623  0C25  3E04               	addlw	4
  7624  0C26  0086               	movwf	6
  7625  0C27  0187               	clrf	7
  7626  0C28  3F40               	moviw [0]fsr1
  7627  0C29  00B0               	movwf	write_reg@pin
  7628  0C2A  3F41               	moviw [1]fsr1
  7629  0C2B  00B1               	movwf	write_reg@pin+1
  7630  0C2C  3F42               	moviw [2]fsr1
  7631  0C2D  00B2               	movwf	write_reg@pin+2
  7632  0C2E  01B3               	clrf	write_reg@data
  7633  0C2F  3188  20D9  318C   	fcall	_write_reg
  7634  0C32                     l2328:
  7635                           
  7636                           ;TM1637Display.c: 160:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  7637  0C32  3005               	movlw	5
  7638  0C33                     u4027:
  7639  0C33  0B89               	decfsz	9,f
  7640  0C34  2C33               	goto	u4027
  7641  0C35  0000               	nop
  7642  0C36                     l2330:
  7643                           
  7644                           ;TM1637Display.c: 161:     write_reg(display->DIO, 0);
  7645  0C36  0020               	movlb	0	; select bank0
  7646  0C37  0A36               	incf	__tm1637Stop@display,w
  7647  0C38  0086               	movwf	6
  7648  0C39  0187               	clrf	7
  7649  0C3A  3F40               	moviw [0]fsr1
  7650  0C3B  00B0               	movwf	write_reg@pin
  7651  0C3C  3F41               	moviw [1]fsr1
  7652  0C3D  00B1               	movwf	write_reg@pin+1
  7653  0C3E  3F42               	moviw [2]fsr1
  7654  0C3F  00B2               	movwf	write_reg@pin+2
  7655  0C40  01B3               	clrf	write_reg@data
  7656  0C41  3188  20D9  318C   	fcall	_write_reg
  7657                           
  7658                           ;TM1637Display.c: 162:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  7659  0C44  3005               	movlw	5
  7660  0C45                     u4037:
  7661  0C45  0B89               	decfsz	9,f
  7662  0C46  2C45               	goto	u4037
  7663  0C47  0000               	nop
  7664  0C48                     l2332:
  7665                           
  7666                           ;TM1637Display.c: 163:     write_reg(display->CLK, 1);
  7667  0C48  0020               	movlb	0	; select bank0
  7668  0C49  0836               	movf	__tm1637Stop@display,w
  7669  0C4A  3E04               	addlw	4
  7670  0C4B  0086               	movwf	6
  7671  0C4C  0187               	clrf	7
  7672  0C4D  3F40               	moviw [0]fsr1
  7673  0C4E  00B0               	movwf	write_reg@pin
  7674  0C4F  3F41               	moviw [1]fsr1
  7675  0C50  00B1               	movwf	write_reg@pin+1
  7676  0C51  3F42               	moviw [2]fsr1
  7677  0C52  00B2               	movwf	write_reg@pin+2
  7678  0C53  01B3               	clrf	write_reg@data
  7679  0C54  0AB3               	incf	write_reg@data,f
  7680  0C55  3188  20D9  318C   	fcall	_write_reg
  7681  0C58                     l2334:
  7682                           
  7683                           ;TM1637Display.c: 164:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  7684  0C58  3005               	movlw	5
  7685  0C59                     u4047:
  7686  0C59  0B89               	decfsz	9,f
  7687  0C5A  2C59               	goto	u4047
  7688  0C5B  0000               	nop
  7689                           
  7690                           ;TM1637Display.c: 165:     write_reg(display->DIO, 1);
  7691  0C5C  0020               	movlb	0	; select bank0
  7692  0C5D  0A36               	incf	__tm1637Stop@display,w
  7693  0C5E  0086               	movwf	6
  7694  0C5F  0187               	clrf	7
  7695  0C60  3F40               	moviw [0]fsr1
  7696  0C61  00B0               	movwf	write_reg@pin
  7697  0C62  3F41               	moviw [1]fsr1
  7698  0C63  00B1               	movwf	write_reg@pin+1
  7699  0C64  3F42               	moviw [2]fsr1
  7700  0C65  00B2               	movwf	write_reg@pin+2
  7701  0C66  01B3               	clrf	write_reg@data
  7702  0C67  0AB3               	incf	write_reg@data,f
  7703  0C68  3188  20D9  318C   	fcall	_write_reg
  7704  0C6B                     l469:
  7705  0C6B  0008               	return
  7706  0C6C                     __end_of__tm1637Stop:
  7707                           
  7708                           	psect	text6
  7709  0AB5                     __ptext6:	
  7710 ;; *************** function __tm1637Start *****************
  7711 ;; Defined at:
  7712 ;;		line 151 in file "TM1637Display.c"
  7713 ;; Parameters:    Size  Location     Type
  7714 ;;  display         1    wreg     PTR volatile struct .
  7715 ;;		 -> tm1637Init@display(7), NULL(0), 
  7716 ;; Auto vars:     Size  Location     Type
  7717 ;;  display         1   22[BANK0 ] PTR volatile struct .
  7718 ;;		 -> tm1637Init@display(7), NULL(0), 
  7719 ;; Return value:  Size  Location     Type
  7720 ;;                  1    wreg      void 
  7721 ;; Registers used:
  7722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7723 ;; Tracked objects:
  7724 ;;		On entry : 0/0
  7725 ;;		On exit  : 0/0
  7726 ;;		Unchanged: 0/0
  7727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7729 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7731 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7732 ;;Total ram usage:        1 bytes
  7733 ;; Hardware stack levels used: 1
  7734 ;; Hardware stack levels required when called: 8
  7735 ;; This function calls:
  7736 ;;		_write_reg
  7737 ;; This function is called by:
  7738 ;;		_tm1637DisplayDecimal
  7739 ;;		_tm1637SetBrightness
  7740 ;; This function uses a non-reentrant model
  7741 ;;
  7742                           
  7743  0AB5                     __tm1637Start:	
  7744                           ;psect for function __tm1637Start
  7745                           
  7746                           
  7747                           ;incstack = 0
  7748                           ; Regs used in __tm1637Start: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7749                           ;__tm1637Start@display stored from wreg
  7750  0AB5  0020               	movlb	0	; select bank0
  7751  0AB6  00B6               	movwf	__tm1637Start@display
  7752  0AB7                     l2288:
  7753                           
  7754                           ;TM1637Display.c: 152:     write_reg(display->CLK, 1);
  7755  0AB7  0836               	movf	__tm1637Start@display,w
  7756  0AB8  3E04               	addlw	4
  7757  0AB9  0086               	movwf	6
  7758  0ABA  0187               	clrf	7
  7759  0ABB  3F40               	moviw [0]fsr1
  7760  0ABC  00B0               	movwf	write_reg@pin
  7761  0ABD  3F41               	moviw [1]fsr1
  7762  0ABE  00B1               	movwf	write_reg@pin+1
  7763  0ABF  3F42               	moviw [2]fsr1
  7764  0AC0  00B2               	movwf	write_reg@pin+2
  7765  0AC1  01B3               	clrf	write_reg@data
  7766  0AC2  0AB3               	incf	write_reg@data,f
  7767  0AC3  3188  20D9  318A   	fcall	_write_reg
  7768                           
  7769                           ;TM1637Display.c: 153:     write_reg(display->DIO, 1);
  7770  0AC6  0020               	movlb	0	; select bank0
  7771  0AC7  0A36               	incf	__tm1637Start@display,w
  7772  0AC8  0086               	movwf	6
  7773  0AC9  0187               	clrf	7
  7774  0ACA  3F40               	moviw [0]fsr1
  7775  0ACB  00B0               	movwf	write_reg@pin
  7776  0ACC  3F41               	moviw [1]fsr1
  7777  0ACD  00B1               	movwf	write_reg@pin+1
  7778  0ACE  3F42               	moviw [2]fsr1
  7779  0ACF  00B2               	movwf	write_reg@pin+2
  7780  0AD0  01B3               	clrf	write_reg@data
  7781  0AD1  0AB3               	incf	write_reg@data,f
  7782  0AD2  3188  20D9  318A   	fcall	_write_reg
  7783  0AD5                     l2290:
  7784                           
  7785                           ;TM1637Display.c: 154:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  7786  0AD5  3005               	movlw	5
  7787  0AD6                     u4057:
  7788  0AD6  0B89               	decfsz	9,f
  7789  0AD7  2AD6               	goto	u4057
  7790  0AD8  0000               	nop
  7791  0AD9                     l2292:
  7792                           
  7793                           ;TM1637Display.c: 155:     write_reg(display->DIO, 0);
  7794  0AD9  0020               	movlb	0	; select bank0
  7795  0ADA  0A36               	incf	__tm1637Start@display,w
  7796  0ADB  0086               	movwf	6
  7797  0ADC  0187               	clrf	7
  7798  0ADD  3F40               	moviw [0]fsr1
  7799  0ADE  00B0               	movwf	write_reg@pin
  7800  0ADF  3F41               	moviw [1]fsr1
  7801  0AE0  00B1               	movwf	write_reg@pin+1
  7802  0AE1  3F42               	moviw [2]fsr1
  7803  0AE2  00B2               	movwf	write_reg@pin+2
  7804  0AE3  01B3               	clrf	write_reg@data
  7805  0AE4  3188  20D9  318A   	fcall	_write_reg
  7806  0AE7                     l466:
  7807  0AE7  0008               	return
  7808  0AE8                     __end_of__tm1637Start:
  7809                           
  7810                           	psect	text7
  7811  0B1D                     __ptext7:	
  7812 ;; *************** function __tm1637ReadResult *****************
  7813 ;; Defined at:
  7814 ;;		line 168 in file "TM1637Display.c"
  7815 ;; Parameters:    Size  Location     Type
  7816 ;;  display         1    wreg     PTR volatile struct .
  7817 ;;		 -> tm1637Init@display(7), NULL(0), 
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;  display         1   22[BANK0 ] PTR volatile struct .
  7820 ;;		 -> tm1637Init@display(7), NULL(0), 
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1    wreg      void 
  7823 ;; Registers used:
  7824 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7831 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7833 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7834 ;;Total ram usage:        1 bytes
  7835 ;; Hardware stack levels used: 1
  7836 ;; Hardware stack levels required when called: 8
  7837 ;; This function calls:
  7838 ;;		_write_reg
  7839 ;; This function is called by:
  7840 ;;		_tm1637DisplayDecimal
  7841 ;;		_tm1637SetBrightness
  7842 ;; This function uses a non-reentrant model
  7843 ;;
  7844                           
  7845  0B1D                     __tm1637ReadResult:	
  7846                           ;psect for function __tm1637ReadResult
  7847                           
  7848                           
  7849                           ;incstack = 0
  7850                           ; Regs used in __tm1637ReadResult: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7851                           ;__tm1637ReadResult@display stored from wreg
  7852  0B1D  0020               	movlb	0	; select bank0
  7853  0B1E  00B6               	movwf	__tm1637ReadResult@display
  7854  0B1F                     l2318:
  7855                           
  7856                           ;TM1637Display.c: 169:     write_reg(display->CLK, 0);
  7857  0B1F  0836               	movf	__tm1637ReadResult@display,w
  7858  0B20  3E04               	addlw	4
  7859  0B21  0086               	movwf	6
  7860  0B22  0187               	clrf	7
  7861  0B23  3F40               	moviw [0]fsr1
  7862  0B24  00B0               	movwf	write_reg@pin
  7863  0B25  3F41               	moviw [1]fsr1
  7864  0B26  00B1               	movwf	write_reg@pin+1
  7865  0B27  3F42               	moviw [2]fsr1
  7866  0B28  00B2               	movwf	write_reg@pin+2
  7867  0B29  01B3               	clrf	write_reg@data
  7868  0B2A  3188  20D9  318B   	fcall	_write_reg
  7869  0B2D                     l2320:
  7870                           
  7871                           ;TM1637Display.c: 170:     _delay((unsigned long)((5)*(32000000/4000000.0)));
  7872  0B2D  300D               	movlw	13
  7873  0B2E                     u4067:
  7874  0B2E  0B89               	decfsz	9,f
  7875  0B2F  2B2E               	goto	u4067
  7876  0B30  0000               	nop
  7877  0B31                     l2322:
  7878                           
  7879                           ;TM1637Display.c: 172:     write_reg(display->CLK, 1);
  7880  0B31  0020               	movlb	0	; select bank0
  7881  0B32  0836               	movf	__tm1637ReadResult@display,w
  7882  0B33  3E04               	addlw	4
  7883  0B34  0086               	movwf	6
  7884  0B35  0187               	clrf	7
  7885  0B36  3F40               	moviw [0]fsr1
  7886  0B37  00B0               	movwf	write_reg@pin
  7887  0B38  3F41               	moviw [1]fsr1
  7888  0B39  00B1               	movwf	write_reg@pin+1
  7889  0B3A  3F42               	moviw [2]fsr1
  7890  0B3B  00B2               	movwf	write_reg@pin+2
  7891  0B3C  01B3               	clrf	write_reg@data
  7892  0B3D  0AB3               	incf	write_reg@data,f
  7893  0B3E  3188  20D9  318B   	fcall	_write_reg
  7894                           
  7895                           ;TM1637Display.c: 173:     _delay((unsigned long)((2)*(32000000/4000000.0)));
  7896  0B41  3005               	movlw	5
  7897  0B42                     u4077:
  7898  0B42  0B89               	decfsz	9,f
  7899  0B43  2B42               	goto	u4077
  7900  0B44  0000               	nop
  7901  0B45                     l2324:
  7902                           
  7903                           ;TM1637Display.c: 174:     write_reg(display->CLK, 0);
  7904  0B45  0020               	movlb	0	; select bank0
  7905  0B46  0836               	movf	__tm1637ReadResult@display,w
  7906  0B47  3E04               	addlw	4
  7907  0B48  0086               	movwf	6
  7908  0B49  0187               	clrf	7
  7909  0B4A  3F40               	moviw [0]fsr1
  7910  0B4B  00B0               	movwf	write_reg@pin
  7911  0B4C  3F41               	moviw [1]fsr1
  7912  0B4D  00B1               	movwf	write_reg@pin+1
  7913  0B4E  3F42               	moviw [2]fsr1
  7914  0B4F  00B2               	movwf	write_reg@pin+2
  7915  0B50  01B3               	clrf	write_reg@data
  7916  0B51  3188  20D9  318B   	fcall	_write_reg
  7917  0B54                     l472:
  7918  0B54  0008               	return
  7919  0B55                     __end_of__tm1637ReadResult:
  7920                           
  7921                           	psect	text8
  7922  08D9                     __ptext8:	
  7923 ;; *************** function _write_reg *****************
  7924 ;; Defined at:
  7925 ;;		line 11 in file "custom_pin.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;  pin             3   16[BANK0 ] volatile struct .
  7928 ;;  data            1   19[BANK0 ] unsigned char 
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;		None
  7931 ;; Return value:  Size  Location     Type
  7932 ;;                  1    wreg      void 
  7933 ;; Registers used:
  7934 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7935 ;; Tracked objects:
  7936 ;;		On entry : 0/0
  7937 ;;		On exit  : 0/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7940 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7942 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7943 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7944 ;;Total ram usage:        6 bytes
  7945 ;; Hardware stack levels used: 1
  7946 ;; Hardware stack levels required when called: 7
  7947 ;; This function calls:
  7948 ;;		Nothing
  7949 ;; This function is called by:
  7950 ;;		__tm1637Start
  7951 ;;		__tm1637Stop
  7952 ;;		__tm1637ReadResult
  7953 ;;		__tm1637WriteByte
  7954 ;; This function uses a non-reentrant model
  7955 ;;
  7956                           
  7957  08D9                     _write_reg:	
  7958                           ;psect for function _write_reg
  7959                           
  7960  08D9                     l2248:	
  7961                           ;incstack = 0
  7962                           ; Regs used in _write_reg: [wreg+fsr1l+fsr1h+status,2+status,0]
  7963                           
  7964                           
  7965                           ;custom_pin.c: 12:     *(pin.port) &= ~pin.mask;
  7966  08D9  0020               	movlb	0	; select bank0
  7967  08DA  0930               	comf	write_reg@pin,w	;volatile
  7968  08DB  00B4               	movwf	??_write_reg
  7969  08DC  0832               	movf	low ((write_reg@pin| 0+2)),w	;volatile
  7970  08DD  0086               	movwf	6
  7971  08DE  0187               	clrf	7
  7972  08DF  0834               	movf	??_write_reg,w
  7973  08E0  0581               	andwf	1,f
  7974                           
  7975                           ;custom_pin.c: 13:     *(pin.port) |= (data << pin.pos & pin.mask);
  7976  08E1  0833               	movf	write_reg@data,w
  7977  08E2  00B4               	movwf	??_write_reg
  7978  08E3  0A31               	incf	write_reg@pin+1,w	;volatile
  7979  08E4  28E6               	goto	u1644
  7980  08E5                     u1645:
  7981  08E5  35B4               	lslf	??_write_reg,f
  7982  08E6                     u1644:
  7983  08E6  0B89               	decfsz	9,f
  7984  08E7  28E5               	goto	u1645
  7985  08E8  0834               	movf	??_write_reg,w
  7986  08E9  0530               	andwf	write_reg@pin,w	;volatile
  7987  08EA  00B5               	movwf	??_write_reg+1
  7988  08EB  0832               	movf	low ((write_reg@pin| 0+2)),w	;volatile
  7989  08EC  0086               	movwf	6
  7990  08ED  0187               	clrf	7
  7991  08EE  0835               	movf	??_write_reg+1,w
  7992  08EF  0481               	iorwf	1,f
  7993  08F0                     l482:
  7994  08F0  0008               	return
  7995  08F1                     __end_of_write_reg:
  7996                           
  7997                           	psect	text9
  7998  07A9                     __ptext9:	
  7999 ;; *************** function ___awmod *****************
  8000 ;; Defined at:
  8001 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  8002 ;; Parameters:    Size  Location     Type
  8003 ;;  divisor         2   16[BANK0 ] int 
  8004 ;;  dividend        2   18[BANK0 ] int 
  8005 ;; Auto vars:     Size  Location     Type
  8006 ;;  sign            1   22[BANK0 ] unsigned char 
  8007 ;;  counter         1   21[BANK0 ] unsigned char 
  8008 ;; Return value:  Size  Location     Type
  8009 ;;                  2   16[BANK0 ] int 
  8010 ;; Registers used:
  8011 ;;		wreg, status,2, status,0
  8012 ;; Tracked objects:
  8013 ;;		On entry : 0/0
  8014 ;;		On exit  : 0/0
  8015 ;;		Unchanged: 0/0
  8016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8017 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8018 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8019 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8020 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8021 ;;Total ram usage:        7 bytes
  8022 ;; Hardware stack levels used: 1
  8023 ;; Hardware stack levels required when called: 7
  8024 ;; This function calls:
  8025 ;;		Nothing
  8026 ;; This function is called by:
  8027 ;;		_tm1637DisplayDecimal
  8028 ;; This function uses a non-reentrant model
  8029 ;;
  8030                           
  8031  07A9                     ___awmod:	
  8032                           ;psect for function ___awmod
  8033                           
  8034  07A9                     l2538:	
  8035                           ;incstack = 0
  8036                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8037                           
  8038  07A9  0020               	movlb	0	; select bank0
  8039  07AA  01B6               	clrf	___awmod@sign
  8040  07AB                     l2540:
  8041  07AB  1FB3               	btfss	___awmod@dividend+1,7
  8042  07AC  2FAE               	goto	u1991
  8043  07AD  2FAF               	goto	u1990
  8044  07AE                     u1991:
  8045  07AE  2FB6               	goto	l2546
  8046  07AF                     u1990:
  8047  07AF                     l2542:
  8048  07AF  09B2               	comf	___awmod@dividend,f
  8049  07B0  09B3               	comf	___awmod@dividend+1,f
  8050  07B1  0AB2               	incf	___awmod@dividend,f
  8051  07B2  1903               	skipnz
  8052  07B3  0AB3               	incf	___awmod@dividend+1,f
  8053  07B4                     l2544:
  8054  07B4  01B6               	clrf	___awmod@sign
  8055  07B5  0AB6               	incf	___awmod@sign,f
  8056  07B6                     l2546:
  8057  07B6  1FB1               	btfss	___awmod@divisor+1,7
  8058  07B7  2FB9               	goto	u2001
  8059  07B8  2FBA               	goto	u2000
  8060  07B9                     u2001:
  8061  07B9  2FBF               	goto	l2550
  8062  07BA                     u2000:
  8063  07BA                     l2548:
  8064  07BA  09B0               	comf	___awmod@divisor,f
  8065  07BB  09B1               	comf	___awmod@divisor+1,f
  8066  07BC  0AB0               	incf	___awmod@divisor,f
  8067  07BD  1903               	skipnz
  8068  07BE  0AB1               	incf	___awmod@divisor+1,f
  8069  07BF                     l2550:
  8070  07BF  0830               	movf	___awmod@divisor,w
  8071  07C0  0431               	iorwf	___awmod@divisor+1,w
  8072  07C1  1903               	btfsc	3,2
  8073  07C2  2FC4               	goto	u2011
  8074  07C3  2FC5               	goto	u2010
  8075  07C4                     u2011:
  8076  07C4  2FEE               	goto	l2568
  8077  07C5                     u2010:
  8078  07C5                     l2552:
  8079  07C5  01B5               	clrf	___awmod@counter
  8080  07C6  0AB5               	incf	___awmod@counter,f
  8081  07C7  2FD1               	goto	l2558
  8082  07C8                     l2554:
  8083  07C8  3001               	movlw	1
  8084  07C9                     u2025:
  8085  07C9  35B0               	lslf	___awmod@divisor,f
  8086  07CA  0DB1               	rlf	___awmod@divisor+1,f
  8087  07CB  0B89               	decfsz	9,f
  8088  07CC  2FC9               	goto	u2025
  8089  07CD                     l2556:
  8090  07CD  3001               	movlw	1
  8091  07CE  00B4               	movwf	??___awmod
  8092  07CF  0834               	movf	??___awmod,w
  8093  07D0  07B5               	addwf	___awmod@counter,f
  8094  07D1                     l2558:
  8095  07D1  1FB1               	btfss	___awmod@divisor+1,7
  8096  07D2  2FD4               	goto	u2031
  8097  07D3  2FD5               	goto	u2030
  8098  07D4                     u2031:
  8099  07D4  2FC8               	goto	l2554
  8100  07D5                     u2030:
  8101  07D5                     l2560:
  8102  07D5  0831               	movf	___awmod@divisor+1,w
  8103  07D6  0233               	subwf	___awmod@dividend+1,w
  8104  07D7  1D03               	skipz
  8105  07D8  2FDB               	goto	u2045
  8106  07D9  0830               	movf	___awmod@divisor,w
  8107  07DA  0232               	subwf	___awmod@dividend,w
  8108  07DB                     u2045:
  8109  07DB  1C03               	skipc
  8110  07DC  2FDE               	goto	u2041
  8111  07DD  2FDF               	goto	u2040
  8112  07DE                     u2041:
  8113  07DE  2FE3               	goto	l2564
  8114  07DF                     u2040:
  8115  07DF                     l2562:
  8116  07DF  0830               	movf	___awmod@divisor,w
  8117  07E0  02B2               	subwf	___awmod@dividend,f
  8118  07E1  0831               	movf	___awmod@divisor+1,w
  8119  07E2  3BB3               	subwfb	___awmod@dividend+1,f
  8120  07E3                     l2564:
  8121  07E3  3001               	movlw	1
  8122  07E4                     u2055:
  8123  07E4  36B1               	lsrf	___awmod@divisor+1,f
  8124  07E5  0CB0               	rrf	___awmod@divisor,f
  8125  07E6  0B89               	decfsz	9,f
  8126  07E7  2FE4               	goto	u2055
  8127  07E8                     l2566:
  8128  07E8  3001               	movlw	1
  8129  07E9  02B5               	subwf	___awmod@counter,f
  8130  07EA  1D03               	btfss	3,2
  8131  07EB  2FED               	goto	u2061
  8132  07EC  2FEE               	goto	u2060
  8133  07ED                     u2061:
  8134  07ED  2FD5               	goto	l2560
  8135  07EE                     u2060:
  8136  07EE                     l2568:
  8137  07EE  0836               	movf	___awmod@sign,w
  8138  07EF  1903               	btfsc	3,2
  8139  07F0  2FF2               	goto	u2071
  8140  07F1  2FF3               	goto	u2070
  8141  07F2                     u2071:
  8142  07F2  2FF8               	goto	l2572
  8143  07F3                     u2070:
  8144  07F3                     l2570:
  8145  07F3  09B2               	comf	___awmod@dividend,f
  8146  07F4  09B3               	comf	___awmod@dividend+1,f
  8147  07F5  0AB2               	incf	___awmod@dividend,f
  8148  07F6  1903               	skipnz
  8149  07F7  0AB3               	incf	___awmod@dividend+1,f
  8150  07F8                     l2572:
  8151  07F8  0833               	movf	___awmod@dividend+1,w
  8152  07F9  00B1               	movwf	?___awmod+1
  8153  07FA  0832               	movf	___awmod@dividend,w
  8154  07FB  00B0               	movwf	?___awmod
  8155  07FC                     l822:
  8156  07FC  0008               	return
  8157  07FD                     __end_of___awmod:
  8158                           
  8159                           	psect	text10
  8160  0DD1                     __ptext10:	
  8161 ;; *************** function ___awdiv *****************
  8162 ;; Defined at:
  8163 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  8164 ;; Parameters:    Size  Location     Type
  8165 ;;  divisor         2   16[BANK0 ] int 
  8166 ;;  dividend        2   18[BANK0 ] int 
  8167 ;; Auto vars:     Size  Location     Type
  8168 ;;  quotient        2   23[BANK0 ] int 
  8169 ;;  sign            1   22[BANK0 ] unsigned char 
  8170 ;;  counter         1   21[BANK0 ] unsigned char 
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  2   16[BANK0 ] int 
  8173 ;; Registers used:
  8174 ;;		wreg, status,2, status,0
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8180 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8181 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8182 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8183 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8184 ;;Total ram usage:        9 bytes
  8185 ;; Hardware stack levels used: 1
  8186 ;; Hardware stack levels required when called: 7
  8187 ;; This function calls:
  8188 ;;		Nothing
  8189 ;; This function is called by:
  8190 ;;		_tm1637DisplayDecimal
  8191 ;; This function uses a non-reentrant model
  8192 ;;
  8193                           
  8194  0DD1                     ___awdiv:	
  8195                           ;psect for function ___awdiv
  8196                           
  8197  0DD1                     l2494:	
  8198                           ;incstack = 0
  8199                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8200                           
  8201  0DD1  0020               	movlb	0	; select bank0
  8202  0DD2  01B6               	clrf	___awdiv@sign
  8203  0DD3                     l2496:
  8204  0DD3  1FB1               	btfss	___awdiv@divisor+1,7
  8205  0DD4  2DD6               	goto	u1891
  8206  0DD5  2DD7               	goto	u1890
  8207  0DD6                     u1891:
  8208  0DD6  2DDE               	goto	l2502
  8209  0DD7                     u1890:
  8210  0DD7                     l2498:
  8211  0DD7  09B0               	comf	___awdiv@divisor,f
  8212  0DD8  09B1               	comf	___awdiv@divisor+1,f
  8213  0DD9  0AB0               	incf	___awdiv@divisor,f
  8214  0DDA  1903               	skipnz
  8215  0DDB  0AB1               	incf	___awdiv@divisor+1,f
  8216  0DDC                     l2500:
  8217  0DDC  01B6               	clrf	___awdiv@sign
  8218  0DDD  0AB6               	incf	___awdiv@sign,f
  8219  0DDE                     l2502:
  8220  0DDE  1FB3               	btfss	___awdiv@dividend+1,7
  8221  0DDF  2DE1               	goto	u1901
  8222  0DE0  2DE2               	goto	u1900
  8223  0DE1                     u1901:
  8224  0DE1  2DEB               	goto	l2508
  8225  0DE2                     u1900:
  8226  0DE2                     l2504:
  8227  0DE2  09B2               	comf	___awdiv@dividend,f
  8228  0DE3  09B3               	comf	___awdiv@dividend+1,f
  8229  0DE4  0AB2               	incf	___awdiv@dividend,f
  8230  0DE5  1903               	skipnz
  8231  0DE6  0AB3               	incf	___awdiv@dividend+1,f
  8232  0DE7                     l2506:
  8233  0DE7  3001               	movlw	1
  8234  0DE8  00B4               	movwf	??___awdiv
  8235  0DE9  0834               	movf	??___awdiv,w
  8236  0DEA  06B6               	xorwf	___awdiv@sign,f
  8237  0DEB                     l2508:
  8238  0DEB  01B7               	clrf	___awdiv@quotient
  8239  0DEC  01B8               	clrf	___awdiv@quotient+1
  8240  0DED                     l2510:
  8241  0DED  0830               	movf	___awdiv@divisor,w
  8242  0DEE  0431               	iorwf	___awdiv@divisor+1,w
  8243  0DEF  1903               	btfsc	3,2
  8244  0DF0  2DF2               	goto	u1911
  8245  0DF1  2DF3               	goto	u1910
  8246  0DF2                     u1911:
  8247  0DF2  2E22               	goto	l2530
  8248  0DF3                     u1910:
  8249  0DF3                     l2512:
  8250  0DF3  01B5               	clrf	___awdiv@counter
  8251  0DF4  0AB5               	incf	___awdiv@counter,f
  8252  0DF5  2DFF               	goto	l2518
  8253  0DF6                     l2514:
  8254  0DF6  3001               	movlw	1
  8255  0DF7                     u1925:
  8256  0DF7  35B0               	lslf	___awdiv@divisor,f
  8257  0DF8  0DB1               	rlf	___awdiv@divisor+1,f
  8258  0DF9  0B89               	decfsz	9,f
  8259  0DFA  2DF7               	goto	u1925
  8260  0DFB                     l2516:
  8261  0DFB  3001               	movlw	1
  8262  0DFC  00B4               	movwf	??___awdiv
  8263  0DFD  0834               	movf	??___awdiv,w
  8264  0DFE  07B5               	addwf	___awdiv@counter,f
  8265  0DFF                     l2518:
  8266  0DFF  1FB1               	btfss	___awdiv@divisor+1,7
  8267  0E00  2E02               	goto	u1931
  8268  0E01  2E03               	goto	u1930
  8269  0E02                     u1931:
  8270  0E02  2DF6               	goto	l2514
  8271  0E03                     u1930:
  8272  0E03                     l2520:
  8273  0E03  3001               	movlw	1
  8274  0E04                     u1945:
  8275  0E04  35B7               	lslf	___awdiv@quotient,f
  8276  0E05  0DB8               	rlf	___awdiv@quotient+1,f
  8277  0E06  0B89               	decfsz	9,f
  8278  0E07  2E04               	goto	u1945
  8279  0E08  0831               	movf	___awdiv@divisor+1,w
  8280  0E09  0233               	subwf	___awdiv@dividend+1,w
  8281  0E0A  1D03               	skipz
  8282  0E0B  2E0E               	goto	u1955
  8283  0E0C  0830               	movf	___awdiv@divisor,w
  8284  0E0D  0232               	subwf	___awdiv@dividend,w
  8285  0E0E                     u1955:
  8286  0E0E  1C03               	skipc
  8287  0E0F  2E11               	goto	u1951
  8288  0E10  2E12               	goto	u1950
  8289  0E11                     u1951:
  8290  0E11  2E17               	goto	l2526
  8291  0E12                     u1950:
  8292  0E12                     l2522:
  8293  0E12  0830               	movf	___awdiv@divisor,w
  8294  0E13  02B2               	subwf	___awdiv@dividend,f
  8295  0E14  0831               	movf	___awdiv@divisor+1,w
  8296  0E15  3BB3               	subwfb	___awdiv@dividend+1,f
  8297  0E16                     l2524:
  8298  0E16  1437               	bsf	___awdiv@quotient,0
  8299  0E17                     l2526:
  8300  0E17  3001               	movlw	1
  8301  0E18                     u1965:
  8302  0E18  36B1               	lsrf	___awdiv@divisor+1,f
  8303  0E19  0CB0               	rrf	___awdiv@divisor,f
  8304  0E1A  0B89               	decfsz	9,f
  8305  0E1B  2E18               	goto	u1965
  8306  0E1C                     l2528:
  8307  0E1C  3001               	movlw	1
  8308  0E1D  02B5               	subwf	___awdiv@counter,f
  8309  0E1E  1D03               	btfss	3,2
  8310  0E1F  2E21               	goto	u1971
  8311  0E20  2E22               	goto	u1970
  8312  0E21                     u1971:
  8313  0E21  2E03               	goto	l2520
  8314  0E22                     u1970:
  8315  0E22                     l2530:
  8316  0E22  0836               	movf	___awdiv@sign,w
  8317  0E23  1903               	btfsc	3,2
  8318  0E24  2E26               	goto	u1981
  8319  0E25  2E27               	goto	u1980
  8320  0E26                     u1981:
  8321  0E26  2E2C               	goto	l2534
  8322  0E27                     u1980:
  8323  0E27                     l2532:
  8324  0E27  09B7               	comf	___awdiv@quotient,f
  8325  0E28  09B8               	comf	___awdiv@quotient+1,f
  8326  0E29  0AB7               	incf	___awdiv@quotient,f
  8327  0E2A  1903               	skipnz
  8328  0E2B  0AB8               	incf	___awdiv@quotient+1,f
  8329  0E2C                     l2534:
  8330  0E2C  0838               	movf	___awdiv@quotient+1,w
  8331  0E2D  00B1               	movwf	?___awdiv+1
  8332  0E2E  0837               	movf	___awdiv@quotient,w
  8333  0E2F  00B0               	movwf	?___awdiv
  8334  0E30                     l809:
  8335  0E30  0008               	return
  8336  0E31                     __end_of___awdiv:
  8337                           
  8338                           	psect	text11
  8339  0864                     __ptext11:	
  8340 ;; *************** function _tm1637CycleAnimationStop *****************
  8341 ;; Defined at:
  8342 ;;		line 84 in file "TM1637Display.c"
  8343 ;; Parameters:    Size  Location     Type
  8344 ;;  display         1    wreg     PTR volatile struct .
  8345 ;;		 -> tm1637Init@display(7), 
  8346 ;; Auto vars:     Size  Location     Type
  8347 ;;  display         1   16[BANK0 ] PTR volatile struct .
  8348 ;;		 -> tm1637Init@display(7), 
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  1    wreg      void 
  8351 ;; Registers used:
  8352 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8353 ;; Tracked objects:
  8354 ;;		On entry : 0/0
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8359 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8361 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8362 ;;Total ram usage:        1 bytes
  8363 ;; Hardware stack levels used: 1
  8364 ;; Hardware stack levels required when called: 9
  8365 ;; This function calls:
  8366 ;;		_TMR4_StopTimer
  8367 ;; This function is called by:
  8368 ;;		_main
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372  0864                     _tm1637CycleAnimationStop:	
  8373                           ;psect for function _tm1637CycleAnimationStop
  8374                           
  8375                           
  8376                           ;incstack = 0
  8377                           ; Regs used in _tm1637CycleAnimationStop: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
      +                          ack]
  8378                           ;tm1637CycleAnimationStop@display stored from wreg
  8379  0864  0020               	movlb	0	; select bank0
  8380  0865  00B0               	movwf	tm1637CycleAnimationStop@display
  8381  0866                     l2706:
  8382                           
  8383                           ;TM1637Display.c: 85:     TMR4_StopTimer();
  8384  0866  3188  2015  3188   	fcall	_TMR4_StopTimer
  8385  0869                     l2708:
  8386                           
  8387                           ;TM1637Display.c: 86:     display->animationRunning = 0;
  8388  0869  0020               	movlb	0	; select bank0
  8389  086A  0830               	movf	tm1637CycleAnimationStop@display,w
  8390  086B  0086               	movwf	6
  8391  086C  0187               	clrf	7
  8392  086D  0181               	clrf	1
  8393  086E                     l447:
  8394  086E  0008               	return
  8395  086F                     __end_of_tm1637CycleAnimationStop:
  8396                           
  8397                           	psect	text12
  8398  0815                     __ptext12:	
  8399 ;; *************** function _TMR4_StopTimer *****************
  8400 ;; Defined at:
  8401 ;;		line 125 in file "mcc_generated_files/tmr4.c"
  8402 ;; Parameters:    Size  Location     Type
  8403 ;;		None
  8404 ;; Auto vars:     Size  Location     Type
  8405 ;;		None
  8406 ;; Return value:  Size  Location     Type
  8407 ;;                  1    wreg      void 
  8408 ;; Registers used:
  8409 ;;		status,2, status,0, pclath, cstack
  8410 ;; Tracked objects:
  8411 ;;		On entry : 0/0
  8412 ;;		On exit  : 0/0
  8413 ;;		Unchanged: 0/0
  8414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8419 ;;Total ram usage:        0 bytes
  8420 ;; Hardware stack levels used: 1
  8421 ;; Hardware stack levels required when called: 8
  8422 ;; This function calls:
  8423 ;;		_TMR4_Stop
  8424 ;; This function is called by:
  8425 ;;		_tm1637Init
  8426 ;;		_tm1637CycleAnimationStop
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430  0815                     _TMR4_StopTimer:	
  8431                           ;psect for function _TMR4_StopTimer
  8432                           
  8433  0815                     l2486:	
  8434                           ;incstack = 0
  8435                           ; Regs used in _TMR4_StopTimer: [status,2+status,0+pclath+cstack]
  8436                           
  8437                           
  8438                           ;mcc_generated_files/tmr4.c: 127:     TMR4_Stop();
  8439  0815  3187  27FD  3188   	fcall	_TMR4_Stop
  8440  0818                     l554:
  8441  0818  0008               	return
  8442  0819                     __end_of_TMR4_StopTimer:
  8443                           
  8444                           	psect	text13
  8445  07FD                     __ptext13:	
  8446 ;; *************** function _TMR4_Stop *****************
  8447 ;; Defined at:
  8448 ;;		line 119 in file "mcc_generated_files/tmr4.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;		None
  8451 ;; Auto vars:     Size  Location     Type
  8452 ;;		None
  8453 ;; Return value:  Size  Location     Type
  8454 ;;                  1    wreg      void 
  8455 ;; Registers used:
  8456 ;;		None
  8457 ;; Tracked objects:
  8458 ;;		On entry : 0/0
  8459 ;;		On exit  : 0/0
  8460 ;;		Unchanged: 0/0
  8461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8466 ;;Total ram usage:        0 bytes
  8467 ;; Hardware stack levels used: 1
  8468 ;; Hardware stack levels required when called: 7
  8469 ;; This function calls:
  8470 ;;		Nothing
  8471 ;; This function is called by:
  8472 ;;		_TMR4_StopTimer
  8473 ;; This function uses a non-reentrant model
  8474 ;;
  8475                           
  8476  07FD                     _TMR4_Stop:	
  8477                           ;psect for function _TMR4_Stop
  8478                           
  8479  07FD                     l2338:	
  8480                           ;incstack = 0
  8481                           ; Regs used in _TMR4_Stop: []
  8482                           
  8483                           
  8484                           ;mcc_generated_files/tmr4.c: 122:     T4CONbits.TMR4ON = 0;
  8485  07FD  0028               	movlb	8	; select bank8
  8486  07FE  1395               	bcf	21,7	;volatile
  8487  07FF                     l551:
  8488  07FF  0008               	return
  8489  0800                     __end_of_TMR4_Stop:
  8490                           
  8491                           	psect	text14
  8492  09DA                     __ptext14:	
  8493 ;; *************** function _tm1637CycleAnimationStart *****************
  8494 ;; Defined at:
  8495 ;;		line 65 in file "TM1637Display.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;  display         1    wreg     PTR volatile struct .
  8498 ;;		 -> tm1637Init@display(7), 
  8499 ;;  dir             1   16[BANK0 ] unsigned char 
  8500 ;; Auto vars:     Size  Location     Type
  8501 ;;  display         1   20[BANK0 ] PTR volatile struct .
  8502 ;;		 -> tm1637Init@display(7), 
  8503 ;; Return value:  Size  Location     Type
  8504 ;;                  1    wreg      void 
  8505 ;; Registers used:
  8506 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8507 ;; Tracked objects:
  8508 ;;		On entry : 0/0
  8509 ;;		On exit  : 0/0
  8510 ;;		Unchanged: 0/0
  8511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8512 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8513 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8514 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8515 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8516 ;;Total ram usage:        5 bytes
  8517 ;; Hardware stack levels used: 1
  8518 ;; Hardware stack levels required when called: 9
  8519 ;; This function calls:
  8520 ;;		_TMR4_StartTimer
  8521 ;; This function is called by:
  8522 ;;		_main
  8523 ;; This function uses a non-reentrant model
  8524 ;;
  8525                           
  8526  09DA                     _tm1637CycleAnimationStart:	
  8527                           ;psect for function _tm1637CycleAnimationStart
  8528                           
  8529                           
  8530                           ;incstack = 0
  8531                           ; Regs used in _tm1637CycleAnimationStart: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
      +                          tack]
  8532                           ;tm1637CycleAnimationStart@display stored from wreg
  8533  09DA  0020               	movlb	0	; select bank0
  8534  09DB  00B4               	movwf	tm1637CycleAnimationStart@display
  8535  09DC                     l2694:
  8536                           
  8537                           ;TM1637Display.c: 66:     displayHandle = display;
  8538  09DC  0834               	movf	tm1637CycleAnimationStart@display,w
  8539  09DD  00B1               	movwf	??_tm1637CycleAnimationStart
  8540  09DE  0831               	movf	??_tm1637CycleAnimationStart,w
  8541  09DF  00DD               	movwf	_displayHandle
  8542  09E0                     l2696:
  8543                           
  8544                           ;TM1637Display.c: 67:     rotationAnimationStep = (dir) ? 1 : -1;
  8545  09E0  0830               	movf	tm1637CycleAnimationStart@dir,w
  8546  09E1  1D03               	btfss	3,2
  8547  09E2  29E4               	goto	u2211
  8548  09E3  29E5               	goto	u2210
  8549  09E4                     u2211:
  8550  09E4  29EA               	goto	l2700
  8551  09E5                     u2210:
  8552  09E5                     l2698:
  8553  09E5  30FF               	movlw	255
  8554  09E6  00B2               	movwf	_tm1637CycleAnimationStart$1017
  8555  09E7  30FF               	movlw	255
  8556  09E8  00B3               	movwf	_tm1637CycleAnimationStart$1017+1
  8557  09E9  29EE               	goto	l443
  8558  09EA                     l2700:
  8559  09EA  3001               	movlw	1
  8560  09EB  00B2               	movwf	_tm1637CycleAnimationStart$1017
  8561  09EC  3000               	movlw	0
  8562  09ED  00B3               	movwf	_tm1637CycleAnimationStart$1017+1
  8563  09EE                     l443:
  8564  09EE  0832               	movf	_tm1637CycleAnimationStart$1017,w
  8565  09EF  00B1               	movwf	??_tm1637CycleAnimationStart
  8566  09F0  0831               	movf	??_tm1637CycleAnimationStart,w
  8567  09F1  00DC               	movwf	_rotationAnimationStep
  8568  09F2                     l2702:
  8569                           
  8570                           ;TM1637Display.c: 68:     TMR4_StartTimer();
  8571  09F2  3188  2011  3189   	fcall	_TMR4_StartTimer
  8572  09F5                     l2704:
  8573                           
  8574                           ;TM1637Display.c: 69:     display->animationRunning = 1;
  8575  09F5  3001               	movlw	1
  8576  09F6  0020               	movlb	0	; select bank0
  8577  09F7  00B1               	movwf	??_tm1637CycleAnimationStart
  8578  09F8  0834               	movf	tm1637CycleAnimationStart@display,w
  8579  09F9  0086               	movwf	6
  8580  09FA  0187               	clrf	7
  8581  09FB  0831               	movf	??_tm1637CycleAnimationStart,w
  8582  09FC  0081               	movwf	1
  8583  09FD                     l444:
  8584  09FD  0008               	return
  8585  09FE                     __end_of_tm1637CycleAnimationStart:
  8586                           
  8587                           	psect	text15
  8588  0811                     __ptext15:	
  8589 ;; *************** function _TMR4_StartTimer *****************
  8590 ;; Defined at:
  8591 ;;		line 114 in file "mcc_generated_files/tmr4.c"
  8592 ;; Parameters:    Size  Location     Type
  8593 ;;		None
  8594 ;; Auto vars:     Size  Location     Type
  8595 ;;		None
  8596 ;; Return value:  Size  Location     Type
  8597 ;;                  1    wreg      void 
  8598 ;; Registers used:
  8599 ;;		status,2, status,0, pclath, cstack
  8600 ;; Tracked objects:
  8601 ;;		On entry : 0/0
  8602 ;;		On exit  : 0/0
  8603 ;;		Unchanged: 0/0
  8604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8609 ;;Total ram usage:        0 bytes
  8610 ;; Hardware stack levels used: 1
  8611 ;; Hardware stack levels required when called: 8
  8612 ;; This function calls:
  8613 ;;		_TMR4_Start
  8614 ;; This function is called by:
  8615 ;;		_tm1637CycleAnimationStart
  8616 ;; This function uses a non-reentrant model
  8617 ;;
  8618                           
  8619  0811                     _TMR4_StartTimer:	
  8620                           ;psect for function _TMR4_StartTimer
  8621                           
  8622  0811                     l2488:	
  8623                           ;incstack = 0
  8624                           ; Regs used in _TMR4_StartTimer: [status,2+status,0+pclath+cstack]
  8625                           
  8626                           
  8627                           ;mcc_generated_files/tmr4.c: 116:     TMR4_Start();
  8628  0811  3188  200E  3188   	fcall	_TMR4_Start
  8629  0814                     l548:
  8630  0814  0008               	return
  8631  0815                     __end_of_TMR4_StartTimer:
  8632                           
  8633                           	psect	text16
  8634  080E                     __ptext16:	
  8635 ;; *************** function _TMR4_Start *****************
  8636 ;; Defined at:
  8637 ;;		line 108 in file "mcc_generated_files/tmr4.c"
  8638 ;; Parameters:    Size  Location     Type
  8639 ;;		None
  8640 ;; Auto vars:     Size  Location     Type
  8641 ;;		None
  8642 ;; Return value:  Size  Location     Type
  8643 ;;                  1    wreg      void 
  8644 ;; Registers used:
  8645 ;;		None
  8646 ;; Tracked objects:
  8647 ;;		On entry : 0/0
  8648 ;;		On exit  : 0/0
  8649 ;;		Unchanged: 0/0
  8650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8655 ;;Total ram usage:        0 bytes
  8656 ;; Hardware stack levels used: 1
  8657 ;; Hardware stack levels required when called: 7
  8658 ;; This function calls:
  8659 ;;		Nothing
  8660 ;; This function is called by:
  8661 ;;		_TMR4_StartTimer
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665  080E                     _TMR4_Start:	
  8666                           ;psect for function _TMR4_Start
  8667                           
  8668  080E                     l2336:	
  8669                           ;incstack = 0
  8670                           ; Regs used in _TMR4_Start: []
  8671                           
  8672                           
  8673                           ;mcc_generated_files/tmr4.c: 111:     T4CONbits.TMR4ON = 1;
  8674  080E  0028               	movlb	8	; select bank8
  8675  080F  1795               	bsf	21,7	;volatile
  8676  0810                     l545:
  8677  0810  0008               	return
  8678  0811                     __end_of_TMR4_Start:
  8679                           
  8680                           	psect	text17
  8681  06C1                     __ptext17:	
  8682 ;; *************** function _ramp_motor *****************
  8683 ;; Defined at:
  8684 ;;		line 29 in file "main.c"
  8685 ;; Parameters:    Size  Location     Type
  8686 ;;  speed_contro    2   36[BANK0 ] PTR FTN()void 
  8687 ;;		 -> PWM3_LoadDutyValue(1), 
  8688 ;;  speed_contro    2   38[BANK0 ] PTR FTN()void 
  8689 ;;		 -> PWM4_LoadDutyValue(1), 
  8690 ;;  dir             1   40[BANK0 ] unsigned char 
  8691 ;;  start_speed     2   41[BANK0 ] unsigned short 
  8692 ;;  end_speed       2   43[BANK0 ] unsigned short 
  8693 ;;  ms              2   45[BANK0 ] unsigned short 
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;  i               2   10[BANK1 ] unsigned short 
  8696 ;;  speed_contro    2   14[BANK1 ] PTR FTN()void 
  8697 ;;		 -> PWM4_LoadDutyValue(1), PWM3_LoadDutyValue(1), 
  8698 ;;  curr_speed      2   12[BANK1 ] short 
  8699 ;;  gnd_controll    2    8[BANK1 ] PTR FTN()void 
  8700 ;;		 -> PWM4_LoadDutyValue(1), PWM3_LoadDutyValue(1), 
  8701 ;;  step_sz         2    2[BANK1 ] short 
  8702 ;; Return value:  Size  Location     Type
  8703 ;;                  1    wreg      void 
  8704 ;; Registers used:
  8705 ;;		wreg, status,2, status,0, pclath, cstack
  8706 ;; Tracked objects:
  8707 ;;		On entry : 0/0
  8708 ;;		On exit  : 0/0
  8709 ;;		Unchanged: 0/0
  8710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8711 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8712 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8713 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8714 ;;      Totals:         0      11      16       0       0       0       0       0       0       0       0       0       
      +0       0
  8715 ;;Total ram usage:       27 bytes
  8716 ;; Hardware stack levels used: 1
  8717 ;; Hardware stack levels required when called: 9
  8718 ;; This function calls:
  8719 ;;		_PWM3_LoadDutyValue
  8720 ;;		_PWM4_LoadDutyValue
  8721 ;;		___lwdiv
  8722 ;;		_duty_cycle
  8723 ;; This function is called by:
  8724 ;;		_main
  8725 ;; This function uses a non-reentrant model
  8726 ;;
  8727                           
  8728  06C1                     _ramp_motor:	
  8729                           ;psect for function _ramp_motor
  8730                           
  8731  06C1                     l3216:	
  8732                           ;incstack = 0
  8733                           ; Regs used in _ramp_motor: [wreg+status,2+status,0+pclath+cstack]
  8734                           
  8735                           
  8736                           ;main.c: 30:     int16_t step_sz = (duty_cycle(end_speed) - duty_cycle(start_speed)) / (
      +                          ms / 50);
  8737  06C1  3032               	movlw	50
  8738  06C2  0020               	movlb	0	; select bank0
  8739  06C3  00B6               	movwf	___lwdiv@divisor
  8740  06C4  3000               	movlw	0
  8741  06C5  00B7               	movwf	___lwdiv@divisor+1
  8742  06C6  084E               	movf	ramp_motor@ms+1,w
  8743  06C7  00B9               	movwf	___lwdiv@dividend+1
  8744  06C8  084D               	movf	ramp_motor@ms,w
  8745  06C9  00B8               	movwf	___lwdiv@dividend
  8746  06CA  318B  2355  3186   	fcall	___lwdiv
  8747  06CD  0020               	movlb	0	; select bank0
  8748  06CE  0837               	movf	?___lwdiv+1,w
  8749  06CF  0021               	movlb	1	; select bank1
  8750  06D0  00A5               	movwf	(_ramp_motor$2030+1)^(0+128)
  8751  06D1  0020               	movlb	0	; select bank0
  8752  06D2  0836               	movf	?___lwdiv,w
  8753  06D3  0021               	movlb	1	; select bank1
  8754  06D4  00A4               	movwf	_ramp_motor$2030^(0+128)
  8755                           
  8756                           ;main.c: 30:     int16_t step_sz = (duty_cycle(end_speed) - duty_cycle(start_speed)) / (
      +                          ms / 50);
  8757  06D5  0020               	movlb	0	; select bank0
  8758  06D6  084C               	movf	ramp_motor@end_speed+1,w
  8759  06D7  00BF               	movwf	duty_cycle@percent+1
  8760  06D8  084B               	movf	ramp_motor@end_speed,w
  8761  06D9  00BE               	movwf	duty_cycle@percent
  8762  06DA  3189  2157  3186   	fcall	_duty_cycle
  8763  06DD  0020               	movlb	0	; select bank0
  8764  06DE  083E               	movf	?_duty_cycle,w
  8765  06DF  0021               	movlb	1	; select bank1
  8766  06E0  00A0               	movwf	??_ramp_motor^(0+128)
  8767  06E1  0020               	movlb	0	; select bank0
  8768  06E2  083F               	movf	?_duty_cycle+1,w
  8769  06E3  0021               	movlb	1	; select bank1
  8770  06E4  00A1               	movwf	(??_ramp_motor^(0+128)+1)
  8771  06E5  0020               	movlb	0	; select bank0
  8772  06E6  084A               	movf	ramp_motor@start_speed+1,w
  8773  06E7  00BF               	movwf	duty_cycle@percent+1
  8774  06E8  0849               	movf	ramp_motor@start_speed,w
  8775  06E9  00BE               	movwf	duty_cycle@percent
  8776  06EA  3189  2157  3186   	fcall	_duty_cycle
  8777  06ED  0020               	movlb	0	; select bank0
  8778  06EE  083E               	movf	?_duty_cycle,w
  8779  06EF  0021               	movlb	1	; select bank1
  8780  06F0  0220               	subwf	??_ramp_motor^(0+128),w
  8781  06F1  00A6               	movwf	_ramp_motor$2031^(0+128)
  8782  06F2  0020               	movlb	0	; select bank0
  8783  06F3  083F               	movf	?_duty_cycle+1,w
  8784  06F4  0021               	movlb	1	; select bank1
  8785  06F5  3B21               	subwfb	(??_ramp_motor+1)^(0+128),w
  8786  06F6  00A7               	movwf	(_ramp_motor$2031+1)^(0+128)
  8787                           
  8788                           ;main.c: 30:     int16_t step_sz = (duty_cycle(end_speed) - duty_cycle(start_speed)) / (
      +                          ms / 50);
  8789  06F7  0825               	movf	(_ramp_motor$2030+1)^(0+128),w
  8790  06F8  0020               	movlb	0	; select bank0
  8791  06F9  00B7               	movwf	___lwdiv@divisor+1
  8792  06FA  0021               	movlb	1	; select bank1
  8793  06FB  0824               	movf	_ramp_motor$2030^(0+128),w
  8794  06FC  0020               	movlb	0	; select bank0
  8795  06FD  00B6               	movwf	___lwdiv@divisor
  8796  06FE  0021               	movlb	1	; select bank1
  8797  06FF  0827               	movf	(_ramp_motor$2031+1)^(0+128),w
  8798  0700  0020               	movlb	0	; select bank0
  8799  0701  00B9               	movwf	___lwdiv@dividend+1
  8800  0702  0021               	movlb	1	; select bank1
  8801  0703  0826               	movf	_ramp_motor$2031^(0+128),w
  8802  0704  0020               	movlb	0	; select bank0
  8803  0705  00B8               	movwf	___lwdiv@dividend
  8804  0706  318B  2355  3186   	fcall	___lwdiv
  8805  0709  0020               	movlb	0	; select bank0
  8806  070A  0837               	movf	?___lwdiv+1,w
  8807  070B  0021               	movlb	1	; select bank1
  8808  070C  00A3               	movwf	(ramp_motor@step_sz+1)^(0+128)
  8809  070D  0020               	movlb	0	; select bank0
  8810  070E  0836               	movf	?___lwdiv,w
  8811  070F  0021               	movlb	1	; select bank1
  8812  0710  00A2               	movwf	ramp_motor@step_sz^(0+128)
  8813                           
  8814                           ;main.c: 31:     int16_t curr_speed = duty_cycle(start_speed);
  8815  0711  0020               	movlb	0	; select bank0
  8816  0712  084A               	movf	ramp_motor@start_speed+1,w
  8817  0713  00BF               	movwf	duty_cycle@percent+1
  8818  0714  0849               	movf	ramp_motor@start_speed,w
  8819  0715  00BE               	movwf	duty_cycle@percent
  8820  0716  3189  2157  3186   	fcall	_duty_cycle
  8821  0719  0020               	movlb	0	; select bank0
  8822  071A  083F               	movf	?_duty_cycle+1,w
  8823  071B  0021               	movlb	1	; select bank1
  8824  071C  00AD               	movwf	(ramp_motor@curr_speed+1)^(0+128)
  8825  071D  0020               	movlb	0	; select bank0
  8826  071E  083E               	movf	?_duty_cycle,w
  8827  071F  0021               	movlb	1	; select bank1
  8828  0720  00AC               	movwf	ramp_motor@curr_speed^(0+128)
  8829  0721                     l3218:
  8830                           
  8831                           ;main.c: 33:     void (*speed_controller)() = dir ? speed_controller_A : speed_controlle
      +                          r_B;
  8832  0721  0020               	movlb	0	; select bank0
  8833  0722  0848               	movf	ramp_motor@dir,w
  8834  0723  1D03               	btfss	3,2
  8835  0724  2F26               	goto	u3311
  8836  0725  2F27               	goto	u3310
  8837  0726                     u3311:
  8838  0726  2F2F               	goto	l3222
  8839  0727                     u3310:
  8840  0727                     l3220:
  8841  0727  0847               	movf	ramp_motor@speed_controller_B+1,w
  8842  0728  0021               	movlb	1	; select bank1
  8843  0729  00AF               	movwf	(ramp_motor@speed_controller+1)^(0+128)
  8844  072A  0020               	movlb	0	; select bank0
  8845  072B  0846               	movf	ramp_motor@speed_controller_B,w
  8846  072C  0021               	movlb	1	; select bank1
  8847  072D  00AE               	movwf	ramp_motor@speed_controller^(0+128)
  8848  072E  2F36               	goto	l3224
  8849  072F                     l3222:
  8850  072F  0845               	movf	ramp_motor@speed_controller_A+1,w
  8851  0730  0021               	movlb	1	; select bank1
  8852  0731  00AF               	movwf	(ramp_motor@speed_controller+1)^(0+128)
  8853  0732  0020               	movlb	0	; select bank0
  8854  0733  0844               	movf	ramp_motor@speed_controller_A,w
  8855  0734  0021               	movlb	1	; select bank1
  8856  0735  00AE               	movwf	ramp_motor@speed_controller^(0+128)
  8857  0736                     l3224:
  8858                           
  8859                           ;main.c: 34:     void (*gnd_controller)() = dir ? speed_controller_B : speed_controller_
      +                          A;
  8860  0736  0020               	movlb	0	; select bank0
  8861  0737  0848               	movf	ramp_motor@dir,w
  8862  0738  1D03               	btfss	3,2
  8863  0739  2F3B               	goto	u3321
  8864  073A  2F3C               	goto	u3320
  8865  073B                     u3321:
  8866  073B  2F44               	goto	l3228
  8867  073C                     u3320:
  8868  073C                     l3226:
  8869  073C  0845               	movf	ramp_motor@speed_controller_A+1,w
  8870  073D  0021               	movlb	1	; select bank1
  8871  073E  00A9               	movwf	(ramp_motor@gnd_controller+1)^(0+128)
  8872  073F  0020               	movlb	0	; select bank0
  8873  0740  0844               	movf	ramp_motor@speed_controller_A,w
  8874  0741  0021               	movlb	1	; select bank1
  8875  0742  00A8               	movwf	ramp_motor@gnd_controller^(0+128)
  8876  0743  2F4B               	goto	l3230
  8877  0744                     l3228:
  8878  0744  0847               	movf	ramp_motor@speed_controller_B+1,w
  8879  0745  0021               	movlb	1	; select bank1
  8880  0746  00A9               	movwf	(ramp_motor@gnd_controller+1)^(0+128)
  8881  0747  0020               	movlb	0	; select bank0
  8882  0748  0846               	movf	ramp_motor@speed_controller_B,w
  8883  0749  0021               	movlb	1	; select bank1
  8884  074A  00A8               	movwf	ramp_motor@gnd_controller^(0+128)
  8885  074B                     l3230:
  8886                           
  8887                           ;main.c: 36:     gnd_controller(duty_cycle(0));
  8888  074B  3000               	movlw	0
  8889  074C  0020               	movlb	0	; select bank0
  8890  074D  00BE               	movwf	duty_cycle@percent
  8891  074E  00BF               	movwf	duty_cycle@percent+1
  8892  074F  3189  2157  3186   	fcall	_duty_cycle
  8893  0752  0020               	movlb	0	; select bank0
  8894  0753  083F               	movf	?_duty_cycle+1,w
  8895  0754  00C1               	movwf	PWM4_LoadDutyValue@dutyValue+1
  8896  0755  083E               	movf	?_duty_cycle,w
  8897  0756  00C0               	movwf	PWM4_LoadDutyValue@dutyValue
  8898  0757  0021               	movlb	1	; select bank1
  8899  0758  0829               	movf	(ramp_motor@gnd_controller+1)^(0+128),w
  8900  0759  008A               	movwf	10
  8901  075A  0828               	movf	ramp_motor@gnd_controller^(0+128),w
  8902  075B  000A               	callw
  8903  075C  3186               	pagesel	$
  8904  075D                     l3232:
  8905                           
  8906                           ;main.c: 37:     speed_controller(duty_cycle(curr_speed));
  8907  075D  0021               	movlb	1	; select bank1
  8908  075E  082D               	movf	(ramp_motor@curr_speed+1)^(0+128),w
  8909  075F  0020               	movlb	0	; select bank0
  8910  0760  00BF               	movwf	duty_cycle@percent+1
  8911  0761  0021               	movlb	1	; select bank1
  8912  0762  082C               	movf	ramp_motor@curr_speed^(0+128),w
  8913  0763  0020               	movlb	0	; select bank0
  8914  0764  00BE               	movwf	duty_cycle@percent
  8915  0765  3189  2157  3186   	fcall	_duty_cycle
  8916  0768  0020               	movlb	0	; select bank0
  8917  0769  083F               	movf	?_duty_cycle+1,w
  8918  076A  00C1               	movwf	PWM4_LoadDutyValue@dutyValue+1
  8919  076B  083E               	movf	?_duty_cycle,w
  8920  076C  00C0               	movwf	PWM4_LoadDutyValue@dutyValue
  8921  076D  0021               	movlb	1	; select bank1
  8922  076E  082F               	movf	(ramp_motor@speed_controller+1)^(0+128),w
  8923  076F  008A               	movwf	10
  8924  0770  082E               	movf	ramp_motor@speed_controller^(0+128),w
  8925  0771  000A               	callw
  8926  0772  3186               	pagesel	$
  8927  0773                     l3234:
  8928                           
  8929                           ;main.c: 39:     for (uint16_t i = 0; i < ms; i += 50) {
  8930  0773  0021               	movlb	1	; select bank1
  8931  0774  01AA               	clrf	ramp_motor@i^(0+128)
  8932  0775  01AB               	clrf	(ramp_motor@i+1)^(0+128)
  8933  0776  2F9A               	goto	l3242
  8934  0777                     l3236:
  8935                           
  8936                           ;main.c: 40:         _delay((unsigned long)((50)*(32000000/4000.0)));
  8937  0777  3003               	movlw	3
  8938  0778  0021               	movlb	1	; select bank1
  8939  0779  00A1               	movwf	(??_ramp_motor^(0+128)+1)
  8940  077A  3008               	movlw	8
  8941  077B  00A0               	movwf	??_ramp_motor^(0+128)
  8942  077C  3077               	movlw	119
  8943  077D                     u4087:
  8944  077D  0B89               	decfsz	9,f
  8945  077E  2F7D               	goto	u4087
  8946  077F  0BA0               	decfsz	??_ramp_motor^(0+128),f
  8947  0780  2F7D               	goto	u4087
  8948  0781  0BA1               	decfsz	(??_ramp_motor^(0+128)+1),f
  8949  0782  2F7D               	goto	u4087
  8950                           
  8951                           ;main.c: 41:         curr_speed += step_sz;
  8952  0783  0021               	movlb	1	; select bank1
  8953  0784  0822               	movf	ramp_motor@step_sz^(0+128),w
  8954  0785  07AC               	addwf	ramp_motor@curr_speed^(0+128),f
  8955  0786  0823               	movf	(ramp_motor@step_sz+1)^(0+128),w
  8956  0787  3DAD               	addwfc	(ramp_motor@curr_speed+1)^(0+128),f
  8957  0788                     l3238:
  8958                           
  8959                           ;main.c: 42:         speed_controller(curr_speed);
  8960  0788  082D               	movf	(ramp_motor@curr_speed+1)^(0+128),w
  8961  0789  0020               	movlb	0	; select bank0
  8962  078A  00C1               	movwf	PWM4_LoadDutyValue@dutyValue+1
  8963  078B  0021               	movlb	1	; select bank1
  8964  078C  082C               	movf	ramp_motor@curr_speed^(0+128),w
  8965  078D  0020               	movlb	0	; select bank0
  8966  078E  00C0               	movwf	PWM4_LoadDutyValue@dutyValue
  8967  078F  0021               	movlb	1	; select bank1
  8968  0790  082F               	movf	(ramp_motor@speed_controller+1)^(0+128),w
  8969  0791  008A               	movwf	10
  8970  0792  082E               	movf	ramp_motor@speed_controller^(0+128),w
  8971  0793  000A               	callw
  8972  0794  3186               	pagesel	$
  8973  0795                     l3240:
  8974                           
  8975                           ;main.c: 43:     }
  8976  0795  3032               	movlw	50
  8977  0796  0021               	movlb	1	; select bank1
  8978  0797  07AA               	addwf	ramp_motor@i^(0+128),f
  8979  0798  3000               	movlw	0
  8980  0799  3DAB               	addwfc	(ramp_motor@i+1)^(0+128),f
  8981  079A                     l3242:
  8982  079A  0020               	movlb	0	; select bank0
  8983  079B  084E               	movf	ramp_motor@ms+1,w
  8984  079C  0021               	movlb	1	; select bank1
  8985  079D  022B               	subwf	(ramp_motor@i+1)^(0+128),w
  8986  079E  1D03               	skipz
  8987  079F  2FA4               	goto	u3335
  8988  07A0  0020               	movlb	0	; select bank0
  8989  07A1  084D               	movf	ramp_motor@ms,w
  8990  07A2  0021               	movlb	1	; select bank1
  8991  07A3  022A               	subwf	ramp_motor@i^(0+128),w
  8992  07A4                     u3335:
  8993  07A4  1C03               	skipc
  8994  07A5  2FA7               	goto	u3331
  8995  07A6  2FA8               	goto	u3330
  8996  07A7                     u3331:
  8997  07A7  2F77               	goto	l3236
  8998  07A8                     u3330:
  8999  07A8                     l365:
  9000  07A8  0008               	return
  9001  07A9                     __end_of_ramp_motor:
  9002                           
  9003                           	psect	text18
  9004  0957                     __ptext18:	
  9005 ;; *************** function _duty_cycle *****************
  9006 ;; Defined at:
  9007 ;;		line 19 in file "main.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;  percent         2   30[BANK0 ] unsigned short 
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;		None
  9012 ;; Return value:  Size  Location     Type
  9013 ;;                  2   30[BANK0 ] unsigned short 
  9014 ;; Registers used:
  9015 ;;		wreg, status,2, status,0, pclath, cstack
  9016 ;; Tracked objects:
  9017 ;;		On entry : 0/0
  9018 ;;		On exit  : 0/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9021 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9024 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9025 ;;Total ram usage:        2 bytes
  9026 ;; Hardware stack levels used: 1
  9027 ;; Hardware stack levels required when called: 8
  9028 ;; This function calls:
  9029 ;;		___lwdiv
  9030 ;;		___wmul
  9031 ;; This function is called by:
  9032 ;;		_ramp_motor
  9033 ;;		_main
  9034 ;; This function uses a non-reentrant model
  9035 ;;
  9036                           
  9037  0957                     _duty_cycle:	
  9038                           ;psect for function _duty_cycle
  9039                           
  9040  0957                     l3198:	
  9041                           ;incstack = 0
  9042                           ; Regs used in _duty_cycle: [wreg+status,2+status,0+pclath+cstack]
  9043                           
  9044  0957  3064               	movlw	100
  9045  0958  0020               	movlb	0	; select bank0
  9046  0959  00B6               	movwf	___lwdiv@divisor
  9047  095A  3000               	movlw	0
  9048  095B  00B7               	movwf	___lwdiv@divisor+1
  9049  095C  083F               	movf	duty_cycle@percent+1,w
  9050  095D  00B1               	movwf	___wmul@multiplier+1
  9051  095E  083E               	movf	duty_cycle@percent,w
  9052  095F  00B0               	movwf	___wmul@multiplier
  9053  0960  30FF               	movlw	255
  9054  0961  00B2               	movwf	___wmul@multiplicand
  9055  0962  3003               	movlw	3
  9056  0963  00B3               	movwf	___wmul@multiplicand+1
  9057  0964  3189  2175  3189   	fcall	___wmul
  9058  0967  0020               	movlb	0	; select bank0
  9059  0968  0831               	movf	?___wmul+1,w
  9060  0969  00B9               	movwf	___lwdiv@dividend+1
  9061  096A  0830               	movf	?___wmul,w
  9062  096B  00B8               	movwf	___lwdiv@dividend
  9063  096C  318B  2355  3189   	fcall	___lwdiv
  9064  096F  0020               	movlb	0	; select bank0
  9065  0970  0837               	movf	?___lwdiv+1,w
  9066  0971  00BF               	movwf	?_duty_cycle+1
  9067  0972  0836               	movf	?___lwdiv,w
  9068  0973  00BE               	movwf	?_duty_cycle
  9069  0974                     l351:
  9070  0974  0008               	return
  9071  0975                     __end_of_duty_cycle:
  9072                           
  9073                           	psect	text19
  9074  0975                     __ptext19:	
  9075 ;; *************** function ___wmul *****************
  9076 ;; Defined at:
  9077 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  9078 ;; Parameters:    Size  Location     Type
  9079 ;;  multiplier      2   16[BANK0 ] unsigned int 
  9080 ;;  multiplicand    2   18[BANK0 ] unsigned int 
  9081 ;; Auto vars:     Size  Location     Type
  9082 ;;  product         2   20[BANK0 ] unsigned int 
  9083 ;; Return value:  Size  Location     Type
  9084 ;;                  2   16[BANK0 ] unsigned int 
  9085 ;; Registers used:
  9086 ;;		wreg, status,2, status,0
  9087 ;; Tracked objects:
  9088 ;;		On entry : 0/0
  9089 ;;		On exit  : 0/0
  9090 ;;		Unchanged: 0/0
  9091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9092 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9093 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9095 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9096 ;;Total ram usage:        6 bytes
  9097 ;; Hardware stack levels used: 1
  9098 ;; Hardware stack levels required when called: 7
  9099 ;; This function calls:
  9100 ;;		Nothing
  9101 ;; This function is called by:
  9102 ;;		_duty_cycle
  9103 ;; This function uses a non-reentrant model
  9104 ;;
  9105                           
  9106  0975                     ___wmul:	
  9107                           ;psect for function ___wmul
  9108                           
  9109  0975                     l3154:	
  9110                           ;incstack = 0
  9111                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9112                           
  9113  0975  0020               	movlb	0	; select bank0
  9114  0976  01B4               	clrf	___wmul@product
  9115  0977  01B5               	clrf	___wmul@product+1
  9116  0978                     l3156:
  9117  0978  1C30               	btfss	___wmul@multiplier,0
  9118  0979  297B               	goto	u3151
  9119  097A  297C               	goto	u3150
  9120  097B                     u3151:
  9121  097B  2980               	goto	l656
  9122  097C                     u3150:
  9123  097C                     l3158:
  9124  097C  0832               	movf	___wmul@multiplicand,w
  9125  097D  07B4               	addwf	___wmul@product,f
  9126  097E  0833               	movf	___wmul@multiplicand+1,w
  9127  097F  3DB5               	addwfc	___wmul@product+1,f
  9128  0980                     l656:
  9129  0980  3001               	movlw	1
  9130  0981                     u3165:
  9131  0981  35B2               	lslf	___wmul@multiplicand,f
  9132  0982  0DB3               	rlf	___wmul@multiplicand+1,f
  9133  0983  0B89               	decfsz	9,f
  9134  0984  2981               	goto	u3165
  9135  0985                     l3160:
  9136  0985  3001               	movlw	1
  9137  0986                     u3175:
  9138  0986  36B1               	lsrf	___wmul@multiplier+1,f
  9139  0987  0CB0               	rrf	___wmul@multiplier,f
  9140  0988  0B89               	decfsz	9,f
  9141  0989  2986               	goto	u3175
  9142  098A                     l3162:
  9143  098A  0830               	movf	___wmul@multiplier,w
  9144  098B  0431               	iorwf	___wmul@multiplier+1,w
  9145  098C  1D03               	btfss	3,2
  9146  098D  298F               	goto	u3181
  9147  098E  2990               	goto	u3180
  9148  098F                     u3181:
  9149  098F  2978               	goto	l3156
  9150  0990                     u3180:
  9151  0990                     l3164:
  9152  0990  0835               	movf	___wmul@product+1,w
  9153  0991  00B1               	movwf	?___wmul+1
  9154  0992  0834               	movf	___wmul@product,w
  9155  0993  00B0               	movwf	?___wmul
  9156  0994                     l658:
  9157  0994  0008               	return
  9158  0995                     __end_of___wmul:
  9159                           
  9160                           	psect	text20
  9161  0B55                     __ptext20:	
  9162 ;; *************** function ___lwdiv *****************
  9163 ;; Defined at:
  9164 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
  9165 ;; Parameters:    Size  Location     Type
  9166 ;;  divisor         2   22[BANK0 ] unsigned int 
  9167 ;;  dividend        2   24[BANK0 ] unsigned int 
  9168 ;; Auto vars:     Size  Location     Type
  9169 ;;  quotient        2   28[BANK0 ] unsigned int 
  9170 ;;  counter         1   27[BANK0 ] unsigned char 
  9171 ;; Return value:  Size  Location     Type
  9172 ;;                  2   22[BANK0 ] unsigned int 
  9173 ;; Registers used:
  9174 ;;		wreg, status,2, status,0
  9175 ;; Tracked objects:
  9176 ;;		On entry : 0/0
  9177 ;;		On exit  : 0/0
  9178 ;;		Unchanged: 0/0
  9179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9180 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9181 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9182 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9183 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9184 ;;Total ram usage:        8 bytes
  9185 ;; Hardware stack levels used: 1
  9186 ;; Hardware stack levels required when called: 7
  9187 ;; This function calls:
  9188 ;;		Nothing
  9189 ;; This function is called by:
  9190 ;;		_duty_cycle
  9191 ;;		_ramp_motor
  9192 ;; This function uses a non-reentrant model
  9193 ;;
  9194                           
  9195  0B55                     ___lwdiv:	
  9196                           ;psect for function ___lwdiv
  9197                           
  9198  0B55                     l3168:	
  9199                           ;incstack = 0
  9200                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9201                           
  9202  0B55  0020               	movlb	0	; select bank0
  9203  0B56  01BC               	clrf	___lwdiv@quotient
  9204  0B57  01BD               	clrf	___lwdiv@quotient+1
  9205  0B58                     l3170:
  9206  0B58  0836               	movf	___lwdiv@divisor,w
  9207  0B59  0437               	iorwf	___lwdiv@divisor+1,w
  9208  0B5A  1903               	btfsc	3,2
  9209  0B5B  2B5D               	goto	u3191
  9210  0B5C  2B5E               	goto	u3190
  9211  0B5D                     u3191:
  9212  0B5D  2B8D               	goto	l3190
  9213  0B5E                     u3190:
  9214  0B5E                     l3172:
  9215  0B5E  01BB               	clrf	___lwdiv@counter
  9216  0B5F  0ABB               	incf	___lwdiv@counter,f
  9217  0B60  2B6A               	goto	l3178
  9218  0B61                     l3174:
  9219  0B61  3001               	movlw	1
  9220  0B62                     u3205:
  9221  0B62  35B6               	lslf	___lwdiv@divisor,f
  9222  0B63  0DB7               	rlf	___lwdiv@divisor+1,f
  9223  0B64  0B89               	decfsz	9,f
  9224  0B65  2B62               	goto	u3205
  9225  0B66                     l3176:
  9226  0B66  3001               	movlw	1
  9227  0B67  00BA               	movwf	??___lwdiv
  9228  0B68  083A               	movf	??___lwdiv,w
  9229  0B69  07BB               	addwf	___lwdiv@counter,f
  9230  0B6A                     l3178:
  9231  0B6A  1FB7               	btfss	___lwdiv@divisor+1,7
  9232  0B6B  2B6D               	goto	u3211
  9233  0B6C  2B6E               	goto	u3210
  9234  0B6D                     u3211:
  9235  0B6D  2B61               	goto	l3174
  9236  0B6E                     u3210:
  9237  0B6E                     l3180:
  9238  0B6E  3001               	movlw	1
  9239  0B6F                     u3225:
  9240  0B6F  35BC               	lslf	___lwdiv@quotient,f
  9241  0B70  0DBD               	rlf	___lwdiv@quotient+1,f
  9242  0B71  0B89               	decfsz	9,f
  9243  0B72  2B6F               	goto	u3225
  9244  0B73  0837               	movf	___lwdiv@divisor+1,w
  9245  0B74  0239               	subwf	___lwdiv@dividend+1,w
  9246  0B75  1D03               	skipz
  9247  0B76  2B79               	goto	u3235
  9248  0B77  0836               	movf	___lwdiv@divisor,w
  9249  0B78  0238               	subwf	___lwdiv@dividend,w
  9250  0B79                     u3235:
  9251  0B79  1C03               	skipc
  9252  0B7A  2B7C               	goto	u3231
  9253  0B7B  2B7D               	goto	u3230
  9254  0B7C                     u3231:
  9255  0B7C  2B82               	goto	l3186
  9256  0B7D                     u3230:
  9257  0B7D                     l3182:
  9258  0B7D  0836               	movf	___lwdiv@divisor,w
  9259  0B7E  02B8               	subwf	___lwdiv@dividend,f
  9260  0B7F  0837               	movf	___lwdiv@divisor+1,w
  9261  0B80  3BB9               	subwfb	___lwdiv@dividend+1,f
  9262  0B81                     l3184:
  9263  0B81  143C               	bsf	___lwdiv@quotient,0
  9264  0B82                     l3186:
  9265  0B82  3001               	movlw	1
  9266  0B83                     u3245:
  9267  0B83  36B7               	lsrf	___lwdiv@divisor+1,f
  9268  0B84  0CB6               	rrf	___lwdiv@divisor,f
  9269  0B85  0B89               	decfsz	9,f
  9270  0B86  2B83               	goto	u3245
  9271  0B87                     l3188:
  9272  0B87  3001               	movlw	1
  9273  0B88  02BB               	subwf	___lwdiv@counter,f
  9274  0B89  1D03               	btfss	3,2
  9275  0B8A  2B8C               	goto	u3251
  9276  0B8B  2B8D               	goto	u3250
  9277  0B8C                     u3251:
  9278  0B8C  2B6E               	goto	l3180
  9279  0B8D                     u3250:
  9280  0B8D                     l3190:
  9281  0B8D  083D               	movf	___lwdiv@quotient+1,w
  9282  0B8E  00B7               	movwf	?___lwdiv+1
  9283  0B8F  083C               	movf	___lwdiv@quotient,w
  9284  0B90  00B6               	movwf	?___lwdiv
  9285  0B91                     l936:
  9286  0B91  0008               	return
  9287  0B92                     __end_of___lwdiv:
  9288                           
  9289                           	psect	text21
  9290  0923                     __ptext21:	
  9291 ;; *************** function _PWM3_LoadDutyValue *****************
  9292 ;; Defined at:
  9293 ;;		line 74 in file "mcc_generated_files/pwm3.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;  dutyValue       2   32[BANK0 ] unsigned short 
  9296 ;; Auto vars:     Size  Location     Type
  9297 ;;		None
  9298 ;; Return value:  Size  Location     Type
  9299 ;;                  1    wreg      void 
  9300 ;; Registers used:
  9301 ;;		wreg, status,2, status,0
  9302 ;; Tracked objects:
  9303 ;;		On entry : 0/0
  9304 ;;		On exit  : 0/0
  9305 ;;		Unchanged: 0/0
  9306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9307 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9309 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9310 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9311 ;;Total ram usage:        4 bytes
  9312 ;; Hardware stack levels used: 1
  9313 ;; Hardware stack levels required when called: 7
  9314 ;; This function calls:
  9315 ;;		Nothing
  9316 ;; This function is called by:
  9317 ;;		_main
  9318 ;;		_ramp_motor
  9319 ;; This function uses a non-reentrant model
  9320 ;;
  9321                           
  9322  0923                     _PWM3_LoadDutyValue:	
  9323                           ;psect for function _PWM3_LoadDutyValue
  9324                           
  9325  0923                     l3194:	
  9326                           ;incstack = 0
  9327                           ; Regs used in _PWM3_LoadDutyValue: [wreg+status,2+status,0]
  9328                           
  9329                           
  9330                           ;mcc_generated_files/pwm3.c: 74:  void PWM3_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm3.c: 75:  {;mcc_generated_files/pwm3.c: 77:      PWM3DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9331  0923  0020               	movlb	0	; select bank0
  9332  0924  0841               	movf	PWM3_LoadDutyValue@dutyValue+1,w
  9333  0925  00C3               	movwf	??_PWM3_LoadDutyValue+1
  9334  0926  0840               	movf	PWM3_LoadDutyValue@dutyValue,w
  9335  0927  00C2               	movwf	??_PWM3_LoadDutyValue
  9336  0928  36C3               	lsrf	??_PWM3_LoadDutyValue+1,f
  9337  0929  0CC2               	rrf	??_PWM3_LoadDutyValue,f
  9338  092A  36C3               	lsrf	??_PWM3_LoadDutyValue+1,f
  9339  092B  0CC2               	rrf	??_PWM3_LoadDutyValue,f
  9340  092C  0842               	movf	??_PWM3_LoadDutyValue,w
  9341  092D  002C               	movlb	12	; select bank12
  9342  092E  0098               	movwf	24	;volatile
  9343                           
  9344                           ;mcc_generated_files/pwm3.c: 80:      PWM3DCL = (dutyValue & 0x0003)<<6;
  9345  092F  0020               	movlb	0	; select bank0
  9346  0930  0840               	movf	PWM3_LoadDutyValue@dutyValue,w
  9347  0931  3903               	andlw	3
  9348  0932  00C2               	movwf	??_PWM3_LoadDutyValue
  9349  0933  3005               	movlw	5
  9350  0934                     u3265:
  9351  0934  35C2               	lslf	??_PWM3_LoadDutyValue,f
  9352  0935  3EFF               	addlw	-1
  9353  0936  1D03               	skipz
  9354  0937  2934               	goto	u3265
  9355  0938  3542               	lslf	??_PWM3_LoadDutyValue,w
  9356  0939  002C               	movlb	12	; select bank12
  9357  093A  0097               	movwf	23	;volatile
  9358  093B                     l14:
  9359  093B  0008               	return
  9360  093C                     __end_of_PWM3_LoadDutyValue:
  9361                           
  9362                           	psect	text22
  9363  090A                     __ptext22:	
  9364 ;; *************** function _PWM4_LoadDutyValue *****************
  9365 ;; Defined at:
  9366 ;;		line 74 in file "mcc_generated_files/pwm4.c"
  9367 ;; Parameters:    Size  Location     Type
  9368 ;;  dutyValue       2   32[BANK0 ] unsigned short 
  9369 ;; Auto vars:     Size  Location     Type
  9370 ;;		None
  9371 ;; Return value:  Size  Location     Type
  9372 ;;                  1    wreg      void 
  9373 ;; Registers used:
  9374 ;;		wreg, status,2, status,0
  9375 ;; Tracked objects:
  9376 ;;		On entry : 0/0
  9377 ;;		On exit  : 0/0
  9378 ;;		Unchanged: 0/0
  9379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9380 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9382 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9383 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9384 ;;Total ram usage:        4 bytes
  9385 ;; Hardware stack levels used: 1
  9386 ;; Hardware stack levels required when called: 7
  9387 ;; This function calls:
  9388 ;;		Nothing
  9389 ;; This function is called by:
  9390 ;;		_main
  9391 ;;		_ramp_motor
  9392 ;; This function uses a non-reentrant model
  9393 ;;
  9394                           
  9395  090A                     _PWM4_LoadDutyValue:	
  9396                           ;psect for function _PWM4_LoadDutyValue
  9397                           
  9398  090A                     l3196:	
  9399                           ;incstack = 0
  9400                           ; Regs used in _PWM4_LoadDutyValue: [wreg+status,2+status,0]
  9401                           
  9402                           
  9403                           ;mcc_generated_files/pwm4.c: 74:  void PWM4_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm4.c: 75:  {;mcc_generated_files/pwm4.c: 77:      PWM4DCH = (dutyValue & 0x0
      +                          3FC)>>2;
  9404  090A  0020               	movlb	0	; select bank0
  9405  090B  0841               	movf	PWM4_LoadDutyValue@dutyValue+1,w
  9406  090C  00C3               	movwf	??_PWM4_LoadDutyValue+1
  9407  090D  0840               	movf	PWM4_LoadDutyValue@dutyValue,w
  9408  090E  00C2               	movwf	??_PWM4_LoadDutyValue
  9409  090F  36C3               	lsrf	??_PWM4_LoadDutyValue+1,f
  9410  0910  0CC2               	rrf	??_PWM4_LoadDutyValue,f
  9411  0911  36C3               	lsrf	??_PWM4_LoadDutyValue+1,f
  9412  0912  0CC2               	rrf	??_PWM4_LoadDutyValue,f
  9413  0913  0842               	movf	??_PWM4_LoadDutyValue,w
  9414  0914  002C               	movlb	12	; select bank12
  9415  0915  009B               	movwf	27	;volatile
  9416                           
  9417                           ;mcc_generated_files/pwm4.c: 80:      PWM4DCL = (dutyValue & 0x0003)<<6;
  9418  0916  0020               	movlb	0	; select bank0
  9419  0917  0840               	movf	PWM4_LoadDutyValue@dutyValue,w
  9420  0918  3903               	andlw	3
  9421  0919  00C2               	movwf	??_PWM4_LoadDutyValue
  9422  091A  3005               	movlw	5
  9423  091B                     u3275:
  9424  091B  35C2               	lslf	??_PWM4_LoadDutyValue,f
  9425  091C  3EFF               	addlw	-1
  9426  091D  1D03               	skipz
  9427  091E  291B               	goto	u3275
  9428  091F  3542               	lslf	??_PWM4_LoadDutyValue,w
  9429  0920  002C               	movlb	12	; select bank12
  9430  0921  009A               	movwf	26	;volatile
  9431  0922                     l318:
  9432  0922  0008               	return
  9433  0923                     __end_of_PWM4_LoadDutyValue:
  9434                           
  9435                           	psect	text23
  9436  0EA6                     __ptext23:	
  9437 ;; *************** function ___xxtofl *****************
  9438 ;; Defined at:
  9439 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;  sign            1    wreg     unsigned char 
  9442 ;;  val             4   16[BANK0 ] long 
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;  sign            1   24[BANK0 ] unsigned char 
  9445 ;;  arg             4   26[BANK0 ] unsigned long 
  9446 ;;  exp             1   25[BANK0 ] unsigned char 
  9447 ;; Return value:  Size  Location     Type
  9448 ;;                  4   16[BANK0 ] unsigned char 
  9449 ;; Registers used:
  9450 ;;		wreg, status,2, status,0
  9451 ;; Tracked objects:
  9452 ;;		On entry : 0/0
  9453 ;;		On exit  : 0/0
  9454 ;;		Unchanged: 0/0
  9455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9456 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9457 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;Total ram usage:       14 bytes
  9461 ;; Hardware stack levels used: 1
  9462 ;; Hardware stack levels required when called: 7
  9463 ;; This function calls:
  9464 ;;		Nothing
  9465 ;; This function is called by:
  9466 ;;		_main
  9467 ;; This function uses a non-reentrant model
  9468 ;;
  9469                           
  9470  0EA6                     ___xxtofl:	
  9471                           ;psect for function ___xxtofl
  9472                           
  9473                           
  9474                           ;incstack = 0
  9475                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9476                           ;___xxtofl@sign stored from wreg
  9477  0EA6  0020               	movlb	0	; select bank0
  9478  0EA7  00B8               	movwf	___xxtofl@sign
  9479  0EA8                     l3034:
  9480  0EA8  0838               	movf	___xxtofl@sign,w
  9481  0EA9  1903               	btfsc	3,2
  9482  0EAA  2EAC               	goto	u2881
  9483  0EAB  2EAD               	goto	u2880
  9484  0EAC                     u2881:
  9485  0EAC  2EC1               	goto	l3040
  9486  0EAD                     u2880:
  9487  0EAD                     l3036:
  9488  0EAD  1FB3               	btfss	___xxtofl@val+3,7
  9489  0EAE  2EB0               	goto	u2891
  9490  0EAF  2EB1               	goto	u2890
  9491  0EB0                     u2891:
  9492  0EB0  2EC1               	goto	l3040
  9493  0EB1                     u2890:
  9494  0EB1                     l3038:
  9495  0EB1  0930               	comf	___xxtofl@val,w
  9496  0EB2  00BA               	movwf	___xxtofl@arg
  9497  0EB3  0931               	comf	___xxtofl@val+1,w
  9498  0EB4  00BB               	movwf	___xxtofl@arg+1
  9499  0EB5  0932               	comf	___xxtofl@val+2,w
  9500  0EB6  00BC               	movwf	___xxtofl@arg+2
  9501  0EB7  0933               	comf	___xxtofl@val+3,w
  9502  0EB8  00BD               	movwf	___xxtofl@arg+3
  9503  0EB9  0ABA               	incf	___xxtofl@arg,f
  9504  0EBA  1903               	skipnz
  9505  0EBB  0ABB               	incf	___xxtofl@arg+1,f
  9506  0EBC  1903               	skipnz
  9507  0EBD  0ABC               	incf	___xxtofl@arg+2,f
  9508  0EBE  1903               	skipnz
  9509  0EBF  0ABD               	incf	___xxtofl@arg+3,f
  9510  0EC0  2EC9               	goto	l1097
  9511  0EC1                     l3040:
  9512  0EC1  0833               	movf	___xxtofl@val+3,w
  9513  0EC2  00BD               	movwf	___xxtofl@arg+3
  9514  0EC3  0832               	movf	___xxtofl@val+2,w
  9515  0EC4  00BC               	movwf	___xxtofl@arg+2
  9516  0EC5  0831               	movf	___xxtofl@val+1,w
  9517  0EC6  00BB               	movwf	___xxtofl@arg+1
  9518  0EC7  0830               	movf	___xxtofl@val,w
  9519  0EC8  00BA               	movwf	___xxtofl@arg
  9520  0EC9                     l1097:
  9521  0EC9  0833               	movf	___xxtofl@val+3,w
  9522  0ECA  0432               	iorwf	___xxtofl@val+2,w
  9523  0ECB  0431               	iorwf	___xxtofl@val+1,w
  9524  0ECC  0430               	iorwf	___xxtofl@val,w
  9525  0ECD  1D03               	skipz
  9526  0ECE  2ED0               	goto	u2901
  9527  0ECF  2ED1               	goto	u2900
  9528  0ED0                     u2901:
  9529  0ED0  2EDA               	goto	l3046
  9530  0ED1                     u2900:
  9531  0ED1                     l3042:
  9532  0ED1  3000               	movlw	0
  9533  0ED2  00B3               	movwf	?___xxtofl+3
  9534  0ED3  3000               	movlw	0
  9535  0ED4  00B2               	movwf	?___xxtofl+2
  9536  0ED5  3000               	movlw	0
  9537  0ED6  00B1               	movwf	?___xxtofl+1
  9538  0ED7  3000               	movlw	0
  9539  0ED8  00B0               	movwf	?___xxtofl
  9540  0ED9  2F52               	goto	l1099
  9541  0EDA                     l3046:
  9542  0EDA  3096               	movlw	150
  9543  0EDB  00B4               	movwf	??___xxtofl
  9544  0EDC  0834               	movf	??___xxtofl,w
  9545  0EDD  00B9               	movwf	___xxtofl@exp
  9546  0EDE  2EEA               	goto	l3050
  9547  0EDF                     l3048:
  9548  0EDF  3001               	movlw	1
  9549  0EE0  00B4               	movwf	??___xxtofl
  9550  0EE1  0834               	movf	??___xxtofl,w
  9551  0EE2  07B9               	addwf	___xxtofl@exp,f
  9552  0EE3  3001               	movlw	1
  9553  0EE4                     u2915:
  9554  0EE4  36BD               	lsrf	___xxtofl@arg+3,f
  9555  0EE5  0CBC               	rrf	___xxtofl@arg+2,f
  9556  0EE6  0CBB               	rrf	___xxtofl@arg+1,f
  9557  0EE7  0CBA               	rrf	___xxtofl@arg,f
  9558  0EE8  0B89               	decfsz	9,f
  9559  0EE9  2EE4               	goto	u2915
  9560  0EEA                     l3050:
  9561  0EEA  30FE               	movlw	254
  9562  0EEB  053D               	andwf	___xxtofl@arg+3,w
  9563  0EEC  1D03               	btfss	3,2
  9564  0EED  2EEF               	goto	u2921
  9565  0EEE  2EF0               	goto	u2920
  9566  0EEF                     u2921:
  9567  0EEF  2EDF               	goto	l3048
  9568  0EF0                     u2920:
  9569  0EF0  2F04               	goto	l1103
  9570  0EF1                     l3052:
  9571  0EF1  3001               	movlw	1
  9572  0EF2  00B4               	movwf	??___xxtofl
  9573  0EF3  0834               	movf	??___xxtofl,w
  9574  0EF4  07B9               	addwf	___xxtofl@exp,f
  9575  0EF5                     l3054:
  9576  0EF5  3001               	movlw	1
  9577  0EF6  07BA               	addwf	___xxtofl@arg,f
  9578  0EF7  3000               	movlw	0
  9579  0EF8  3DBB               	addwfc	___xxtofl@arg+1,f
  9580  0EF9  3000               	movlw	0
  9581  0EFA  3DBC               	addwfc	___xxtofl@arg+2,f
  9582  0EFB  3000               	movlw	0
  9583  0EFC  3DBD               	addwfc	___xxtofl@arg+3,f
  9584  0EFD                     l3056:
  9585  0EFD  3001               	movlw	1
  9586  0EFE                     u2935:
  9587  0EFE  36BD               	lsrf	___xxtofl@arg+3,f
  9588  0EFF  0CBC               	rrf	___xxtofl@arg+2,f
  9589  0F00  0CBB               	rrf	___xxtofl@arg+1,f
  9590  0F01  0CBA               	rrf	___xxtofl@arg,f
  9591  0F02  0B89               	decfsz	9,f
  9592  0F03  2EFE               	goto	u2935
  9593  0F04                     l1103:
  9594  0F04  30FF               	movlw	255
  9595  0F05  053D               	andwf	___xxtofl@arg+3,w
  9596  0F06  1D03               	btfss	3,2
  9597  0F07  2F09               	goto	u2941
  9598  0F08  2F0A               	goto	u2940
  9599  0F09                     u2941:
  9600  0F09  2EF1               	goto	l3052
  9601  0F0A                     u2940:
  9602  0F0A  2F14               	goto	l3060
  9603  0F0B                     l3058:
  9604  0F0B  3001               	movlw	1
  9605  0F0C  02B9               	subwf	___xxtofl@exp,f
  9606  0F0D  3001               	movlw	1
  9607  0F0E                     u2955:
  9608  0F0E  35BA               	lslf	___xxtofl@arg,f
  9609  0F0F  0DBB               	rlf	___xxtofl@arg+1,f
  9610  0F10  0DBC               	rlf	___xxtofl@arg+2,f
  9611  0F11  0DBD               	rlf	___xxtofl@arg+3,f
  9612  0F12  0B89               	decfsz	9,f
  9613  0F13  2F0E               	goto	u2955
  9614  0F14                     l3060:
  9615  0F14  1BBC               	btfsc	___xxtofl@arg+2,7
  9616  0F15  2F17               	goto	u2961
  9617  0F16  2F18               	goto	u2960
  9618  0F17                     u2961:
  9619  0F17  2F1E               	goto	l1110
  9620  0F18                     u2960:
  9621  0F18                     l3062:
  9622  0F18  3002               	movlw	2
  9623  0F19  0239               	subwf	___xxtofl@exp,w
  9624  0F1A  1803               	skipnc
  9625  0F1B  2F1D               	goto	u2971
  9626  0F1C  2F1E               	goto	u2970
  9627  0F1D                     u2971:
  9628  0F1D  2F0B               	goto	l3058
  9629  0F1E                     u2970:
  9630  0F1E                     l1110:
  9631  0F1E  1839               	btfsc	___xxtofl@exp,0
  9632  0F1F  2F21               	goto	u2981
  9633  0F20  2F22               	goto	u2980
  9634  0F21                     u2981:
  9635  0F21  2F2A               	goto	l1111
  9636  0F22                     u2980:
  9637  0F22                     l3064:
  9638  0F22  30FF               	movlw	255
  9639  0F23  05BA               	andwf	___xxtofl@arg,f
  9640  0F24  30FF               	movlw	255
  9641  0F25  05BB               	andwf	___xxtofl@arg+1,f
  9642  0F26  307F               	movlw	127
  9643  0F27  05BC               	andwf	___xxtofl@arg+2,f
  9644  0F28  30FF               	movlw	255
  9645  0F29  05BD               	andwf	___xxtofl@arg+3,f
  9646  0F2A                     l1111:
  9647  0F2A  1003               	clrc
  9648  0F2B  0CB9               	rrf	___xxtofl@exp,f
  9649  0F2C                     l3066:
  9650  0F2C  0839               	movf	___xxtofl@exp,w
  9651  0F2D  00B4               	movwf	??___xxtofl
  9652  0F2E  01B5               	clrf	??___xxtofl+1
  9653  0F2F  01B6               	clrf	??___xxtofl+2
  9654  0F30  01B7               	clrf	??___xxtofl+3
  9655  0F31  3018               	movlw	24
  9656  0F32                     u2995:
  9657  0F32  35B4               	lslf	??___xxtofl,f
  9658  0F33  0DB5               	rlf	??___xxtofl+1,f
  9659  0F34  0DB6               	rlf	??___xxtofl+2,f
  9660  0F35  0DB7               	rlf	??___xxtofl+3,f
  9661  0F36                     u2990:
  9662  0F36  0B89               	decfsz	9,f
  9663  0F37  2F32               	goto	u2995
  9664  0F38  0834               	movf	??___xxtofl,w
  9665  0F39  04BA               	iorwf	___xxtofl@arg,f
  9666  0F3A  0835               	movf	??___xxtofl+1,w
  9667  0F3B  04BB               	iorwf	___xxtofl@arg+1,f
  9668  0F3C  0836               	movf	??___xxtofl+2,w
  9669  0F3D  04BC               	iorwf	___xxtofl@arg+2,f
  9670  0F3E  0837               	movf	??___xxtofl+3,w
  9671  0F3F  04BD               	iorwf	___xxtofl@arg+3,f
  9672  0F40                     l3068:
  9673  0F40  0838               	movf	___xxtofl@sign,w
  9674  0F41  1903               	btfsc	3,2
  9675  0F42  2F44               	goto	u3001
  9676  0F43  2F45               	goto	u3000
  9677  0F44                     u3001:
  9678  0F44  2F4A               	goto	l3074
  9679  0F45                     u3000:
  9680  0F45                     l3070:
  9681  0F45  1FB3               	btfss	___xxtofl@val+3,7
  9682  0F46  2F48               	goto	u3011
  9683  0F47  2F49               	goto	u3010
  9684  0F48                     u3011:
  9685  0F48  2F4A               	goto	l3074
  9686  0F49                     u3010:
  9687  0F49                     l3072:
  9688  0F49  17BD               	bsf	___xxtofl@arg+3,7
  9689  0F4A                     l3074:
  9690  0F4A  083D               	movf	___xxtofl@arg+3,w
  9691  0F4B  00B3               	movwf	?___xxtofl+3
  9692  0F4C  083C               	movf	___xxtofl@arg+2,w
  9693  0F4D  00B2               	movwf	?___xxtofl+2
  9694  0F4E  083B               	movf	___xxtofl@arg+1,w
  9695  0F4F  00B1               	movwf	?___xxtofl+1
  9696  0F50  083A               	movf	___xxtofl@arg,w
  9697  0F51  00B0               	movwf	?___xxtofl
  9698  0F52                     l1099:
  9699  0F52  0008               	return
  9700  0F53                     __end_of___xxtofl:
  9701                           
  9702                           	psect	text24
  9703  0E31                     __ptext24:	
  9704 ;; *************** function ___fltol *****************
  9705 ;; Defined at:
  9706 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  9707 ;; Parameters:    Size  Location     Type
  9708 ;;  f1              4   34[BANK1 ] unsigned char 
  9709 ;; Auto vars:     Size  Location     Type
  9710 ;;  exp1            1   44[BANK1 ] unsigned char 
  9711 ;;  sign1           1   43[BANK1 ] unsigned char 
  9712 ;; Return value:  Size  Location     Type
  9713 ;;                  4   34[BANK1 ] long 
  9714 ;; Registers used:
  9715 ;;		wreg, status,2, status,0
  9716 ;; Tracked objects:
  9717 ;;		On entry : 0/0
  9718 ;;		On exit  : 0/0
  9719 ;;		Unchanged: 0/0
  9720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9721 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  9722 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  9723 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0
  9724 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  9725 ;;Total ram usage:       11 bytes
  9726 ;; Hardware stack levels used: 1
  9727 ;; Hardware stack levels required when called: 7
  9728 ;; This function calls:
  9729 ;;		Nothing
  9730 ;; This function is called by:
  9731 ;;		_main
  9732 ;; This function uses a non-reentrant model
  9733 ;;
  9734                           
  9735  0E31                     ___fltol:	
  9736                           ;psect for function ___fltol
  9737                           
  9738  0E31                     l2718:	
  9739                           ;incstack = 0
  9740                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  9741                           
  9742  0E31  1003               	clrc
  9743  0E32  0021               	movlb	1	; select bank1
  9744  0E33  0D44               	rlf	(___fltol@f1+2)^(0+128),w
  9745  0E34  0D45               	rlf	(___fltol@f1+3)^(0+128),w
  9746  0E35  00C6               	movwf	??___fltol^(0+128)
  9747  0E36  0846               	movf	??___fltol^(0+128),w
  9748  0E37  00CC               	movwf	___fltol@exp1^(0+128)
  9749  0E38  084C               	movf	___fltol@exp1^(0+128),w
  9750  0E39  1D03               	btfss	3,2
  9751  0E3A  2E3C               	goto	u2231
  9752  0E3B  2E3D               	goto	u2230
  9753  0E3C                     u2231:
  9754  0E3C  2E46               	goto	l2724
  9755  0E3D                     u2230:
  9756  0E3D                     l2720:
  9757  0E3D  3000               	movlw	0
  9758  0E3E  00C5               	movwf	(?___fltol+3)^(0+128)
  9759  0E3F  3000               	movlw	0
  9760  0E40  00C4               	movwf	(?___fltol+2)^(0+128)
  9761  0E41  3000               	movlw	0
  9762  0E42  00C3               	movwf	(?___fltol+1)^(0+128)
  9763  0E43  3000               	movlw	0
  9764  0E44  00C2               	movwf	?___fltol^(0+128)
  9765  0E45  2EA5               	goto	l850
  9766  0E46                     l2724:
  9767  0E46  0842               	movf	___fltol@f1^(0+128),w
  9768  0E47  00C6               	movwf	??___fltol^(0+128)
  9769  0E48  0843               	movf	(___fltol@f1+1)^(0+128),w
  9770  0E49  00C7               	movwf	(??___fltol^(0+128)+1)
  9771  0E4A  0844               	movf	(___fltol@f1+2)^(0+128),w
  9772  0E4B  00C8               	movwf	(??___fltol^(0+128)+2)
  9773  0E4C  0845               	movf	(___fltol@f1+3)^(0+128),w
  9774  0E4D  00C9               	movwf	(??___fltol^(0+128)+3)
  9775  0E4E  301F               	movlw	31
  9776  0E4F                     u2245:
  9777  0E4F  36C9               	lsrf	(??___fltol^(0+128)+3),f
  9778  0E50  0CC8               	rrf	(??___fltol^(0+128)+2),f
  9779  0E51  0CC7               	rrf	(??___fltol^(0+128)+1),f
  9780  0E52  0CC6               	rrf	??___fltol^(0+128),f
  9781  0E53                     u2240:
  9782  0E53  0B89               	decfsz	9,f
  9783  0E54  2E4F               	goto	u2245
  9784  0E55  0846               	movf	??___fltol^(0+128),w
  9785  0E56  00CA               	movwf	(??___fltol+4)^(0+128)
  9786  0E57  084A               	movf	(??___fltol+4)^(0+128),w
  9787  0E58  00CB               	movwf	___fltol@sign1^(0+128)
  9788  0E59                     l2726:
  9789  0E59  17C4               	bsf	(___fltol@f1^(0+128)+2),7
  9790  0E5A                     l2728:
  9791  0E5A  30FF               	movlw	255
  9792  0E5B  05C2               	andwf	___fltol@f1^(0+128),f
  9793  0E5C  30FF               	movlw	255
  9794  0E5D  05C3               	andwf	(___fltol@f1+1)^(0+128),f
  9795  0E5E  30FF               	movlw	255
  9796  0E5F  05C4               	andwf	(___fltol@f1+2)^(0+128),f
  9797  0E60  3000               	movlw	0
  9798  0E61  05C5               	andwf	(___fltol@f1+3)^(0+128),f
  9799  0E62                     l2730:
  9800  0E62  3096               	movlw	150
  9801  0E63  02CC               	subwf	___fltol@exp1^(0+128),f
  9802  0E64                     l2732:
  9803  0E64  1FCC               	btfss	___fltol@exp1^(0+128),7
  9804  0E65  2E67               	goto	u2251
  9805  0E66  2E68               	goto	u2250
  9806  0E67                     u2251:
  9807  0E67  2E80               	goto	l2742
  9808  0E68                     u2250:
  9809  0E68                     l2734:
  9810  0E68  084C               	movf	___fltol@exp1^(0+128),w
  9811  0E69  3A80               	xorlw	128
  9812  0E6A  3E97               	addlw	151
  9813  0E6B  1803               	skipnc
  9814  0E6C  2E6E               	goto	u2261
  9815  0E6D  2E6F               	goto	u2260
  9816  0E6E                     u2261:
  9817  0E6E  2E70               	goto	l2740
  9818  0E6F                     u2260:
  9819  0E6F  2E3D               	goto	l2720
  9820  0E70                     l2740:
  9821  0E70  3001               	movlw	1
  9822  0E71                     u2275:
  9823  0E71  36C5               	lsrf	(___fltol@f1+3)^(0+128),f
  9824  0E72  0CC4               	rrf	(___fltol@f1+2)^(0+128),f
  9825  0E73  0CC3               	rrf	(___fltol@f1+1)^(0+128),f
  9826  0E74  0CC2               	rrf	___fltol@f1^(0+128),f
  9827  0E75  0B89               	decfsz	9,f
  9828  0E76  2E71               	goto	u2275
  9829  0E77  3001               	movlw	1
  9830  0E78  00C6               	movwf	??___fltol^(0+128)
  9831  0E79  0846               	movf	??___fltol^(0+128),w
  9832  0E7A  07CC               	addwf	___fltol@exp1^(0+128),f
  9833  0E7B  1D03               	btfss	3,2
  9834  0E7C  2E7E               	goto	u2281
  9835  0E7D  2E7F               	goto	u2280
  9836  0E7E                     u2281:
  9837  0E7E  2E70               	goto	l2740
  9838  0E7F                     u2280:
  9839  0E7F  2E95               	goto	l2750
  9840  0E80                     l2742:
  9841  0E80  3020               	movlw	32
  9842  0E81  024C               	subwf	___fltol@exp1^(0+128),w
  9843  0E82  1C03               	skipc
  9844  0E83  2E85               	goto	u2291
  9845  0E84  2E86               	goto	u2290
  9846  0E85                     u2291:
  9847  0E85  2E90               	goto	l857
  9848  0E86                     u2290:
  9849  0E86  2E3D               	goto	l2720
  9850  0E87                     l2748:
  9851  0E87  3001               	movlw	1
  9852  0E88                     u2305:
  9853  0E88  35C2               	lslf	___fltol@f1^(0+128),f
  9854  0E89  0DC3               	rlf	(___fltol@f1+1)^(0+128),f
  9855  0E8A  0DC4               	rlf	(___fltol@f1+2)^(0+128),f
  9856  0E8B  0DC5               	rlf	(___fltol@f1+3)^(0+128),f
  9857  0E8C  0B89               	decfsz	9,f
  9858  0E8D  2E88               	goto	u2305
  9859  0E8E  3001               	movlw	1
  9860  0E8F  02CC               	subwf	___fltol@exp1^(0+128),f
  9861  0E90                     l857:
  9862  0E90  084C               	movf	___fltol@exp1^(0+128),w
  9863  0E91  1D03               	btfss	3,2
  9864  0E92  2E94               	goto	u2311
  9865  0E93  2E95               	goto	u2310
  9866  0E94                     u2311:
  9867  0E94  2E87               	goto	l2748
  9868  0E95                     u2310:
  9869  0E95                     l2750:
  9870  0E95  084B               	movf	___fltol@sign1^(0+128),w
  9871  0E96  1903               	btfsc	3,2
  9872  0E97  2E99               	goto	u2321
  9873  0E98  2E9A               	goto	u2320
  9874  0E99                     u2321:
  9875  0E99  2EA5               	goto	l860
  9876  0E9A                     u2320:
  9877  0E9A                     l2752:
  9878  0E9A  09C2               	comf	___fltol@f1^(0+128),f
  9879  0E9B  09C3               	comf	(___fltol@f1+1)^(0+128),f
  9880  0E9C  09C4               	comf	(___fltol@f1+2)^(0+128),f
  9881  0E9D  09C5               	comf	(___fltol@f1+3)^(0+128),f
  9882  0E9E  0AC2               	incf	___fltol@f1^(0+128),f
  9883  0E9F  1903               	skipnz
  9884  0EA0  0AC3               	incf	(___fltol@f1+1)^(0+128),f
  9885  0EA1  1903               	skipnz
  9886  0EA2  0AC4               	incf	(___fltol@f1+2)^(0+128),f
  9887  0EA3  1903               	skipnz
  9888  0EA4  0AC5               	incf	(___fltol@f1+3)^(0+128),f
  9889  0EA5                     l860:
  9890  0EA5                     l850:
  9891  0EA5  0008               	return
  9892  0EA6                     __end_of___fltol:
  9893                           
  9894                           	psect	text25
  9895  003B                     __ptext25:	
  9896 ;; *************** function ___flmul *****************
  9897 ;; Defined at:
  9898 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  9899 ;; Parameters:    Size  Location     Type
  9900 ;;  b               4   30[BANK0 ] long 
  9901 ;;  a               4   34[BANK0 ] long 
  9902 ;; Auto vars:     Size  Location     Type
  9903 ;;  prod            4    7[BANK1 ] struct .
  9904 ;;  grs             4    2[BANK1 ] unsigned long 
  9905 ;;  temp            2   11[BANK1 ] struct .
  9906 ;;  bexp            1    6[BANK1 ] unsigned char 
  9907 ;;  aexp            1    1[BANK1 ] unsigned char 
  9908 ;;  sign            1    0[BANK1 ] unsigned char 
  9909 ;; Return value:  Size  Location     Type
  9910 ;;                  4   30[BANK0 ] unsigned char 
  9911 ;; Registers used:
  9912 ;;		wreg, status,2, status,0, pclath, cstack
  9913 ;; Tracked objects:
  9914 ;;		On entry : 0/0
  9915 ;;		On exit  : 0/0
  9916 ;;		Unchanged: 0/0
  9917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9918 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9919 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  9920 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9921 ;;      Totals:         0      13      13       0       0       0       0       0       0       0       0       0       
      +0       0
  9922 ;;Total ram usage:       26 bytes
  9923 ;; Hardware stack levels used: 1
  9924 ;; Hardware stack levels required when called: 8
  9925 ;; This function calls:
  9926 ;;		__Umul8_16
  9927 ;; This function is called by:
  9928 ;;		_main
  9929 ;; This function uses a non-reentrant model
  9930 ;;
  9931                           
  9932  003B                     ___flmul:	
  9933                           ;psect for function ___flmul
  9934                           
  9935  003B                     l3384:	
  9936                           ;incstack = 0
  9937                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  9938                           
  9939  003B  0020               	movlb	0	; select bank0
  9940  003C  0841               	movf	___flmul@b+3,w
  9941  003D  3980               	andlw	128
  9942  003E  00C6               	movwf	??___flmul
  9943  003F  0846               	movf	??___flmul,w
  9944  0040  0021               	movlb	1	; select bank1
  9945  0041  00A0               	movwf	___flmul@sign^(0+128)
  9946  0042                     l3386:
  9947  0042  0020               	movlb	0	; select bank0
  9948  0043  3541               	lslf	___flmul@b+3,w
  9949  0044  00C6               	movwf	??___flmul
  9950  0045  0846               	movf	??___flmul,w
  9951  0046  0021               	movlb	1	; select bank1
  9952  0047  00A6               	movwf	___flmul@bexp^(0+128)
  9953  0048                     l3388:
  9954  0048  0020               	movlb	0	; select bank0
  9955  0049  1FC0               	btfss	___flmul@b+2,7
  9956  004A  284C               	goto	u3631
  9957  004B  284D               	goto	u3630
  9958  004C                     u3631:
  9959  004C  284F               	goto	l3392
  9960  004D                     u3630:
  9961  004D                     l3390:
  9962  004D  0021               	movlb	1	; select bank1
  9963  004E  1426               	bsf	___flmul@bexp^(0+128),0
  9964  004F                     l3392:
  9965  004F  0021               	movlb	1	; select bank1
  9966  0050  0826               	movf	___flmul@bexp^(0+128),w
  9967  0051  1903               	btfsc	3,2
  9968  0052  2854               	goto	u3641
  9969  0053  2855               	goto	u3640
  9970  0054                     u3641:
  9971  0054  2866               	goto	l3400
  9972  0055                     u3640:
  9973  0055                     l3394:
  9974  0055  0A26               	incf	___flmul@bexp^(0+128),w
  9975  0056  1D03               	btfss	3,2
  9976  0057  2859               	goto	u3651
  9977  0058  285A               	goto	u3650
  9978  0059                     u3651:
  9979  0059  2863               	goto	l3398
  9980  005A                     u3650:
  9981  005A                     l3396:
  9982  005A  3000               	movlw	0
  9983  005B  0020               	movlb	0	; select bank0
  9984  005C  00C1               	movwf	___flmul@b+3
  9985  005D  3000               	movlw	0
  9986  005E  00C0               	movwf	___flmul@b+2
  9987  005F  3000               	movlw	0
  9988  0060  00BF               	movwf	___flmul@b+1
  9989  0061  3000               	movlw	0
  9990  0062  00BE               	movwf	___flmul@b
  9991  0063                     l3398:
  9992  0063  0020               	movlb	0	; select bank0
  9993  0064  17C0               	bsf	___flmul@b+2,7
  9994  0065  286F               	goto	l3402
  9995  0066                     l3400:
  9996  0066  3000               	movlw	0
  9997  0067  0020               	movlb	0	; select bank0
  9998  0068  00C1               	movwf	___flmul@b+3
  9999  0069  3000               	movlw	0
 10000  006A  00C0               	movwf	___flmul@b+2
 10001  006B  3000               	movlw	0
 10002  006C  00BF               	movwf	___flmul@b+1
 10003  006D  3000               	movlw	0
 10004  006E  00BE               	movwf	___flmul@b
 10005  006F                     l3402:
 10006  006F  0845               	movf	___flmul@a+3,w
 10007  0070  3980               	andlw	128
 10008  0071  00C6               	movwf	??___flmul
 10009  0072  0846               	movf	??___flmul,w
 10010  0073  0021               	movlb	1	; select bank1
 10011  0074  06A0               	xorwf	___flmul@sign^(0+128),f
 10012  0075                     l3404:
 10013  0075  0020               	movlb	0	; select bank0
 10014  0076  3545               	lslf	___flmul@a+3,w
 10015  0077  00C6               	movwf	??___flmul
 10016  0078  0846               	movf	??___flmul,w
 10017  0079  0021               	movlb	1	; select bank1
 10018  007A  00A1               	movwf	___flmul@aexp^(0+128)
 10019  007B                     l3406:
 10020  007B  0020               	movlb	0	; select bank0
 10021  007C  1FC4               	btfss	___flmul@a+2,7
 10022  007D  287F               	goto	u3661
 10023  007E  2880               	goto	u3660
 10024  007F                     u3661:
 10025  007F  2882               	goto	l3410
 10026  0080                     u3660:
 10027  0080                     l3408:
 10028  0080  0021               	movlb	1	; select bank1
 10029  0081  1421               	bsf	___flmul@aexp^(0+128),0
 10030  0082                     l3410:
 10031  0082  0021               	movlb	1	; select bank1
 10032  0083  0821               	movf	___flmul@aexp^(0+128),w
 10033  0084  1903               	btfsc	3,2
 10034  0085  2887               	goto	u3671
 10035  0086  2888               	goto	u3670
 10036  0087                     u3671:
 10037  0087  2899               	goto	l3418
 10038  0088                     u3670:
 10039  0088                     l3412:
 10040  0088  0A21               	incf	___flmul@aexp^(0+128),w
 10041  0089  1D03               	btfss	3,2
 10042  008A  288C               	goto	u3681
 10043  008B  288D               	goto	u3680
 10044  008C                     u3681:
 10045  008C  2896               	goto	l3416
 10046  008D                     u3680:
 10047  008D                     l3414:
 10048  008D  3000               	movlw	0
 10049  008E  0020               	movlb	0	; select bank0
 10050  008F  00C5               	movwf	___flmul@a+3
 10051  0090  3000               	movlw	0
 10052  0091  00C4               	movwf	___flmul@a+2
 10053  0092  3000               	movlw	0
 10054  0093  00C3               	movwf	___flmul@a+1
 10055  0094  3000               	movlw	0
 10056  0095  00C2               	movwf	___flmul@a
 10057  0096                     l3416:
 10058  0096  0020               	movlb	0	; select bank0
 10059  0097  17C4               	bsf	___flmul@a+2,7
 10060  0098  28A2               	goto	l3420
 10061  0099                     l3418:
 10062  0099  3000               	movlw	0
 10063  009A  0020               	movlb	0	; select bank0
 10064  009B  00C5               	movwf	___flmul@a+3
 10065  009C  3000               	movlw	0
 10066  009D  00C4               	movwf	___flmul@a+2
 10067  009E  3000               	movlw	0
 10068  009F  00C3               	movwf	___flmul@a+1
 10069  00A0  3000               	movlw	0
 10070  00A1  00C2               	movwf	___flmul@a
 10071  00A2                     l3420:
 10072  00A2  0021               	movlb	1	; select bank1
 10073  00A3  0821               	movf	___flmul@aexp^(0+128),w
 10074  00A4  1903               	btfsc	3,2
 10075  00A5  28A7               	goto	u3691
 10076  00A6  28A8               	goto	u3690
 10077  00A7                     u3691:
 10078  00A7  28AD               	goto	l3424
 10079  00A8                     u3690:
 10080  00A8                     l3422:
 10081  00A8  0826               	movf	___flmul@bexp^(0+128),w
 10082  00A9  1D03               	btfss	3,2
 10083  00AA  28AC               	goto	u3701
 10084  00AB  28AD               	goto	u3700
 10085  00AC                     u3701:
 10086  00AC  28B7               	goto	l3428
 10087  00AD                     u3700:
 10088  00AD                     l3424:
 10089  00AD  3000               	movlw	0
 10090  00AE  0020               	movlb	0	; select bank0
 10091  00AF  00C1               	movwf	?___flmul+3
 10092  00B0  3000               	movlw	0
 10093  00B1  00C0               	movwf	?___flmul+2
 10094  00B2  3000               	movlw	0
 10095  00B3  00BF               	movwf	?___flmul+1
 10096  00B4  3000               	movlw	0
 10097  00B5  00BE               	movwf	?___flmul
 10098  00B6  2B3D               	goto	l1053
 10099  00B7                     l3428:
 10100  00B7  0020               	movlb	0	; select bank0
 10101  00B8  083E               	movf	___flmul@b,w
 10102  00B9  00C6               	movwf	??___flmul
 10103  00BA  0846               	movf	??___flmul,w
 10104  00BB  00B0               	movwf	__Umul8_16@multiplicand
 10105  00BC  0844               	movf	___flmul@a+2,w
 10106  00BD  3189  21B6  3180   	fcall	__Umul8_16
 10107  00C0  0020               	movlb	0	; select bank0
 10108  00C1  0831               	movf	?__Umul8_16+1,w
 10109  00C2  0021               	movlb	1	; select bank1
 10110  00C3  00AC               	movwf	(___flmul@temp+1)^(0+128)
 10111  00C4  0020               	movlb	0	; select bank0
 10112  00C5  0830               	movf	?__Umul8_16,w
 10113  00C6  0021               	movlb	1	; select bank1
 10114  00C7  00AB               	movwf	___flmul@temp^(0+128)
 10115  00C8                     l3430:
 10116  00C8  082B               	movf	___flmul@temp^(0+128),w
 10117  00C9  0020               	movlb	0	; select bank0
 10118  00CA  00C6               	movwf	??___flmul
 10119  00CB  01C7               	clrf	??___flmul+1
 10120  00CC  01C8               	clrf	??___flmul+2
 10121  00CD  01C9               	clrf	??___flmul+3
 10122  00CE  0849               	movf	??___flmul+3,w
 10123  00CF  0021               	movlb	1	; select bank1
 10124  00D0  00A5               	movwf	(___flmul@grs+3)^(0+128)
 10125  00D1  0020               	movlb	0	; select bank0
 10126  00D2  0848               	movf	??___flmul+2,w
 10127  00D3  0021               	movlb	1	; select bank1
 10128  00D4  00A4               	movwf	(___flmul@grs+2)^(0+128)
 10129  00D5  0020               	movlb	0	; select bank0
 10130  00D6  0847               	movf	??___flmul+1,w
 10131  00D7  0021               	movlb	1	; select bank1
 10132  00D8  00A3               	movwf	(___flmul@grs+1)^(0+128)
 10133  00D9  0020               	movlb	0	; select bank0
 10134  00DA  0846               	movf	??___flmul,w
 10135  00DB  0021               	movlb	1	; select bank1
 10136  00DC  00A2               	movwf	___flmul@grs^(0+128)
 10137  00DD                     l3432:
 10138  00DD  082C               	movf	(___flmul@temp^(0+128)+1),w
 10139  00DE  0020               	movlb	0	; select bank0
 10140  00DF  00C6               	movwf	??___flmul
 10141  00E0  01C7               	clrf	??___flmul+1
 10142  00E1  01C8               	clrf	??___flmul+2
 10143  00E2  01C9               	clrf	??___flmul+3
 10144  00E3  0849               	movf	??___flmul+3,w
 10145  00E4  0021               	movlb	1	; select bank1
 10146  00E5  00AA               	movwf	(___flmul@prod+3)^(0+128)
 10147  00E6  0020               	movlb	0	; select bank0
 10148  00E7  0848               	movf	??___flmul+2,w
 10149  00E8  0021               	movlb	1	; select bank1
 10150  00E9  00A9               	movwf	(___flmul@prod+2)^(0+128)
 10151  00EA  0020               	movlb	0	; select bank0
 10152  00EB  0847               	movf	??___flmul+1,w
 10153  00EC  0021               	movlb	1	; select bank1
 10154  00ED  00A8               	movwf	(___flmul@prod+1)^(0+128)
 10155  00EE  0020               	movlb	0	; select bank0
 10156  00EF  0846               	movf	??___flmul,w
 10157  00F0  0021               	movlb	1	; select bank1
 10158  00F1  00A7               	movwf	___flmul@prod^(0+128)
 10159  00F2  0020               	movlb	0	; select bank0
 10160  00F3  083F               	movf	___flmul@b+1,w
 10161  00F4  00C6               	movwf	??___flmul
 10162  00F5  0846               	movf	??___flmul,w
 10163  00F6  00B0               	movwf	__Umul8_16@multiplicand
 10164  00F7  0843               	movf	___flmul@a+1,w
 10165  00F8  3189  21B6  3180   	fcall	__Umul8_16
 10166  00FB  0020               	movlb	0	; select bank0
 10167  00FC  0831               	movf	?__Umul8_16+1,w
 10168  00FD  0021               	movlb	1	; select bank1
 10169  00FE  00AC               	movwf	(___flmul@temp+1)^(0+128)
 10170  00FF  0020               	movlb	0	; select bank0
 10171  0100  0830               	movf	?__Umul8_16,w
 10172  0101  0021               	movlb	1	; select bank1
 10173  0102  00AB               	movwf	___flmul@temp^(0+128)
 10174  0103                     l3434:
 10175  0103  082B               	movf	___flmul@temp^(0+128),w
 10176  0104  0020               	movlb	0	; select bank0
 10177  0105  00C6               	movwf	??___flmul
 10178  0106  01C7               	clrf	??___flmul+1
 10179  0107  01C8               	clrf	??___flmul+2
 10180  0108  01C9               	clrf	??___flmul+3
 10181  0109  0846               	movf	??___flmul,w
 10182  010A  0021               	movlb	1	; select bank1
 10183  010B  07A2               	addwf	___flmul@grs^(0+128),f
 10184  010C  0020               	movlb	0	; select bank0
 10185  010D  0847               	movf	??___flmul+1,w
 10186  010E  0021               	movlb	1	; select bank1
 10187  010F  3DA3               	addwfc	(___flmul@grs+1)^(0+128),f
 10188  0110  0020               	movlb	0	; select bank0
 10189  0111  0848               	movf	??___flmul+2,w
 10190  0112  0021               	movlb	1	; select bank1
 10191  0113  3DA4               	addwfc	(___flmul@grs+2)^(0+128),f
 10192  0114  0020               	movlb	0	; select bank0
 10193  0115  0849               	movf	??___flmul+3,w
 10194  0116  0021               	movlb	1	; select bank1
 10195  0117  3DA5               	addwfc	(___flmul@grs+3)^(0+128),f
 10196  0118                     l3436:
 10197  0118  082C               	movf	(___flmul@temp^(0+128)+1),w
 10198  0119  0020               	movlb	0	; select bank0
 10199  011A  00C6               	movwf	??___flmul
 10200  011B  01C7               	clrf	??___flmul+1
 10201  011C  01C8               	clrf	??___flmul+2
 10202  011D  01C9               	clrf	??___flmul+3
 10203  011E  0846               	movf	??___flmul,w
 10204  011F  0021               	movlb	1	; select bank1
 10205  0120  07A7               	addwf	___flmul@prod^(0+128),f
 10206  0121  0020               	movlb	0	; select bank0
 10207  0122  0847               	movf	??___flmul+1,w
 10208  0123  0021               	movlb	1	; select bank1
 10209  0124  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
 10210  0125  0020               	movlb	0	; select bank0
 10211  0126  0848               	movf	??___flmul+2,w
 10212  0127  0021               	movlb	1	; select bank1
 10213  0128  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
 10214  0129  0020               	movlb	0	; select bank0
 10215  012A  0849               	movf	??___flmul+3,w
 10216  012B  0021               	movlb	1	; select bank1
 10217  012C  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
 10218  012D  0020               	movlb	0	; select bank0
 10219  012E  0840               	movf	___flmul@b+2,w
 10220  012F  00C6               	movwf	??___flmul
 10221  0130  0846               	movf	??___flmul,w
 10222  0131  00B0               	movwf	__Umul8_16@multiplicand
 10223  0132  0842               	movf	___flmul@a,w
 10224  0133  3189  21B6  3180   	fcall	__Umul8_16
 10225  0136  0020               	movlb	0	; select bank0
 10226  0137  0831               	movf	?__Umul8_16+1,w
 10227  0138  0021               	movlb	1	; select bank1
 10228  0139  00AC               	movwf	(___flmul@temp+1)^(0+128)
 10229  013A  0020               	movlb	0	; select bank0
 10230  013B  0830               	movf	?__Umul8_16,w
 10231  013C  0021               	movlb	1	; select bank1
 10232  013D  00AB               	movwf	___flmul@temp^(0+128)
 10233  013E                     l3438:
 10234  013E  082B               	movf	___flmul@temp^(0+128),w
 10235  013F  0020               	movlb	0	; select bank0
 10236  0140  00C6               	movwf	??___flmul
 10237  0141  01C7               	clrf	??___flmul+1
 10238  0142  01C8               	clrf	??___flmul+2
 10239  0143  01C9               	clrf	??___flmul+3
 10240  0144  0846               	movf	??___flmul,w
 10241  0145  0021               	movlb	1	; select bank1
 10242  0146  07A2               	addwf	___flmul@grs^(0+128),f
 10243  0147  0020               	movlb	0	; select bank0
 10244  0148  0847               	movf	??___flmul+1,w
 10245  0149  0021               	movlb	1	; select bank1
 10246  014A  3DA3               	addwfc	(___flmul@grs+1)^(0+128),f
 10247  014B  0020               	movlb	0	; select bank0
 10248  014C  0848               	movf	??___flmul+2,w
 10249  014D  0021               	movlb	1	; select bank1
 10250  014E  3DA4               	addwfc	(___flmul@grs+2)^(0+128),f
 10251  014F  0020               	movlb	0	; select bank0
 10252  0150  0849               	movf	??___flmul+3,w
 10253  0151  0021               	movlb	1	; select bank1
 10254  0152  3DA5               	addwfc	(___flmul@grs+3)^(0+128),f
 10255  0153                     l3440:
 10256  0153  082C               	movf	(___flmul@temp^(0+128)+1),w
 10257  0154  0020               	movlb	0	; select bank0
 10258  0155  00C6               	movwf	??___flmul
 10259  0156  01C7               	clrf	??___flmul+1
 10260  0157  01C8               	clrf	??___flmul+2
 10261  0158  01C9               	clrf	??___flmul+3
 10262  0159  0846               	movf	??___flmul,w
 10263  015A  0021               	movlb	1	; select bank1
 10264  015B  07A7               	addwf	___flmul@prod^(0+128),f
 10265  015C  0020               	movlb	0	; select bank0
 10266  015D  0847               	movf	??___flmul+1,w
 10267  015E  0021               	movlb	1	; select bank1
 10268  015F  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
 10269  0160  0020               	movlb	0	; select bank0
 10270  0161  0848               	movf	??___flmul+2,w
 10271  0162  0021               	movlb	1	; select bank1
 10272  0163  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
 10273  0164  0020               	movlb	0	; select bank0
 10274  0165  0849               	movf	??___flmul+3,w
 10275  0166  0021               	movlb	1	; select bank1
 10276  0167  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
 10277  0168                     l3442:
 10278  0168  3008               	movlw	8
 10279  0169                     u3715:
 10280  0169  35A2               	lslf	___flmul@grs^(0+128),f
 10281  016A  0DA3               	rlf	(___flmul@grs+1)^(0+128),f
 10282  016B  0DA4               	rlf	(___flmul@grs+2)^(0+128),f
 10283  016C  0DA5               	rlf	(___flmul@grs+3)^(0+128),f
 10284  016D  0B89               	decfsz	9,f
 10285  016E  2969               	goto	u3715
 10286  016F                     l3444:
 10287  016F  0020               	movlb	0	; select bank0
 10288  0170  083F               	movf	___flmul@b+1,w
 10289  0171  00C6               	movwf	??___flmul
 10290  0172  0846               	movf	??___flmul,w
 10291  0173  00B0               	movwf	__Umul8_16@multiplicand
 10292  0174  0842               	movf	___flmul@a,w
 10293  0175  3189  21B6  3180   	fcall	__Umul8_16
 10294  0178  0020               	movlb	0	; select bank0
 10295  0179  0831               	movf	?__Umul8_16+1,w
 10296  017A  0021               	movlb	1	; select bank1
 10297  017B  00AC               	movwf	(___flmul@temp+1)^(0+128)
 10298  017C  0020               	movlb	0	; select bank0
 10299  017D  0830               	movf	?__Umul8_16,w
 10300  017E  0021               	movlb	1	; select bank1
 10301  017F  00AB               	movwf	___flmul@temp^(0+128)
 10302  0180                     l3446:
 10303  0180  082B               	movf	___flmul@temp^(0+128),w
 10304  0181  07A2               	addwf	___flmul@grs^(0+128),f
 10305  0182  082C               	movf	(___flmul@temp+1)^(0+128),w
 10306  0183  3DA3               	addwfc	(___flmul@grs+1)^(0+128),f
 10307  0184  3000               	movlw	0
 10308  0185  3DA4               	addwfc	(___flmul@grs+2)^(0+128),f
 10309  0186  3DA5               	addwfc	(___flmul@grs+3)^(0+128),f
 10310  0187                     l3448:
 10311  0187  0020               	movlb	0	; select bank0
 10312  0188  083E               	movf	___flmul@b,w
 10313  0189  00C6               	movwf	??___flmul
 10314  018A  0846               	movf	??___flmul,w
 10315  018B  00B0               	movwf	__Umul8_16@multiplicand
 10316  018C  0843               	movf	___flmul@a+1,w
 10317  018D  3189  21B6  3180   	fcall	__Umul8_16
 10318  0190  0020               	movlb	0	; select bank0
 10319  0191  0831               	movf	?__Umul8_16+1,w
 10320  0192  0021               	movlb	1	; select bank1
 10321  0193  00AC               	movwf	(___flmul@temp+1)^(0+128)
 10322  0194  0020               	movlb	0	; select bank0
 10323  0195  0830               	movf	?__Umul8_16,w
 10324  0196  0021               	movlb	1	; select bank1
 10325  0197  00AB               	movwf	___flmul@temp^(0+128)
 10326  0198                     l3450:
 10327  0198  082B               	movf	___flmul@temp^(0+128),w
 10328  0199  07A2               	addwf	___flmul@grs^(0+128),f
 10329  019A  082C               	movf	(___flmul@temp+1)^(0+128),w
 10330  019B  3DA3               	addwfc	(___flmul@grs+1)^(0+128),f
 10331  019C  3000               	movlw	0
 10332  019D  3DA4               	addwfc	(___flmul@grs+2)^(0+128),f
 10333  019E  3DA5               	addwfc	(___flmul@grs+3)^(0+128),f
 10334  019F                     l3452:
 10335  019F  3008               	movlw	8
 10336  01A0                     u3725:
 10337  01A0  35A2               	lslf	___flmul@grs^(0+128),f
 10338  01A1  0DA3               	rlf	(___flmul@grs+1)^(0+128),f
 10339  01A2  0DA4               	rlf	(___flmul@grs+2)^(0+128),f
 10340  01A3  0DA5               	rlf	(___flmul@grs+3)^(0+128),f
 10341  01A4  0B89               	decfsz	9,f
 10342  01A5  29A0               	goto	u3725
 10343  01A6  0020               	movlb	0	; select bank0
 10344  01A7  083E               	movf	___flmul@b,w
 10345  01A8  00C6               	movwf	??___flmul
 10346  01A9  0846               	movf	??___flmul,w
 10347  01AA  00B0               	movwf	__Umul8_16@multiplicand
 10348  01AB  0842               	movf	___flmul@a,w
 10349  01AC  3189  21B6  3180   	fcall	__Umul8_16
 10350  01AF  0020               	movlb	0	; select bank0
 10351  01B0  0831               	movf	?__Umul8_16+1,w
 10352  01B1  0021               	movlb	1	; select bank1
 10353  01B2  00AC               	movwf	(___flmul@temp+1)^(0+128)
 10354  01B3  0020               	movlb	0	; select bank0
 10355  01B4  0830               	movf	?__Umul8_16,w
 10356  01B5  0021               	movlb	1	; select bank1
 10357  01B6  00AB               	movwf	___flmul@temp^(0+128)
 10358  01B7                     l3454:
 10359  01B7  082B               	movf	___flmul@temp^(0+128),w
 10360  01B8  07A2               	addwf	___flmul@grs^(0+128),f
 10361  01B9  082C               	movf	(___flmul@temp+1)^(0+128),w
 10362  01BA  3DA3               	addwfc	(___flmul@grs+1)^(0+128),f
 10363  01BB  3000               	movlw	0
 10364  01BC  3DA4               	addwfc	(___flmul@grs+2)^(0+128),f
 10365  01BD  3DA5               	addwfc	(___flmul@grs+3)^(0+128),f
 10366  01BE                     l3456:
 10367  01BE  0020               	movlb	0	; select bank0
 10368  01BF  083F               	movf	___flmul@b+1,w
 10369  01C0  00C6               	movwf	??___flmul
 10370  01C1  0846               	movf	??___flmul,w
 10371  01C2  00B0               	movwf	__Umul8_16@multiplicand
 10372  01C3  0844               	movf	___flmul@a+2,w
 10373  01C4  3189  21B6  3180   	fcall	__Umul8_16
 10374  01C7  0020               	movlb	0	; select bank0
 10375  01C8  0831               	movf	?__Umul8_16+1,w
 10376  01C9  0021               	movlb	1	; select bank1
 10377  01CA  00AC               	movwf	(___flmul@temp+1)^(0+128)
 10378  01CB  0020               	movlb	0	; select bank0
 10379  01CC  0830               	movf	?__Umul8_16,w
 10380  01CD  0021               	movlb	1	; select bank1
 10381  01CE  00AB               	movwf	___flmul@temp^(0+128)
 10382  01CF  082B               	movf	___flmul@temp^(0+128),w
 10383  01D0  07A7               	addwf	___flmul@prod^(0+128),f
 10384  01D1  082C               	movf	(___flmul@temp+1)^(0+128),w
 10385  01D2  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
 10386  01D3  3000               	movlw	0
 10387  01D4  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
 10388  01D5  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
 10389  01D6                     l3458:
 10390  01D6  0020               	movlb	0	; select bank0
 10391  01D7  0840               	movf	___flmul@b+2,w
 10392  01D8  00C6               	movwf	??___flmul
 10393  01D9  0846               	movf	??___flmul,w
 10394  01DA  00B0               	movwf	__Umul8_16@multiplicand
 10395  01DB  0843               	movf	___flmul@a+1,w
 10396  01DC  3189  21B6  3180   	fcall	__Umul8_16
 10397  01DF  0020               	movlb	0	; select bank0
 10398  01E0  0831               	movf	?__Umul8_16+1,w
 10399  01E1  0021               	movlb	1	; select bank1
 10400  01E2  00AC               	movwf	(___flmul@temp+1)^(0+128)
 10401  01E3  0020               	movlb	0	; select bank0
 10402  01E4  0830               	movf	?__Umul8_16,w
 10403  01E5  0021               	movlb	1	; select bank1
 10404  01E6  00AB               	movwf	___flmul@temp^(0+128)
 10405  01E7                     l3460:
 10406  01E7  082B               	movf	___flmul@temp^(0+128),w
 10407  01E8  07A7               	addwf	___flmul@prod^(0+128),f
 10408  01E9  082C               	movf	(___flmul@temp+1)^(0+128),w
 10409  01EA  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
 10410  01EB  3000               	movlw	0
 10411  01EC  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
 10412  01ED  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
 10413  01EE  0020               	movlb	0	; select bank0
 10414  01EF  0840               	movf	___flmul@b+2,w
 10415  01F0  00C6               	movwf	??___flmul
 10416  01F1  0846               	movf	??___flmul,w
 10417  01F2  00B0               	movwf	__Umul8_16@multiplicand
 10418  01F3  0844               	movf	___flmul@a+2,w
 10419  01F4  3189  21B6  3180   	fcall	__Umul8_16
 10420  01F7  0020               	movlb	0	; select bank0
 10421  01F8  0831               	movf	?__Umul8_16+1,w
 10422  01F9  0021               	movlb	1	; select bank1
 10423  01FA  00AC               	movwf	(___flmul@temp+1)^(0+128)
 10424  01FB  0020               	movlb	0	; select bank0
 10425  01FC  0830               	movf	?__Umul8_16,w
 10426  01FD  0021               	movlb	1	; select bank1
 10427  01FE  00AB               	movwf	___flmul@temp^(0+128)
 10428  01FF                     l3462:
 10429  01FF  082B               	movf	___flmul@temp^(0+128),w
 10430  0200  0020               	movlb	0	; select bank0
 10431  0201  00C6               	movwf	??___flmul
 10432  0202  0021               	movlb	1	; select bank1
 10433  0203  082C               	movf	(___flmul@temp+1)^(0+128),w
 10434  0204  0020               	movlb	0	; select bank0
 10435  0205  00C7               	movwf	??___flmul+1
 10436  0206  01C8               	clrf	??___flmul+2
 10437  0207  01C9               	clrf	??___flmul+3
 10438  0208  3008               	movlw	8
 10439  0209                     u3735:
 10440  0209  35C6               	lslf	??___flmul,f
 10441  020A  0DC7               	rlf	??___flmul+1,f
 10442  020B  0DC8               	rlf	??___flmul+2,f
 10443  020C  0DC9               	rlf	??___flmul+3,f
 10444  020D                     u3730:
 10445  020D  0B89               	decfsz	9,f
 10446  020E  2A09               	goto	u3735
 10447  020F  0846               	movf	??___flmul,w
 10448  0210  0021               	movlb	1	; select bank1
 10449  0211  07A7               	addwf	___flmul@prod^(0+128),f
 10450  0212  0020               	movlb	0	; select bank0
 10451  0213  0847               	movf	??___flmul+1,w
 10452  0214  0021               	movlb	1	; select bank1
 10453  0215  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
 10454  0216  0020               	movlb	0	; select bank0
 10455  0217  0848               	movf	??___flmul+2,w
 10456  0218  0021               	movlb	1	; select bank1
 10457  0219  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
 10458  021A  0020               	movlb	0	; select bank0
 10459  021B  0849               	movf	??___flmul+3,w
 10460  021C  0021               	movlb	1	; select bank1
 10461  021D  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
 10462  021E                     l3464:
 10463  021E  0822               	movf	___flmul@grs^(0+128),w
 10464  021F  0020               	movlb	0	; select bank0
 10465  0220  00C6               	movwf	??___flmul
 10466  0221  0021               	movlb	1	; select bank1
 10467  0222  0823               	movf	(___flmul@grs+1)^(0+128),w
 10468  0223  0020               	movlb	0	; select bank0
 10469  0224  00C7               	movwf	??___flmul+1
 10470  0225  0021               	movlb	1	; select bank1
 10471  0226  0824               	movf	(___flmul@grs+2)^(0+128),w
 10472  0227  0020               	movlb	0	; select bank0
 10473  0228  00C8               	movwf	??___flmul+2
 10474  0229  0021               	movlb	1	; select bank1
 10475  022A  0825               	movf	(___flmul@grs+3)^(0+128),w
 10476  022B  0020               	movlb	0	; select bank0
 10477  022C  00C9               	movwf	??___flmul+3
 10478  022D  3018               	movlw	24
 10479  022E                     u3745:
 10480  022E  36C9               	lsrf	??___flmul+3,f
 10481  022F  0CC8               	rrf	??___flmul+2,f
 10482  0230  0CC7               	rrf	??___flmul+1,f
 10483  0231  0CC6               	rrf	??___flmul,f
 10484  0232                     u3740:
 10485  0232  0B89               	decfsz	9,f
 10486  0233  2A2E               	goto	u3745
 10487  0234  0846               	movf	??___flmul,w
 10488  0235  0021               	movlb	1	; select bank1
 10489  0236  07A7               	addwf	___flmul@prod^(0+128),f
 10490  0237  0020               	movlb	0	; select bank0
 10491  0238  0847               	movf	??___flmul+1,w
 10492  0239  0021               	movlb	1	; select bank1
 10493  023A  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
 10494  023B  0020               	movlb	0	; select bank0
 10495  023C  0848               	movf	??___flmul+2,w
 10496  023D  0021               	movlb	1	; select bank1
 10497  023E  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
 10498  023F  0020               	movlb	0	; select bank0
 10499  0240  0849               	movf	??___flmul+3,w
 10500  0241  0021               	movlb	1	; select bank1
 10501  0242  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
 10502  0243                     l3466:
 10503  0243  3008               	movlw	8
 10504  0244                     u3755:
 10505  0244  35A2               	lslf	___flmul@grs^(0+128),f
 10506  0245  0DA3               	rlf	(___flmul@grs+1)^(0+128),f
 10507  0246  0DA4               	rlf	(___flmul@grs+2)^(0+128),f
 10508  0247  0DA5               	rlf	(___flmul@grs+3)^(0+128),f
 10509  0248  0B89               	decfsz	9,f
 10510  0249  2A44               	goto	u3755
 10511  024A                     l3468:
 10512  024A  0826               	movf	___flmul@bexp^(0+128),w
 10513  024B  0721               	addwf	___flmul@aexp^(0+128),w
 10514  024C  0020               	movlb	0	; select bank0
 10515  024D  00C6               	movwf	??___flmul
 10516  024E  01C7               	clrf	??___flmul+1
 10517  024F  0DC7               	rlf	??___flmul+1,f
 10518  0250  0846               	movf	??___flmul,w
 10519  0251  3E82               	addlw	130
 10520  0252  0021               	movlb	1	; select bank1
 10521  0253  00AB               	movwf	___flmul@temp^(0+128)
 10522  0254  30FF               	movlw	255
 10523  0255  0020               	movlb	0	; select bank0
 10524  0256  3D47               	addwfc	??___flmul+1,w
 10525  0257  0021               	movlb	1	; select bank1
 10526  0258  00AC               	movwf	(___flmul@temp+1)^(0+128)
 10527  0259  2A71               	goto	l3480
 10528  025A                     l3470:
 10529  025A  3001               	movlw	1
 10530  025B                     u3765:
 10531  025B  35A7               	lslf	___flmul@prod^(0+128),f
 10532  025C  0DA8               	rlf	(___flmul@prod+1)^(0+128),f
 10533  025D  0DA9               	rlf	(___flmul@prod+2)^(0+128),f
 10534  025E  0DAA               	rlf	(___flmul@prod+3)^(0+128),f
 10535  025F  0B89               	decfsz	9,f
 10536  0260  2A5B               	goto	u3765
 10537  0261                     l3472:
 10538  0261  1FA5               	btfss	(___flmul@grs+3)^(0+128),7
 10539  0262  2A64               	goto	u3771
 10540  0263  2A65               	goto	u3770
 10541  0264                     u3771:
 10542  0264  2A66               	goto	l3476
 10543  0265                     u3770:
 10544  0265                     l3474:
 10545  0265  1427               	bsf	___flmul@prod^(0+128),0
 10546  0266                     l3476:
 10547  0266  3001               	movlw	1
 10548  0267                     u3785:
 10549  0267  35A2               	lslf	___flmul@grs^(0+128),f
 10550  0268  0DA3               	rlf	(___flmul@grs+1)^(0+128),f
 10551  0269  0DA4               	rlf	(___flmul@grs+2)^(0+128),f
 10552  026A  0DA5               	rlf	(___flmul@grs+3)^(0+128),f
 10553  026B  0B89               	decfsz	9,f
 10554  026C  2A67               	goto	u3785
 10555  026D                     l3478:
 10556  026D  30FF               	movlw	255
 10557  026E  07AB               	addwf	___flmul@temp^(0+128),f
 10558  026F  30FF               	movlw	255
 10559  0270  3DAC               	addwfc	(___flmul@temp+1)^(0+128),f
 10560  0271                     l3480:
 10561  0271  1FA9               	btfss	(___flmul@prod+2)^(0+128),7
 10562  0272  2A74               	goto	u3791
 10563  0273  2A75               	goto	u3790
 10564  0274                     u3791:
 10565  0274  2A5A               	goto	l3470
 10566  0275                     u3790:
 10567  0275                     l3482:
 10568  0275  01A1               	clrf	___flmul@aexp^(0+128)
 10569  0276                     l3484:
 10570  0276  1FA5               	btfss	(___flmul@grs+3)^(0+128),7
 10571  0277  2A79               	goto	u3801
 10572  0278  2A7A               	goto	u3800
 10573  0279                     u3801:
 10574  0279  2A9F               	goto	l3492
 10575  027A                     u3800:
 10576  027A                     l3486:
 10577  027A  30FF               	movlw	255
 10578  027B  0522               	andwf	___flmul@grs^(0+128),w
 10579  027C  0020               	movlb	0	; select bank0
 10580  027D  00C6               	movwf	??___flmul
 10581  027E  30FF               	movlw	255
 10582  027F  0021               	movlb	1	; select bank1
 10583  0280  0523               	andwf	(___flmul@grs+1)^(0+128),w
 10584  0281  0020               	movlb	0	; select bank0
 10585  0282  00C7               	movwf	??___flmul+1
 10586  0283  30FF               	movlw	255
 10587  0284  0021               	movlb	1	; select bank1
 10588  0285  0524               	andwf	(___flmul@grs+2)^(0+128),w
 10589  0286  0020               	movlb	0	; select bank0
 10590  0287  00C8               	movwf	??___flmul+2
 10591  0288  307F               	movlw	127
 10592  0289  0021               	movlb	1	; select bank1
 10593  028A  0525               	andwf	(___flmul@grs+3)^(0+128),w
 10594  028B  0020               	movlb	0	; select bank0
 10595  028C  00C9               	movwf	??___flmul+3
 10596  028D  0849               	movf	??___flmul+3,w
 10597  028E  0448               	iorwf	??___flmul+2,w
 10598  028F  0447               	iorwf	??___flmul+1,w
 10599  0290  0446               	iorwf	??___flmul,w
 10600  0291  1903               	skipnz
 10601  0292  2A94               	goto	u3811
 10602  0293  2A95               	goto	u3810
 10603  0294                     u3811:
 10604  0294  2A99               	goto	l1059
 10605  0295                     u3810:
 10606  0295                     l3488:
 10607  0295  0021               	movlb	1	; select bank1
 10608  0296  01A1               	clrf	___flmul@aexp^(0+128)
 10609  0297  0AA1               	incf	___flmul@aexp^(0+128),f
 10610  0298  2A9F               	goto	l3492
 10611  0299                     l1059:
 10612  0299  0021               	movlb	1	; select bank1
 10613  029A  1C27               	btfss	___flmul@prod^(0+128),0
 10614  029B  2A9D               	goto	u3821
 10615  029C  2A9E               	goto	u3820
 10616  029D                     u3821:
 10617  029D  2A9F               	goto	l3492
 10618  029E                     u3820:
 10619  029E  2A95               	goto	l3488
 10620  029F                     l3492:
 10621  029F  0821               	movf	___flmul@aexp^(0+128),w
 10622  02A0  1903               	btfsc	3,2
 10623  02A1  2AA3               	goto	u3831
 10624  02A2  2AA4               	goto	u3830
 10625  02A3                     u3831:
 10626  02A3  2ADA               	goto	l3502
 10627  02A4                     u3830:
 10628  02A4                     l3494:
 10629  02A4  3001               	movlw	1
 10630  02A5  07A7               	addwf	___flmul@prod^(0+128),f
 10631  02A6  3000               	movlw	0
 10632  02A7  3DA8               	addwfc	(___flmul@prod+1)^(0+128),f
 10633  02A8  3000               	movlw	0
 10634  02A9  3DA9               	addwfc	(___flmul@prod+2)^(0+128),f
 10635  02AA  3000               	movlw	0
 10636  02AB  3DAA               	addwfc	(___flmul@prod+3)^(0+128),f
 10637  02AC                     l3496:
 10638  02AC  1C2A               	btfss	(___flmul@prod+3)^(0+128),0
 10639  02AD  2AAF               	goto	u3841
 10640  02AE  2AB0               	goto	u3840
 10641  02AF                     u3841:
 10642  02AF  2ADA               	goto	l3502
 10643  02B0                     u3840:
 10644  02B0                     l3498:
 10645  02B0  0827               	movf	___flmul@prod^(0+128),w
 10646  02B1  0020               	movlb	0	; select bank0
 10647  02B2  00C6               	movwf	??___flmul
 10648  02B3  0021               	movlb	1	; select bank1
 10649  02B4  0828               	movf	(___flmul@prod+1)^(0+128),w
 10650  02B5  0020               	movlb	0	; select bank0
 10651  02B6  00C7               	movwf	??___flmul+1
 10652  02B7  0021               	movlb	1	; select bank1
 10653  02B8  0829               	movf	(___flmul@prod+2)^(0+128),w
 10654  02B9  0020               	movlb	0	; select bank0
 10655  02BA  00C8               	movwf	??___flmul+2
 10656  02BB  0021               	movlb	1	; select bank1
 10657  02BC  082A               	movf	(___flmul@prod+3)^(0+128),w
 10658  02BD  0020               	movlb	0	; select bank0
 10659  02BE  00C9               	movwf	??___flmul+3
 10660  02BF  3001               	movlw	1
 10661  02C0  00CA               	movwf	??___flmul+4
 10662  02C1                     u3855:
 10663  02C1  37C9               	asrf	??___flmul+3,f
 10664  02C2  0CC8               	rrf	??___flmul+2,f
 10665  02C3  0CC7               	rrf	??___flmul+1,f
 10666  02C4  0CC6               	rrf	??___flmul,f
 10667  02C5                     u3850:
 10668  02C5  0BCA               	decfsz	??___flmul+4,f
 10669  02C6  2AC1               	goto	u3855
 10670  02C7  0849               	movf	??___flmul+3,w
 10671  02C8  0021               	movlb	1	; select bank1
 10672  02C9  00AA               	movwf	(___flmul@prod+3)^(0+128)
 10673  02CA  0020               	movlb	0	; select bank0
 10674  02CB  0848               	movf	??___flmul+2,w
 10675  02CC  0021               	movlb	1	; select bank1
 10676  02CD  00A9               	movwf	(___flmul@prod+2)^(0+128)
 10677  02CE  0020               	movlb	0	; select bank0
 10678  02CF  0847               	movf	??___flmul+1,w
 10679  02D0  0021               	movlb	1	; select bank1
 10680  02D1  00A8               	movwf	(___flmul@prod+1)^(0+128)
 10681  02D2  0020               	movlb	0	; select bank0
 10682  02D3  0846               	movf	??___flmul,w
 10683  02D4  0021               	movlb	1	; select bank1
 10684  02D5  00A7               	movwf	___flmul@prod^(0+128)
 10685  02D6                     l3500:
 10686  02D6  3001               	movlw	1
 10687  02D7  07AB               	addwf	___flmul@temp^(0+128),f
 10688  02D8  3000               	movlw	0
 10689  02D9  3DAC               	addwfc	(___flmul@temp+1)^(0+128),f
 10690  02DA                     l3502:
 10691  02DA  082C               	movf	(___flmul@temp+1)^(0+128),w
 10692  02DB  3A80               	xorlw	128
 10693  02DC  0020               	movlb	0	; select bank0
 10694  02DD  00C6               	movwf	??___flmul
 10695  02DE  3080               	movlw	128
 10696  02DF  0246               	subwf	??___flmul,w
 10697  02E0  1D03               	skipz
 10698  02E1  2AE5               	goto	u3865
 10699  02E2  30FF               	movlw	255
 10700  02E3  0021               	movlb	1	; select bank1
 10701  02E4  022B               	subwf	___flmul@temp^(0+128),w
 10702  02E5                     u3865:
 10703  02E5  1C03               	skipc
 10704  02E6  2AE8               	goto	u3861
 10705  02E7  2AE9               	goto	u3860
 10706  02E8                     u3861:
 10707  02E8  2AF3               	goto	l3506
 10708  02E9                     u3860:
 10709  02E9                     l3504:
 10710  02E9  307F               	movlw	127
 10711  02EA  0021               	movlb	1	; select bank1
 10712  02EB  00AA               	movwf	(___flmul@prod+3)^(0+128)
 10713  02EC  3080               	movlw	128
 10714  02ED  00A9               	movwf	(___flmul@prod+2)^(0+128)
 10715  02EE  3000               	movlw	0
 10716  02EF  00A8               	movwf	(___flmul@prod+1)^(0+128)
 10717  02F0  3000               	movlw	0
 10718  02F1  00A7               	movwf	___flmul@prod^(0+128)
 10719  02F2  2B28               	goto	l1065
 10720  02F3                     l3506:
 10721  02F3  0021               	movlb	1	; select bank1
 10722  02F4  082C               	movf	(___flmul@temp+1)^(0+128),w
 10723  02F5  3A80               	xorlw	128
 10724  02F6  0020               	movlb	0	; select bank0
 10725  02F7  00C6               	movwf	??___flmul
 10726  02F8  3080               	movlw	128
 10727  02F9  0246               	subwf	??___flmul,w
 10728  02FA  1D03               	skipz
 10729  02FB  2AFF               	goto	u3875
 10730  02FC  3001               	movlw	1
 10731  02FD  0021               	movlb	1	; select bank1
 10732  02FE  022B               	subwf	___flmul@temp^(0+128),w
 10733  02FF                     u3875:
 10734  02FF  1803               	skipnc
 10735  0300  2B02               	goto	u3871
 10736  0301  2B03               	goto	u3870
 10737  0302                     u3871:
 10738  0302  2B0E               	goto	l3512
 10739  0303                     u3870:
 10740  0303                     l3508:
 10741  0303  3000               	movlw	0
 10742  0304  0021               	movlb	1	; select bank1
 10743  0305  00AA               	movwf	(___flmul@prod+3)^(0+128)
 10744  0306  3000               	movlw	0
 10745  0307  00A9               	movwf	(___flmul@prod+2)^(0+128)
 10746  0308  3000               	movlw	0
 10747  0309  00A8               	movwf	(___flmul@prod+1)^(0+128)
 10748  030A  3000               	movlw	0
 10749  030B  00A7               	movwf	___flmul@prod^(0+128)
 10750  030C                     l3510:
 10751  030C  01A0               	clrf	___flmul@sign^(0+128)
 10752  030D  2B28               	goto	l1065
 10753  030E                     l3512:
 10754  030E  0021               	movlb	1	; select bank1
 10755  030F  082B               	movf	___flmul@temp^(0+128),w
 10756  0310  0020               	movlb	0	; select bank0
 10757  0311  00C6               	movwf	??___flmul
 10758  0312  0846               	movf	??___flmul,w
 10759  0313  0021               	movlb	1	; select bank1
 10760  0314  00A6               	movwf	___flmul@bexp^(0+128)
 10761  0315  30FF               	movlw	255
 10762  0316  05A7               	andwf	___flmul@prod^(0+128),f
 10763  0317  30FF               	movlw	255
 10764  0318  05A8               	andwf	(___flmul@prod+1)^(0+128),f
 10765  0319  307F               	movlw	127
 10766  031A  05A9               	andwf	(___flmul@prod+2)^(0+128),f
 10767  031B  3000               	movlw	0
 10768  031C  05AA               	andwf	(___flmul@prod+3)^(0+128),f
 10769  031D                     l3514:
 10770  031D  1C26               	btfss	___flmul@bexp^(0+128),0
 10771  031E  2B20               	goto	u3881
 10772  031F  2B21               	goto	u3880
 10773  0320                     u3881:
 10774  0320  2B22               	goto	l3518
 10775  0321                     u3880:
 10776  0321                     l3516:
 10777  0321  17A9               	bsf	(___flmul@prod^(0+128)+2),7
 10778  0322                     l3518:
 10779  0322  3626               	lsrf	___flmul@bexp^(0+128),w
 10780  0323  0020               	movlb	0	; select bank0
 10781  0324  00C6               	movwf	??___flmul
 10782  0325  0846               	movf	??___flmul,w
 10783  0326  0021               	movlb	1	; select bank1
 10784  0327  00AA               	movwf	(___flmul@prod^(0+128)+3)
 10785  0328                     l1065:
 10786  0328  0820               	movf	___flmul@sign^(0+128),w
 10787  0329  0020               	movlb	0	; select bank0
 10788  032A  00C6               	movwf	??___flmul
 10789  032B  0846               	movf	??___flmul,w
 10790  032C  0021               	movlb	1	; select bank1
 10791  032D  04AA               	iorwf	(___flmul@prod^(0+128)+3),f
 10792  032E                     l3520:
 10793  032E  082A               	movf	(___flmul@prod+3)^(0+128),w
 10794  032F  0020               	movlb	0	; select bank0
 10795  0330  00C1               	movwf	?___flmul+3
 10796  0331  0021               	movlb	1	; select bank1
 10797  0332  0829               	movf	(___flmul@prod+2)^(0+128),w
 10798  0333  0020               	movlb	0	; select bank0
 10799  0334  00C0               	movwf	?___flmul+2
 10800  0335  0021               	movlb	1	; select bank1
 10801  0336  0828               	movf	(___flmul@prod+1)^(0+128),w
 10802  0337  0020               	movlb	0	; select bank0
 10803  0338  00BF               	movwf	?___flmul+1
 10804  0339  0021               	movlb	1	; select bank1
 10805  033A  0827               	movf	___flmul@prod^(0+128),w
 10806  033B  0020               	movlb	0	; select bank0
 10807  033C  00BE               	movwf	?___flmul
 10808  033D                     l1053:
 10809  033D  0008               	return
 10810  033E                     __end_of___flmul:
 10811                           
 10812                           	psect	text26
 10813  09B6                     __ptext26:	
 10814 ;; *************** function __Umul8_16 *****************
 10815 ;; Defined at:
 10816 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul8_16.c"
 10817 ;; Parameters:    Size  Location     Type
 10818 ;;  multiplier      1    wreg     unsigned char 
 10819 ;;  multiplicand    1   16[BANK0 ] unsigned char 
 10820 ;; Auto vars:     Size  Location     Type
 10821 ;;  multiplier      1   24[BANK0 ] unsigned char 
 10822 ;;  word_mpld       2   22[BANK0 ] unsigned int 
 10823 ;;  product         2   20[BANK0 ] unsigned int 
 10824 ;; Return value:  Size  Location     Type
 10825 ;;                  2   16[BANK0 ] unsigned int 
 10826 ;; Registers used:
 10827 ;;		wreg, status,2, status,0
 10828 ;; Tracked objects:
 10829 ;;		On entry : 0/0
 10830 ;;		On exit  : 0/0
 10831 ;;		Unchanged: 0/0
 10832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10833 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10834 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10835 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10836 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10837 ;;Total ram usage:        9 bytes
 10838 ;; Hardware stack levels used: 1
 10839 ;; Hardware stack levels required when called: 7
 10840 ;; This function calls:
 10841 ;;		Nothing
 10842 ;; This function is called by:
 10843 ;;		___flmul
 10844 ;; This function uses a non-reentrant model
 10845 ;;
 10846                           
 10847  09B6                     __Umul8_16:	
 10848                           ;psect for function __Umul8_16
 10849                           
 10850                           
 10851                           ;incstack = 0
 10852                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10853                           ;__Umul8_16@multiplier stored from wreg
 10854  09B6  0020               	movlb	0	; select bank0
 10855  09B7  00B8               	movwf	__Umul8_16@multiplier
 10856  09B8                     l3202:
 10857  09B8  01B4               	clrf	__Umul8_16@product
 10858  09B9  01B5               	clrf	__Umul8_16@product+1
 10859  09BA                     l3204:
 10860  09BA  0830               	movf	__Umul8_16@multiplicand,w
 10861  09BB  00B2               	movwf	??__Umul8_16
 10862  09BC  01B3               	clrf	??__Umul8_16+1
 10863  09BD  0832               	movf	??__Umul8_16,w
 10864  09BE  00B6               	movwf	__Umul8_16@word_mpld
 10865  09BF  0833               	movf	??__Umul8_16+1,w
 10866  09C0  00B7               	movwf	__Umul8_16@word_mpld+1
 10867  09C1                     l3206:
 10868  09C1  1C38               	btfss	__Umul8_16@multiplier,0
 10869  09C2  29C4               	goto	u3281
 10870  09C3  29C5               	goto	u3280
 10871  09C4                     u3281:
 10872  09C4  29C9               	goto	l1072
 10873  09C5                     u3280:
 10874  09C5                     l3208:
 10875  09C5  0836               	movf	__Umul8_16@word_mpld,w
 10876  09C6  07B4               	addwf	__Umul8_16@product,f
 10877  09C7  0837               	movf	__Umul8_16@word_mpld+1,w
 10878  09C8  3DB5               	addwfc	__Umul8_16@product+1,f
 10879  09C9                     l1072:
 10880  09C9  3001               	movlw	1
 10881  09CA                     u3295:
 10882  09CA  35B6               	lslf	__Umul8_16@word_mpld,f
 10883  09CB  0DB7               	rlf	__Umul8_16@word_mpld+1,f
 10884  09CC  0B89               	decfsz	9,f
 10885  09CD  29CA               	goto	u3295
 10886  09CE  1003               	clrc
 10887  09CF  0CB8               	rrf	__Umul8_16@multiplier,f
 10888  09D0                     l3210:
 10889  09D0  0838               	movf	__Umul8_16@multiplier,w
 10890  09D1  1D03               	btfss	3,2
 10891  09D2  29D4               	goto	u3301
 10892  09D3  29D5               	goto	u3300
 10893  09D4                     u3301:
 10894  09D4  29C1               	goto	l3206
 10895  09D5                     u3300:
 10896  09D5                     l3212:
 10897  09D5  0835               	movf	__Umul8_16@product+1,w
 10898  09D6  00B1               	movwf	?__Umul8_16+1
 10899  09D7  0834               	movf	__Umul8_16@product,w
 10900  09D8  00B0               	movwf	?__Umul8_16
 10901  09D9                     l1074:
 10902  09D9  0008               	return
 10903  09DA                     __end_of__Umul8_16:
 10904                           
 10905                           	psect	text27
 10906  033E                     __ptext27:	
 10907 ;; *************** function ___fldiv *****************
 10908 ;; Defined at:
 10909 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
 10910 ;; Parameters:    Size  Location     Type
 10911 ;;  a               4   13[BANK1 ] unsigned int 
 10912 ;;  b               4   17[BANK1 ] unsigned int 
 10913 ;; Auto vars:     Size  Location     Type
 10914 ;;  grs             4   28[BANK1 ] unsigned long 
 10915 ;;  rem             4   21[BANK1 ] unsigned long 
 10916 ;;  new_exp         2   26[BANK1 ] int 
 10917 ;;  aexp            1   33[BANK1 ] unsigned char 
 10918 ;;  bexp            1   32[BANK1 ] unsigned char 
 10919 ;;  sign            1   25[BANK1 ] unsigned char 
 10920 ;; Return value:  Size  Location     Type
 10921 ;;                  4   13[BANK1 ] unsigned char 
 10922 ;; Registers used:
 10923 ;;		wreg, status,2, status,0
 10924 ;; Tracked objects:
 10925 ;;		On entry : 0/0
 10926 ;;		On exit  : 0/0
 10927 ;;		Unchanged: 0/0
 10928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10929 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10930 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
 10931 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10932 ;;      Totals:         0       5      21       0       0       0       0       0       0       0       0       0       
      +0       0
 10933 ;;Total ram usage:       26 bytes
 10934 ;; Hardware stack levels used: 1
 10935 ;; Hardware stack levels required when called: 7
 10936 ;; This function calls:
 10937 ;;		Nothing
 10938 ;; This function is called by:
 10939 ;;		_main
 10940 ;; This function uses a non-reentrant model
 10941 ;;
 10942                           
 10943  033E                     ___fldiv:	
 10944                           ;psect for function ___fldiv
 10945                           
 10946  033E                     l3244:	
 10947                           ;incstack = 0
 10948                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 10949                           
 10950  033E  0021               	movlb	1	; select bank1
 10951  033F  0834               	movf	(___fldiv@b^(0+128)+3),w
 10952  0340  3980               	andlw	128
 10953  0341  0020               	movlb	0	; select bank0
 10954  0342  00CB               	movwf	??___fldiv
 10955  0343  084B               	movf	??___fldiv,w
 10956  0344  0021               	movlb	1	; select bank1
 10957  0345  00B9               	movwf	___fldiv@sign^(0+128)
 10958  0346                     l3246:
 10959  0346  3534               	lslf	(___fldiv@b^(0+128)+3),w
 10960  0347  0020               	movlb	0	; select bank0
 10961  0348  00CB               	movwf	??___fldiv
 10962  0349  084B               	movf	??___fldiv,w
 10963  034A  0021               	movlb	1	; select bank1
 10964  034B  00C0               	movwf	___fldiv@bexp^(0+128)
 10965  034C                     l3248:
 10966  034C  1FB3               	btfss	(___fldiv@b^(0+128)+2),7
 10967  034D  2B4F               	goto	u3341
 10968  034E  2B50               	goto	u3340
 10969  034F                     u3341:
 10970  034F  2B51               	goto	l3252
 10971  0350                     u3340:
 10972  0350                     l3250:
 10973  0350  1440               	bsf	___fldiv@bexp^(0+128),0
 10974  0351                     l3252:
 10975  0351  0840               	movf	___fldiv@bexp^(0+128),w
 10976  0352  1903               	btfsc	3,2
 10977  0353  2B55               	goto	u3351
 10978  0354  2B56               	goto	u3350
 10979  0355                     u3351:
 10980  0355  2B66               	goto	l3262
 10981  0356                     u3350:
 10982  0356                     l3254:
 10983  0356  0A40               	incf	___fldiv@bexp^(0+128),w
 10984  0357  1D03               	btfss	3,2
 10985  0358  2B5A               	goto	u3361
 10986  0359  2B5B               	goto	u3360
 10987  035A                     u3361:
 10988  035A  2B63               	goto	l3258
 10989  035B                     u3360:
 10990  035B                     l3256:
 10991  035B  3000               	movlw	0
 10992  035C  00B4               	movwf	(___fldiv@b+3)^(0+128)
 10993  035D  3000               	movlw	0
 10994  035E  00B3               	movwf	(___fldiv@b+2)^(0+128)
 10995  035F  3000               	movlw	0
 10996  0360  00B2               	movwf	(___fldiv@b+1)^(0+128)
 10997  0361  3000               	movlw	0
 10998  0362  00B1               	movwf	___fldiv@b^(0+128)
 10999  0363                     l3258:
 11000  0363  17B3               	bsf	(___fldiv@b^(0+128)+2),7
 11001  0364                     l3260:
 11002  0364  01B4               	clrf	(___fldiv@b^(0+128)+3)
 11003  0365  2B6E               	goto	l3264
 11004  0366                     l3262:
 11005  0366  3000               	movlw	0
 11006  0367  00B4               	movwf	(___fldiv@b+3)^(0+128)
 11007  0368  3000               	movlw	0
 11008  0369  00B3               	movwf	(___fldiv@b+2)^(0+128)
 11009  036A  3000               	movlw	0
 11010  036B  00B2               	movwf	(___fldiv@b+1)^(0+128)
 11011  036C  3000               	movlw	0
 11012  036D  00B1               	movwf	___fldiv@b^(0+128)
 11013  036E                     l3264:
 11014  036E  0830               	movf	(___fldiv@a^(0+128)+3),w
 11015  036F  3980               	andlw	128
 11016  0370  0020               	movlb	0	; select bank0
 11017  0371  00CB               	movwf	??___fldiv
 11018  0372  084B               	movf	??___fldiv,w
 11019  0373  0021               	movlb	1	; select bank1
 11020  0374  06B9               	xorwf	___fldiv@sign^(0+128),f
 11021  0375                     l3266:
 11022  0375  3530               	lslf	(___fldiv@a^(0+128)+3),w
 11023  0376  0020               	movlb	0	; select bank0
 11024  0377  00CB               	movwf	??___fldiv
 11025  0378  084B               	movf	??___fldiv,w
 11026  0379  0021               	movlb	1	; select bank1
 11027  037A  00C1               	movwf	___fldiv@aexp^(0+128)
 11028  037B                     l3268:
 11029  037B  1FAF               	btfss	(___fldiv@a^(0+128)+2),7
 11030  037C  2B7E               	goto	u3371
 11031  037D  2B7F               	goto	u3370
 11032  037E                     u3371:
 11033  037E  2B80               	goto	l3272
 11034  037F                     u3370:
 11035  037F                     l3270:
 11036  037F  1441               	bsf	___fldiv@aexp^(0+128),0
 11037  0380                     l3272:
 11038  0380  0841               	movf	___fldiv@aexp^(0+128),w
 11039  0381  1903               	btfsc	3,2
 11040  0382  2B84               	goto	u3381
 11041  0383  2B85               	goto	u3380
 11042  0384                     u3381:
 11043  0384  2B95               	goto	l3282
 11044  0385                     u3380:
 11045  0385                     l3274:
 11046  0385  0A41               	incf	___fldiv@aexp^(0+128),w
 11047  0386  1D03               	btfss	3,2
 11048  0387  2B89               	goto	u3391
 11049  0388  2B8A               	goto	u3390
 11050  0389                     u3391:
 11051  0389  2B92               	goto	l3278
 11052  038A                     u3390:
 11053  038A                     l3276:
 11054  038A  3000               	movlw	0
 11055  038B  00B0               	movwf	(___fldiv@a+3)^(0+128)
 11056  038C  3000               	movlw	0
 11057  038D  00AF               	movwf	(___fldiv@a+2)^(0+128)
 11058  038E  3000               	movlw	0
 11059  038F  00AE               	movwf	(___fldiv@a+1)^(0+128)
 11060  0390  3000               	movlw	0
 11061  0391  00AD               	movwf	___fldiv@a^(0+128)
 11062  0392                     l3278:
 11063  0392  17AF               	bsf	(___fldiv@a^(0+128)+2),7
 11064  0393                     l3280:
 11065  0393  01B0               	clrf	(___fldiv@a^(0+128)+3)
 11066  0394  2B9D               	goto	l1013
 11067  0395                     l3282:
 11068  0395  3000               	movlw	0
 11069  0396  00B0               	movwf	(___fldiv@a+3)^(0+128)
 11070  0397  3000               	movlw	0
 11071  0398  00AF               	movwf	(___fldiv@a+2)^(0+128)
 11072  0399  3000               	movlw	0
 11073  039A  00AE               	movwf	(___fldiv@a+1)^(0+128)
 11074  039B  3000               	movlw	0
 11075  039C  00AD               	movwf	___fldiv@a^(0+128)
 11076  039D                     l1013:
 11077  039D  0830               	movf	(___fldiv@a+3)^(0+128),w
 11078  039E  042F               	iorwf	(___fldiv@a+2)^(0+128),w
 11079  039F  042E               	iorwf	(___fldiv@a+1)^(0+128),w
 11080  03A0  042D               	iorwf	___fldiv@a^(0+128),w
 11081  03A1  1D03               	skipz
 11082  03A2  2BA4               	goto	u3401
 11083  03A3  2BA5               	goto	u3400
 11084  03A4                     u3401:
 11085  03A4  2BC0               	goto	l3292
 11086  03A5                     u3400:
 11087  03A5                     l3284:
 11088  03A5  3000               	movlw	0
 11089  03A6  00B4               	movwf	(___fldiv@b+3)^(0+128)
 11090  03A7  3000               	movlw	0
 11091  03A8  00B3               	movwf	(___fldiv@b+2)^(0+128)
 11092  03A9  3000               	movlw	0
 11093  03AA  00B2               	movwf	(___fldiv@b+1)^(0+128)
 11094  03AB  3000               	movlw	0
 11095  03AC  00B1               	movwf	___fldiv@b^(0+128)
 11096  03AD  3080               	movlw	128
 11097  03AE  04B3               	iorwf	(___fldiv@b^(0+128)+2),f
 11098  03AF  307F               	movlw	127
 11099  03B0  04B4               	iorwf	((___fldiv@b+1)^(0+128)+2),f
 11100  03B1                     l3286:
 11101  03B1  0839               	movf	___fldiv@sign^(0+128),w
 11102  03B2  0020               	movlb	0	; select bank0
 11103  03B3  00CB               	movwf	??___fldiv
 11104  03B4  084B               	movf	??___fldiv,w
 11105  03B5  0021               	movlb	1	; select bank1
 11106  03B6  04B4               	iorwf	(___fldiv@b^(0+128)+3),f
 11107  03B7                     l3288:
 11108  03B7  0834               	movf	(___fldiv@b+3)^(0+128),w
 11109  03B8  00B0               	movwf	(?___fldiv+3)^(0+128)
 11110  03B9  0833               	movf	(___fldiv@b+2)^(0+128),w
 11111  03BA  00AF               	movwf	(?___fldiv+2)^(0+128)
 11112  03BB  0832               	movf	(___fldiv@b+1)^(0+128),w
 11113  03BC  00AE               	movwf	(?___fldiv+1)^(0+128)
 11114  03BD  0831               	movf	___fldiv@b^(0+128),w
 11115  03BE  00AD               	movwf	?___fldiv^(0+128)
 11116  03BF  2D26               	goto	l1015
 11117  03C0                     l3292:
 11118  03C0  0840               	movf	___fldiv@bexp^(0+128),w
 11119  03C1  1D03               	btfss	3,2
 11120  03C2  2BC4               	goto	u3411
 11121  03C3  2BC5               	goto	u3410
 11122  03C4                     u3411:
 11123  03C4  2BCE               	goto	l3298
 11124  03C5                     u3410:
 11125  03C5                     l3294:
 11126  03C5  3000               	movlw	0
 11127  03C6  00B0               	movwf	(?___fldiv+3)^(0+128)
 11128  03C7  3000               	movlw	0
 11129  03C8  00AF               	movwf	(?___fldiv+2)^(0+128)
 11130  03C9  3000               	movlw	0
 11131  03CA  00AE               	movwf	(?___fldiv+1)^(0+128)
 11132  03CB  3000               	movlw	0
 11133  03CC  00AD               	movwf	?___fldiv^(0+128)
 11134  03CD  2D26               	goto	l1015
 11135  03CE                     l3298:
 11136  03CE  0840               	movf	___fldiv@bexp^(0+128),w
 11137  03CF  0020               	movlb	0	; select bank0
 11138  03D0  00CB               	movwf	??___fldiv
 11139  03D1  01CC               	clrf	??___fldiv+1
 11140  03D2  084C               	movf	??___fldiv+1,w
 11141  03D3  00CE               	movwf	??___fldiv+3
 11142  03D4  0021               	movlb	1	; select bank1
 11143  03D5  0841               	movf	___fldiv@aexp^(0+128),w
 11144  03D6  0020               	movlb	0	; select bank0
 11145  03D7  024B               	subwf	??___fldiv,w
 11146  03D8  00CD               	movwf	??___fldiv+2
 11147  03D9  1C03               	skipc
 11148  03DA  03CE               	decf	??___fldiv+3,f
 11149  03DB  084D               	movf	??___fldiv+2,w
 11150  03DC  3E7F               	addlw	127
 11151  03DD  0021               	movlb	1	; select bank1
 11152  03DE  00BA               	movwf	___fldiv@new_exp^(0+128)
 11153  03DF  3000               	movlw	0
 11154  03E0  0020               	movlb	0	; select bank0
 11155  03E1  3D4E               	addwfc	??___fldiv+3,w
 11156  03E2  0021               	movlb	1	; select bank1
 11157  03E3  00BB               	movwf	(___fldiv@new_exp+1)^(0+128)
 11158  03E4                     l3300:
 11159  03E4  0834               	movf	(___fldiv@b+3)^(0+128),w
 11160  03E5  00B8               	movwf	(___fldiv@rem+3)^(0+128)
 11161  03E6  0833               	movf	(___fldiv@b+2)^(0+128),w
 11162  03E7  00B7               	movwf	(___fldiv@rem+2)^(0+128)
 11163  03E8  0832               	movf	(___fldiv@b+1)^(0+128),w
 11164  03E9  00B6               	movwf	(___fldiv@rem+1)^(0+128)
 11165  03EA  0831               	movf	___fldiv@b^(0+128),w
 11166  03EB  00B5               	movwf	___fldiv@rem^(0+128)
 11167  03EC                     l3302:
 11168  03EC  3000               	movlw	0
 11169  03ED  00B4               	movwf	(___fldiv@b+3)^(0+128)
 11170  03EE  3000               	movlw	0
 11171  03EF  00B3               	movwf	(___fldiv@b+2)^(0+128)
 11172  03F0  3000               	movlw	0
 11173  03F1  00B2               	movwf	(___fldiv@b+1)^(0+128)
 11174  03F2  3000               	movlw	0
 11175  03F3  00B1               	movwf	___fldiv@b^(0+128)
 11176  03F4                     l3304:
 11177  03F4  3000               	movlw	0
 11178  03F5  00BF               	movwf	(___fldiv@grs+3)^(0+128)
 11179  03F6  3000               	movlw	0
 11180  03F7  00BE               	movwf	(___fldiv@grs+2)^(0+128)
 11181  03F8  3000               	movlw	0
 11182  03F9  00BD               	movwf	(___fldiv@grs+1)^(0+128)
 11183  03FA  3000               	movlw	0
 11184  03FB  00BC               	movwf	___fldiv@grs^(0+128)
 11185  03FC                     l3306:
 11186  03FC  01C1               	clrf	___fldiv@aexp^(0+128)
 11187  03FD  2C3E               	goto	l3326
 11188  03FE                     l3308:
 11189  03FE  0841               	movf	___fldiv@aexp^(0+128),w
 11190  03FF  1903               	btfsc	3,2
 11191  0400  2C02               	goto	u3421
 11192  0401  2C03               	goto	u3420
 11193  0402                     u3421:
 11194  0402  2C1D               	goto	l3318
 11195  0403                     u3420:
 11196  0403                     l3310:
 11197  0403  3001               	movlw	1
 11198  0404                     u3435:
 11199  0404  35B5               	lslf	___fldiv@rem^(0+128),f
 11200  0405  0DB6               	rlf	(___fldiv@rem+1)^(0+128),f
 11201  0406  0DB7               	rlf	(___fldiv@rem+2)^(0+128),f
 11202  0407  0DB8               	rlf	(___fldiv@rem+3)^(0+128),f
 11203  0408  0B89               	decfsz	9,f
 11204  0409  2C04               	goto	u3435
 11205  040A  3001               	movlw	1
 11206  040B                     u3445:
 11207  040B  35B1               	lslf	___fldiv@b^(0+128),f
 11208  040C  0DB2               	rlf	(___fldiv@b+1)^(0+128),f
 11209  040D  0DB3               	rlf	(___fldiv@b+2)^(0+128),f
 11210  040E  0DB4               	rlf	(___fldiv@b+3)^(0+128),f
 11211  040F  0B89               	decfsz	9,f
 11212  0410  2C0B               	goto	u3445
 11213  0411                     l3312:
 11214  0411  1FBF               	btfss	(___fldiv@grs+3)^(0+128),7
 11215  0412  2C14               	goto	u3451
 11216  0413  2C15               	goto	u3450
 11217  0414                     u3451:
 11218  0414  2C16               	goto	l3316
 11219  0415                     u3450:
 11220  0415                     l3314:
 11221  0415  1431               	bsf	___fldiv@b^(0+128),0
 11222  0416                     l3316:
 11223  0416  3001               	movlw	1
 11224  0417                     u3465:
 11225  0417  35BC               	lslf	___fldiv@grs^(0+128),f
 11226  0418  0DBD               	rlf	(___fldiv@grs+1)^(0+128),f
 11227  0419  0DBE               	rlf	(___fldiv@grs+2)^(0+128),f
 11228  041A  0DBF               	rlf	(___fldiv@grs+3)^(0+128),f
 11229  041B  0B89               	decfsz	9,f
 11230  041C  2C17               	goto	u3465
 11231  041D                     l3318:
 11232  041D  0830               	movf	(___fldiv@a+3)^(0+128),w
 11233  041E  0238               	subwf	(___fldiv@rem+3)^(0+128),w
 11234  041F  1D03               	skipz
 11235  0420  2C2B               	goto	u3475
 11236  0421  082F               	movf	(___fldiv@a+2)^(0+128),w
 11237  0422  0237               	subwf	(___fldiv@rem+2)^(0+128),w
 11238  0423  1D03               	skipz
 11239  0424  2C2B               	goto	u3475
 11240  0425  082E               	movf	(___fldiv@a+1)^(0+128),w
 11241  0426  0236               	subwf	(___fldiv@rem+1)^(0+128),w
 11242  0427  1D03               	skipz
 11243  0428  2C2B               	goto	u3475
 11244  0429  082D               	movf	___fldiv@a^(0+128),w
 11245  042A  0235               	subwf	___fldiv@rem^(0+128),w
 11246  042B                     u3475:
 11247  042B  1C03               	skipc
 11248  042C  2C2E               	goto	u3471
 11249  042D  2C2F               	goto	u3470
 11250  042E                     u3471:
 11251  042E  2C38               	goto	l3324
 11252  042F                     u3470:
 11253  042F                     l3320:
 11254  042F  173F               	bsf	(___fldiv@grs^(0+128)+3),6
 11255  0430                     l3322:
 11256  0430  082D               	movf	___fldiv@a^(0+128),w
 11257  0431  02B5               	subwf	___fldiv@rem^(0+128),f
 11258  0432  082E               	movf	(___fldiv@a+1)^(0+128),w
 11259  0433  3BB6               	subwfb	(___fldiv@rem+1)^(0+128),f
 11260  0434  082F               	movf	(___fldiv@a+2)^(0+128),w
 11261  0435  3BB7               	subwfb	(___fldiv@rem+2)^(0+128),f
 11262  0436  0830               	movf	(___fldiv@a+3)^(0+128),w
 11263  0437  3BB8               	subwfb	(___fldiv@rem+3)^(0+128),f
 11264  0438                     l3324:
 11265  0438  3001               	movlw	1
 11266  0439  0020               	movlb	0	; select bank0
 11267  043A  00CB               	movwf	??___fldiv
 11268  043B  084B               	movf	??___fldiv,w
 11269  043C  0021               	movlb	1	; select bank1
 11270  043D  07C1               	addwf	___fldiv@aexp^(0+128),f
 11271  043E                     l3326:
 11272  043E  301A               	movlw	26
 11273  043F  0241               	subwf	___fldiv@aexp^(0+128),w
 11274  0440  1C03               	skipc
 11275  0441  2C43               	goto	u3481
 11276  0442  2C44               	goto	u3480
 11277  0443                     u3481:
 11278  0443  2BFE               	goto	l3308
 11279  0444                     u3480:
 11280  0444                     l3328:
 11281  0444  0838               	movf	(___fldiv@rem+3)^(0+128),w
 11282  0445  0437               	iorwf	(___fldiv@rem+2)^(0+128),w
 11283  0446  0436               	iorwf	(___fldiv@rem+1)^(0+128),w
 11284  0447  0435               	iorwf	___fldiv@rem^(0+128),w
 11285  0448  1903               	skipnz
 11286  0449  2C4B               	goto	u3491
 11287  044A  2C4C               	goto	u3490
 11288  044B                     u3491:
 11289  044B  2C65               	goto	l3342
 11290  044C                     u3490:
 11291  044C                     l3330:
 11292  044C  143C               	bsf	___fldiv@grs^(0+128),0
 11293  044D  2C65               	goto	l3342
 11294  044E                     l3332:
 11295  044E  3001               	movlw	1
 11296  044F                     u3505:
 11297  044F  35B1               	lslf	___fldiv@b^(0+128),f
 11298  0450  0DB2               	rlf	(___fldiv@b+1)^(0+128),f
 11299  0451  0DB3               	rlf	(___fldiv@b+2)^(0+128),f
 11300  0452  0DB4               	rlf	(___fldiv@b+3)^(0+128),f
 11301  0453  0B89               	decfsz	9,f
 11302  0454  2C4F               	goto	u3505
 11303  0455                     l3334:
 11304  0455  1FBF               	btfss	(___fldiv@grs+3)^(0+128),7
 11305  0456  2C58               	goto	u3511
 11306  0457  2C59               	goto	u3510
 11307  0458                     u3511:
 11308  0458  2C5A               	goto	l3338
 11309  0459                     u3510:
 11310  0459                     l3336:
 11311  0459  1431               	bsf	___fldiv@b^(0+128),0
 11312  045A                     l3338:
 11313  045A  3001               	movlw	1
 11314  045B                     u3525:
 11315  045B  35BC               	lslf	___fldiv@grs^(0+128),f
 11316  045C  0DBD               	rlf	(___fldiv@grs+1)^(0+128),f
 11317  045D  0DBE               	rlf	(___fldiv@grs+2)^(0+128),f
 11318  045E  0DBF               	rlf	(___fldiv@grs+3)^(0+128),f
 11319  045F  0B89               	decfsz	9,f
 11320  0460  2C5B               	goto	u3525
 11321  0461                     l3340:
 11322  0461  30FF               	movlw	255
 11323  0462  07BA               	addwf	___fldiv@new_exp^(0+128),f
 11324  0463  30FF               	movlw	255
 11325  0464  3DBB               	addwfc	(___fldiv@new_exp+1)^(0+128),f
 11326  0465                     l3342:
 11327  0465  1FB3               	btfss	(___fldiv@b+2)^(0+128),7
 11328  0466  2C68               	goto	u3531
 11329  0467  2C69               	goto	u3530
 11330  0468                     u3531:
 11331  0468  2C4E               	goto	l3332
 11332  0469                     u3530:
 11333  0469                     l3344:
 11334  0469  01C1               	clrf	___fldiv@aexp^(0+128)
 11335  046A                     l3346:
 11336  046A  1FBF               	btfss	(___fldiv@grs+3)^(0+128),7
 11337  046B  2C6D               	goto	u3541
 11338  046C  2C6E               	goto	u3540
 11339  046D                     u3541:
 11340  046D  2C93               	goto	l3354
 11341  046E                     u3540:
 11342  046E                     l3348:
 11343  046E  30FF               	movlw	255
 11344  046F  053C               	andwf	___fldiv@grs^(0+128),w
 11345  0470  0020               	movlb	0	; select bank0
 11346  0471  00CB               	movwf	??___fldiv
 11347  0472  30FF               	movlw	255
 11348  0473  0021               	movlb	1	; select bank1
 11349  0474  053D               	andwf	(___fldiv@grs+1)^(0+128),w
 11350  0475  0020               	movlb	0	; select bank0
 11351  0476  00CC               	movwf	??___fldiv+1
 11352  0477  30FF               	movlw	255
 11353  0478  0021               	movlb	1	; select bank1
 11354  0479  053E               	andwf	(___fldiv@grs+2)^(0+128),w
 11355  047A  0020               	movlb	0	; select bank0
 11356  047B  00CD               	movwf	??___fldiv+2
 11357  047C  307F               	movlw	127
 11358  047D  0021               	movlb	1	; select bank1
 11359  047E  053F               	andwf	(___fldiv@grs+3)^(0+128),w
 11360  047F  0020               	movlb	0	; select bank0
 11361  0480  00CE               	movwf	??___fldiv+3
 11362  0481  084E               	movf	??___fldiv+3,w
 11363  0482  044D               	iorwf	??___fldiv+2,w
 11364  0483  044C               	iorwf	??___fldiv+1,w
 11365  0484  044B               	iorwf	??___fldiv,w
 11366  0485  1903               	skipnz
 11367  0486  2C88               	goto	u3551
 11368  0487  2C89               	goto	u3550
 11369  0488                     u3551:
 11370  0488  2C8D               	goto	l1029
 11371  0489                     u3550:
 11372  0489                     l3350:
 11373  0489  0021               	movlb	1	; select bank1
 11374  048A  01C1               	clrf	___fldiv@aexp^(0+128)
 11375  048B  0AC1               	incf	___fldiv@aexp^(0+128),f
 11376  048C  2C93               	goto	l3354
 11377  048D                     l1029:
 11378  048D  0021               	movlb	1	; select bank1
 11379  048E  1C31               	btfss	___fldiv@b^(0+128),0
 11380  048F  2C91               	goto	u3561
 11381  0490  2C92               	goto	u3560
 11382  0491                     u3561:
 11383  0491  2C93               	goto	l3354
 11384  0492                     u3560:
 11385  0492  2C89               	goto	l3350
 11386  0493                     l3354:
 11387  0493  0841               	movf	___fldiv@aexp^(0+128),w
 11388  0494  1903               	btfsc	3,2
 11389  0495  2C97               	goto	u3571
 11390  0496  2C98               	goto	u3570
 11391  0497                     u3571:
 11392  0497  2CCE               	goto	l3364
 11393  0498                     u3570:
 11394  0498                     l3356:
 11395  0498  3001               	movlw	1
 11396  0499  07B1               	addwf	___fldiv@b^(0+128),f
 11397  049A  3000               	movlw	0
 11398  049B  3DB2               	addwfc	(___fldiv@b+1)^(0+128),f
 11399  049C  3000               	movlw	0
 11400  049D  3DB3               	addwfc	(___fldiv@b+2)^(0+128),f
 11401  049E  3000               	movlw	0
 11402  049F  3DB4               	addwfc	(___fldiv@b+3)^(0+128),f
 11403  04A0                     l3358:
 11404  04A0  1C34               	btfss	(___fldiv@b+3)^(0+128),0
 11405  04A1  2CA3               	goto	u3581
 11406  04A2  2CA4               	goto	u3580
 11407  04A3                     u3581:
 11408  04A3  2CCE               	goto	l3364
 11409  04A4                     u3580:
 11410  04A4                     l3360:
 11411  04A4  0831               	movf	___fldiv@b^(0+128),w
 11412  04A5  0020               	movlb	0	; select bank0
 11413  04A6  00CB               	movwf	??___fldiv
 11414  04A7  0021               	movlb	1	; select bank1
 11415  04A8  0832               	movf	(___fldiv@b+1)^(0+128),w
 11416  04A9  0020               	movlb	0	; select bank0
 11417  04AA  00CC               	movwf	??___fldiv+1
 11418  04AB  0021               	movlb	1	; select bank1
 11419  04AC  0833               	movf	(___fldiv@b+2)^(0+128),w
 11420  04AD  0020               	movlb	0	; select bank0
 11421  04AE  00CD               	movwf	??___fldiv+2
 11422  04AF  0021               	movlb	1	; select bank1
 11423  04B0  0834               	movf	(___fldiv@b+3)^(0+128),w
 11424  04B1  0020               	movlb	0	; select bank0
 11425  04B2  00CE               	movwf	??___fldiv+3
 11426  04B3  3001               	movlw	1
 11427  04B4  00CF               	movwf	??___fldiv+4
 11428  04B5                     u3595:
 11429  04B5  37CE               	asrf	??___fldiv+3,f
 11430  04B6  0CCD               	rrf	??___fldiv+2,f
 11431  04B7  0CCC               	rrf	??___fldiv+1,f
 11432  04B8  0CCB               	rrf	??___fldiv,f
 11433  04B9                     u3590:
 11434  04B9  0BCF               	decfsz	??___fldiv+4,f
 11435  04BA  2CB5               	goto	u3595
 11436  04BB  084E               	movf	??___fldiv+3,w
 11437  04BC  0021               	movlb	1	; select bank1
 11438  04BD  00B4               	movwf	(___fldiv@b+3)^(0+128)
 11439  04BE  0020               	movlb	0	; select bank0
 11440  04BF  084D               	movf	??___fldiv+2,w
 11441  04C0  0021               	movlb	1	; select bank1
 11442  04C1  00B3               	movwf	(___fldiv@b+2)^(0+128)
 11443  04C2  0020               	movlb	0	; select bank0
 11444  04C3  084C               	movf	??___fldiv+1,w
 11445  04C4  0021               	movlb	1	; select bank1
 11446  04C5  00B2               	movwf	(___fldiv@b+1)^(0+128)
 11447  04C6  0020               	movlb	0	; select bank0
 11448  04C7  084B               	movf	??___fldiv,w
 11449  04C8  0021               	movlb	1	; select bank1
 11450  04C9  00B1               	movwf	___fldiv@b^(0+128)
 11451  04CA                     l3362:
 11452  04CA  3001               	movlw	1
 11453  04CB  07BA               	addwf	___fldiv@new_exp^(0+128),f
 11454  04CC  3000               	movlw	0
 11455  04CD  3DBB               	addwfc	(___fldiv@new_exp+1)^(0+128),f
 11456  04CE                     l3364:
 11457  04CE  083B               	movf	(___fldiv@new_exp+1)^(0+128),w
 11458  04CF  3A80               	xorlw	128
 11459  04D0  0020               	movlb	0	; select bank0
 11460  04D1  00CB               	movwf	??___fldiv
 11461  04D2  3080               	movlw	128
 11462  04D3  024B               	subwf	??___fldiv,w
 11463  04D4  1D03               	skipz
 11464  04D5  2CD9               	goto	u3605
 11465  04D6  30FF               	movlw	255
 11466  04D7  0021               	movlb	1	; select bank1
 11467  04D8  023A               	subwf	___fldiv@new_exp^(0+128),w
 11468  04D9                     u3605:
 11469  04D9  1C03               	skipc
 11470  04DA  2CDC               	goto	u3601
 11471  04DB  2CDD               	goto	u3600
 11472  04DC                     u3601:
 11473  04DC  2CEA               	goto	l1034
 11474  04DD                     u3600:
 11475  04DD                     l3366:
 11476  04DD  30FF               	movlw	255
 11477  04DE  0021               	movlb	1	; select bank1
 11478  04DF  00BA               	movwf	___fldiv@new_exp^(0+128)
 11479  04E0  3000               	movlw	0
 11480  04E1  00BB               	movwf	(___fldiv@new_exp^(0+128)+1)
 11481  04E2  3000               	movlw	0
 11482  04E3  00B4               	movwf	(___fldiv@b+3)^(0+128)
 11483  04E4  3000               	movlw	0
 11484  04E5  00B3               	movwf	(___fldiv@b+2)^(0+128)
 11485  04E6  3000               	movlw	0
 11486  04E7  00B2               	movwf	(___fldiv@b+1)^(0+128)
 11487  04E8  3000               	movlw	0
 11488  04E9  00B1               	movwf	___fldiv@b^(0+128)
 11489  04EA                     l1034:
 11490  04EA  0021               	movlb	1	; select bank1
 11491  04EB  083B               	movf	(___fldiv@new_exp+1)^(0+128),w
 11492  04EC  3A80               	xorlw	128
 11493  04ED  0020               	movlb	0	; select bank0
 11494  04EE  00CB               	movwf	??___fldiv
 11495  04EF  3080               	movlw	128
 11496  04F0  024B               	subwf	??___fldiv,w
 11497  04F1  1D03               	skipz
 11498  04F2  2CF6               	goto	u3615
 11499  04F3  3001               	movlw	1
 11500  04F4  0021               	movlb	1	; select bank1
 11501  04F5  023A               	subwf	___fldiv@new_exp^(0+128),w
 11502  04F6                     u3615:
 11503  04F6  1803               	skipnc
 11504  04F7  2CF9               	goto	u3611
 11505  04F8  2CFA               	goto	u3610
 11506  04F9                     u3611:
 11507  04F9  2D06               	goto	l1035
 11508  04FA                     u3610:
 11509  04FA                     l3368:
 11510  04FA  0021               	movlb	1	; select bank1
 11511  04FB  01BA               	clrf	___fldiv@new_exp^(0+128)
 11512  04FC  01BB               	clrf	(___fldiv@new_exp+1)^(0+128)
 11513  04FD                     l3370:
 11514  04FD  3000               	movlw	0
 11515  04FE  00B4               	movwf	(___fldiv@b+3)^(0+128)
 11516  04FF  3000               	movlw	0
 11517  0500  00B3               	movwf	(___fldiv@b+2)^(0+128)
 11518  0501  3000               	movlw	0
 11519  0502  00B2               	movwf	(___fldiv@b+1)^(0+128)
 11520  0503  3000               	movlw	0
 11521  0504  00B1               	movwf	___fldiv@b^(0+128)
 11522  0505                     l3372:
 11523  0505  01B9               	clrf	___fldiv@sign^(0+128)
 11524  0506                     l1035:
 11525  0506  0021               	movlb	1	; select bank1
 11526  0507  083A               	movf	___fldiv@new_exp^(0+128),w
 11527  0508  0020               	movlb	0	; select bank0
 11528  0509  00CB               	movwf	??___fldiv
 11529  050A  084B               	movf	??___fldiv,w
 11530  050B  0021               	movlb	1	; select bank1
 11531  050C  00C0               	movwf	___fldiv@bexp^(0+128)
 11532  050D                     l3374:
 11533  050D  1C40               	btfss	___fldiv@bexp^(0+128),0
 11534  050E  2D10               	goto	u3621
 11535  050F  2D11               	goto	u3620
 11536  0510                     u3621:
 11537  0510  2D13               	goto	l3378
 11538  0511                     u3620:
 11539  0511                     l3376:
 11540  0511  17B3               	bsf	(___fldiv@b^(0+128)+2),7
 11541  0512  2D19               	goto	l1037
 11542  0513                     l3378:
 11543  0513  307F               	movlw	127
 11544  0514  0020               	movlb	0	; select bank0
 11545  0515  00CB               	movwf	??___fldiv
 11546  0516  084B               	movf	??___fldiv,w
 11547  0517  0021               	movlb	1	; select bank1
 11548  0518  05B3               	andwf	(___fldiv@b^(0+128)+2),f
 11549  0519                     l1037:
 11550  0519  3640               	lsrf	___fldiv@bexp^(0+128),w
 11551  051A  0020               	movlb	0	; select bank0
 11552  051B  00CB               	movwf	??___fldiv
 11553  051C  084B               	movf	??___fldiv,w
 11554  051D  0021               	movlb	1	; select bank1
 11555  051E  00B4               	movwf	(___fldiv@b^(0+128)+3)
 11556  051F  0839               	movf	___fldiv@sign^(0+128),w
 11557  0520  0020               	movlb	0	; select bank0
 11558  0521  00CB               	movwf	??___fldiv
 11559  0522  084B               	movf	??___fldiv,w
 11560  0523  0021               	movlb	1	; select bank1
 11561  0524  04B4               	iorwf	(___fldiv@b^(0+128)+3),f
 11562  0525  2BB7               	goto	l3288
 11563  0526                     l1015:
 11564  0526  0008               	return
 11565  0527                     __end_of___fldiv:
 11566                           
 11567                           	psect	text28
 11568  08F1                     __ptext28:	
 11569 ;; *************** function _SYSTEM_Initialize *****************
 11570 ;; Defined at:
 11571 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11572 ;; Parameters:    Size  Location     Type
 11573 ;;		None
 11574 ;; Auto vars:     Size  Location     Type
 11575 ;;		None
 11576 ;; Return value:  Size  Location     Type
 11577 ;;                  1    wreg      void 
 11578 ;; Registers used:
 11579 ;;		wreg, status,2, status,0, pclath, cstack
 11580 ;; Tracked objects:
 11581 ;;		On entry : 0/0
 11582 ;;		On exit  : 0/0
 11583 ;;		Unchanged: 0/0
 11584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11589 ;;Total ram usage:        0 bytes
 11590 ;; Hardware stack levels used: 1
 11591 ;; Hardware stack levels required when called: 9
 11592 ;; This function calls:
 11593 ;;		_ADC_Initialize
 11594 ;;		_EUSART_Initialize
 11595 ;;		_OSCILLATOR_Initialize
 11596 ;;		_PIN_MANAGER_Initialize
 11597 ;;		_PWM3_Initialize
 11598 ;;		_PWM4_Initialize
 11599 ;;		_TMR2_Initialize
 11600 ;;		_TMR4_Initialize
 11601 ;; This function is called by:
 11602 ;;		_main
 11603 ;; This function uses a non-reentrant model
 11604 ;;
 11605                           
 11606  08F1                     _SYSTEM_Initialize:	
 11607                           ;psect for function _SYSTEM_Initialize
 11608                           
 11609  08F1                     l2590:	
 11610                           ;incstack = 0
 11611                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11612                           
 11613                           
 11614                           ;mcc_generated_files/mcc.c: 52:     PIN_MANAGER_Initialize();
 11615  08F1  318A  2283  3188   	fcall	_PIN_MANAGER_Initialize
 11616                           
 11617                           ;mcc_generated_files/mcc.c: 53:     OSCILLATOR_Initialize();
 11618  08F4  3188  206F  3188   	fcall	_OSCILLATOR_Initialize
 11619                           
 11620                           ;mcc_generated_files/mcc.c: 54:     ADC_Initialize();
 11621  08F7  3188  2045  3188   	fcall	_ADC_Initialize
 11622                           
 11623                           ;mcc_generated_files/mcc.c: 55:     PWM4_Initialize();
 11624  08FA  3188  2059  3188   	fcall	_PWM4_Initialize
 11625                           
 11626                           ;mcc_generated_files/mcc.c: 56:     TMR4_Initialize();
 11627  08FD  3188  20C1  3188   	fcall	_TMR4_Initialize
 11628                           
 11629                           ;mcc_generated_files/mcc.c: 57:     PWM3_Initialize();
 11630  0900  3188  204E  3188   	fcall	_PWM3_Initialize
 11631                           
 11632                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 11633  0903  3188  207B  3188   	fcall	_TMR2_Initialize
 11634                           
 11635                           ;mcc_generated_files/mcc.c: 59:     EUSART_Initialize();
 11636  0906  3189  21FE  3188   	fcall	_EUSART_Initialize
 11637  0909                     l97:
 11638  0909  0008               	return
 11639  090A                     __end_of_SYSTEM_Initialize:
 11640                           
 11641                           	psect	text29
 11642  08C1                     __ptext29:	
 11643 ;; *************** function _TMR4_Initialize *****************
 11644 ;; Defined at:
 11645 ;;		line 64 in file "mcc_generated_files/tmr4.c"
 11646 ;; Parameters:    Size  Location     Type
 11647 ;;		None
 11648 ;; Auto vars:     Size  Location     Type
 11649 ;;		None
 11650 ;; Return value:  Size  Location     Type
 11651 ;;                  1    wreg      void 
 11652 ;; Registers used:
 11653 ;;		wreg, status,2, status,0, pclath, cstack
 11654 ;; Tracked objects:
 11655 ;;		On entry : 0/0
 11656 ;;		On exit  : 0/0
 11657 ;;		Unchanged: 0/0
 11658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11663 ;;Total ram usage:        0 bytes
 11664 ;; Hardware stack levels used: 1
 11665 ;; Hardware stack levels required when called: 8
 11666 ;; This function calls:
 11667 ;;		_TMR4_SetInterruptHandler
 11668 ;; This function is called by:
 11669 ;;		_SYSTEM_Initialize
 11670 ;; This function uses a non-reentrant model
 11671 ;;
 11672                           
 11673  08C1                     _TMR4_Initialize:	
 11674                           ;psect for function _TMR4_Initialize
 11675                           
 11676  08C1                     l2440:	
 11677                           ;incstack = 0
 11678                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11679                           
 11680                           
 11681                           ;mcc_generated_files/tmr4.c: 69:     T4CLKCON = 0x00;
 11682  08C1  0028               	movlb	8	; select bank8
 11683  08C2  0197               	clrf	23	;volatile
 11684  08C3                     l2442:
 11685                           
 11686                           ;mcc_generated_files/tmr4.c: 72:     T4HLT = 0x20;
 11687  08C3  3020               	movlw	32
 11688  08C4  0096               	movwf	22	;volatile
 11689  08C5                     l2444:
 11690                           
 11691                           ;mcc_generated_files/tmr4.c: 75:     T4RST = 0x00;
 11692  08C5  0198               	clrf	24	;volatile
 11693                           
 11694                           ;mcc_generated_files/tmr4.c: 78:     T4PR = 0xFF;
 11695  08C6  30FF               	movlw	255
 11696  08C7  0094               	movwf	20	;volatile
 11697  08C8                     l2446:
 11698                           
 11699                           ;mcc_generated_files/tmr4.c: 81:     T4TMR = 0x00;
 11700  08C8  0193               	clrf	19	;volatile
 11701  08C9                     l2448:
 11702                           
 11703                           ;mcc_generated_files/tmr4.c: 84:     PIR2bits.TMR4IF = 0;
 11704  08C9  0020               	movlb	0	; select bank0
 11705  08CA  1091               	bcf	17,1	;volatile
 11706  08CB                     l2450:
 11707                           
 11708                           ;mcc_generated_files/tmr4.c: 87:     PIE2bits.TMR4IE = 1;
 11709  08CB  0021               	movlb	1	; select bank1
 11710  08CC  1491               	bsf	17,1	;volatile
 11711  08CD                     l2452:
 11712                           
 11713                           ;mcc_generated_files/tmr4.c: 90:     TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandl
      +                          er);
 11714  08CD  3003               	movlw	low _TMR4_DefaultInterruptHandler
 11715  08CE  0020               	movlb	0	; select bank0
 11716  08CF  00B0               	movwf	TMR4_SetInterruptHandler@InterruptHandler
 11717  08D0  3000               	movlw	high _TMR4_DefaultInterruptHandler
 11718  08D1  00B1               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
 11719  08D2  3188  202B  3188   	fcall	_TMR4_SetInterruptHandler
 11720  08D5                     l2454:
 11721                           
 11722                           ;mcc_generated_files/tmr4.c: 93:     T4CON = 0xF0;
 11723  08D5  30F0               	movlw	240
 11724  08D6  0028               	movlb	8	; select bank8
 11725  08D7  0095               	movwf	21	;volatile
 11726  08D8                     l536:
 11727  08D8  0008               	return
 11728  08D9                     __end_of_TMR4_Initialize:
 11729                           
 11730                           	psect	text30
 11731  082B                     __ptext30:	
 11732 ;; *************** function _TMR4_SetInterruptHandler *****************
 11733 ;; Defined at:
 11734 ;;		line 193 in file "mcc_generated_files/tmr4.c"
 11735 ;; Parameters:    Size  Location     Type
 11736 ;;  InterruptHan    2   16[BANK0 ] PTR FTN()void 
 11737 ;;		 -> TMR4_DefaultInterruptHandler(1), display_animation_timer_isr(1), 
 11738 ;; Auto vars:     Size  Location     Type
 11739 ;;		None
 11740 ;; Return value:  Size  Location     Type
 11741 ;;                  1    wreg      void 
 11742 ;; Registers used:
 11743 ;;		wreg
 11744 ;; Tracked objects:
 11745 ;;		On entry : 0/0
 11746 ;;		On exit  : 0/0
 11747 ;;		Unchanged: 0/0
 11748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11749 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11752 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11753 ;;Total ram usage:        2 bytes
 11754 ;; Hardware stack levels used: 1
 11755 ;; Hardware stack levels required when called: 7
 11756 ;; This function calls:
 11757 ;;		Nothing
 11758 ;; This function is called by:
 11759 ;;		_tm1637Init
 11760 ;;		_TMR4_Initialize
 11761 ;; This function uses a non-reentrant model
 11762 ;;
 11763                           
 11764  082B                     _TMR4_SetInterruptHandler:	
 11765                           ;psect for function _TMR4_SetInterruptHandler
 11766                           
 11767  082B                     l2286:	
 11768                           ;incstack = 0
 11769                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
 11770                           
 11771                           
 11772                           ;mcc_generated_files/tmr4.c: 194:     TMR4_InterruptHandler = InterruptHandler;
 11773  082B  0020               	movlb	0	; select bank0
 11774  082C  0831               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
 11775  082D  00D3               	movwf	_TMR4_InterruptHandler+1
 11776  082E  0830               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
 11777  082F  00D2               	movwf	_TMR4_InterruptHandler
 11778  0830                     l585:
 11779  0830  0008               	return
 11780  0831                     __end_of_TMR4_SetInterruptHandler:
 11781                           
 11782                           	psect	text31
 11783  087B                     __ptext31:	
 11784 ;; *************** function _TMR2_Initialize *****************
 11785 ;; Defined at:
 11786 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 11787 ;; Parameters:    Size  Location     Type
 11788 ;;		None
 11789 ;; Auto vars:     Size  Location     Type
 11790 ;;		None
 11791 ;; Return value:  Size  Location     Type
 11792 ;;                  1    wreg      void 
 11793 ;; Registers used:
 11794 ;;		wreg, status,2
 11795 ;; Tracked objects:
 11796 ;;		On entry : 0/0
 11797 ;;		On exit  : 0/0
 11798 ;;		Unchanged: 0/0
 11799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11804 ;;Total ram usage:        0 bytes
 11805 ;; Hardware stack levels used: 1
 11806 ;; Hardware stack levels required when called: 7
 11807 ;; This function calls:
 11808 ;;		Nothing
 11809 ;; This function is called by:
 11810 ;;		_SYSTEM_Initialize
 11811 ;; This function uses a non-reentrant model
 11812 ;;
 11813                           
 11814  087B                     _TMR2_Initialize:	
 11815                           ;psect for function _TMR2_Initialize
 11816                           
 11817  087B                     l2456:	
 11818                           ;incstack = 0
 11819                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 11820                           
 11821                           
 11822                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x00;
 11823  087B  0020               	movlb	0	; select bank0
 11824  087C  019E               	clrf	30	;volatile
 11825  087D                     l2458:
 11826                           
 11827                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x20;
 11828  087D  3020               	movlw	32
 11829  087E  009D               	movwf	29	;volatile
 11830  087F                     l2460:
 11831                           
 11832                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 11833  087F  019F               	clrf	31	;volatile
 11834                           
 11835                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
 11836  0880  30FF               	movlw	255
 11837  0881  009B               	movwf	27	;volatile
 11838  0882                     l2462:
 11839                           
 11840                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 11841  0882  019A               	clrf	26	;volatile
 11842  0883                     l2464:
 11843                           
 11844                           ;mcc_generated_files/tmr2.c: 82:     PIR1bits.TMR2IF = 0;
 11845  0883  1090               	bcf	16,1	;volatile
 11846  0884                     l2466:
 11847                           
 11848                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
 11849  0884  3080               	movlw	128
 11850  0885  009C               	movwf	28	;volatile
 11851  0886                     l170:
 11852  0886  0008               	return
 11853  0887                     __end_of_TMR2_Initialize:
 11854                           
 11855                           	psect	text32
 11856  0859                     __ptext32:	
 11857 ;; *************** function _PWM4_Initialize *****************
 11858 ;; Defined at:
 11859 ;;		line 58 in file "mcc_generated_files/pwm4.c"
 11860 ;; Parameters:    Size  Location     Type
 11861 ;;		None
 11862 ;; Auto vars:     Size  Location     Type
 11863 ;;		None
 11864 ;; Return value:  Size  Location     Type
 11865 ;;                  1    wreg      void 
 11866 ;; Registers used:
 11867 ;;		wreg, status,2, status,0
 11868 ;; Tracked objects:
 11869 ;;		On entry : 0/0
 11870 ;;		On exit  : 0/0
 11871 ;;		Unchanged: 0/0
 11872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11877 ;;Total ram usage:        0 bytes
 11878 ;; Hardware stack levels used: 1
 11879 ;; Hardware stack levels required when called: 7
 11880 ;; This function calls:
 11881 ;;		Nothing
 11882 ;; This function is called by:
 11883 ;;		_SYSTEM_Initialize
 11884 ;; This function uses a non-reentrant model
 11885 ;;
 11886                           
 11887  0859                     _PWM4_Initialize:	
 11888                           ;psect for function _PWM4_Initialize
 11889                           
 11890  0859                     l2436:	
 11891                           ;incstack = 0
 11892                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 11893                           
 11894                           
 11895                           ;mcc_generated_files/pwm4.c: 62:     PWM4CON = 0x80;
 11896  0859  3080               	movlw	128
 11897  085A  002C               	movlb	12	; select bank12
 11898  085B  009C               	movwf	28	;volatile
 11899                           
 11900                           ;mcc_generated_files/pwm4.c: 65:     PWM4DCH = 0x7F;
 11901  085C  307F               	movlw	127
 11902  085D  009B               	movwf	27	;volatile
 11903                           
 11904                           ;mcc_generated_files/pwm4.c: 68:     PWM4DCL = 0xC0;
 11905  085E  30C0               	movlw	192
 11906  085F  009A               	movwf	26	;volatile
 11907  0860                     l2438:
 11908                           
 11909                           ;mcc_generated_files/pwm4.c: 71:     CCPTMRSbits.P4TSEL = 0;
 11910  0860  303F               	movlw	-193
 11911  0861  0025               	movlb	5	; select bank5
 11912  0862  059E               	andwf	30,f	;volatile
 11913  0863                     l315:
 11914  0863  0008               	return
 11915  0864                     __end_of_PWM4_Initialize:
 11916                           
 11917                           	psect	text33
 11918  084E                     __ptext33:	
 11919 ;; *************** function _PWM3_Initialize *****************
 11920 ;; Defined at:
 11921 ;;		line 58 in file "mcc_generated_files/pwm3.c"
 11922 ;; Parameters:    Size  Location     Type
 11923 ;;		None
 11924 ;; Auto vars:     Size  Location     Type
 11925 ;;		None
 11926 ;; Return value:  Size  Location     Type
 11927 ;;                  1    wreg      void 
 11928 ;; Registers used:
 11929 ;;		wreg, status,2, status,0
 11930 ;; Tracked objects:
 11931 ;;		On entry : 0/0
 11932 ;;		On exit  : 0/0
 11933 ;;		Unchanged: 0/0
 11934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11939 ;;Total ram usage:        0 bytes
 11940 ;; Hardware stack levels used: 1
 11941 ;; Hardware stack levels required when called: 7
 11942 ;; This function calls:
 11943 ;;		Nothing
 11944 ;; This function is called by:
 11945 ;;		_SYSTEM_Initialize
 11946 ;; This function uses a non-reentrant model
 11947 ;;
 11948                           
 11949  084E                     _PWM3_Initialize:	
 11950                           ;psect for function _PWM3_Initialize
 11951                           
 11952  084E                     l2380:	
 11953                           ;incstack = 0
 11954                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 11955                           
 11956                           
 11957                           ;mcc_generated_files/pwm3.c: 62:     PWM3CON = 0x80;
 11958  084E  3080               	movlw	128
 11959  084F  002C               	movlb	12	; select bank12
 11960  0850  0099               	movwf	25	;volatile
 11961                           
 11962                           ;mcc_generated_files/pwm3.c: 65:     PWM3DCH = 0x7F;
 11963  0851  307F               	movlw	127
 11964  0852  0098               	movwf	24	;volatile
 11965                           
 11966                           ;mcc_generated_files/pwm3.c: 68:     PWM3DCL = 0xC0;
 11967  0853  30C0               	movlw	192
 11968  0854  0097               	movwf	23	;volatile
 11969  0855                     l2382:
 11970                           
 11971                           ;mcc_generated_files/pwm3.c: 71:     CCPTMRSbits.P3TSEL = 0;
 11972  0855  30CF               	movlw	-49
 11973  0856  0025               	movlb	5	; select bank5
 11974  0857  059E               	andwf	30,f	;volatile
 11975  0858                     l11:
 11976  0858  0008               	return
 11977  0859                     __end_of_PWM3_Initialize:
 11978                           
 11979                           	psect	text34
 11980  0A83                     __ptext34:	
 11981 ;; *************** function _PIN_MANAGER_Initialize *****************
 11982 ;; Defined at:
 11983 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 11984 ;; Parameters:    Size  Location     Type
 11985 ;;		None
 11986 ;; Auto vars:     Size  Location     Type
 11987 ;;		None
 11988 ;; Return value:  Size  Location     Type
 11989 ;;                  1    wreg      void 
 11990 ;; Registers used:
 11991 ;;		wreg, status,2
 11992 ;; Tracked objects:
 11993 ;;		On entry : 0/0
 11994 ;;		On exit  : 0/0
 11995 ;;		Unchanged: 0/0
 11996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12001 ;;Total ram usage:        0 bytes
 12002 ;; Hardware stack levels used: 1
 12003 ;; Hardware stack levels required when called: 7
 12004 ;; This function calls:
 12005 ;;		Nothing
 12006 ;; This function is called by:
 12007 ;;		_SYSTEM_Initialize
 12008 ;; This function uses a non-reentrant model
 12009 ;;
 12010                           
 12011  0A83                     _PIN_MANAGER_Initialize:	
 12012                           ;psect for function _PIN_MANAGER_Initialize
 12013                           
 12014  0A83                     l2386:	
 12015                           ;incstack = 0
 12016                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12017                           
 12018                           
 12019                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 12020  0A83  0022               	movlb	2	; select bank2
 12021  0A84  018C               	clrf	12	;volatile
 12022                           
 12023                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 12024  0A85  018D               	clrf	13	;volatile
 12025                           
 12026                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 12027  0A86  018E               	clrf	14	;volatile
 12028  0A87                     l2388:
 12029                           
 12030                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x13;
 12031  0A87  3013               	movlw	19
 12032  0A88  0021               	movlb	1	; select bank1
 12033  0A89  008C               	movwf	12	;volatile
 12034  0A8A                     l2390:
 12035                           
 12036                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
 12037  0A8A  3070               	movlw	112
 12038  0A8B  008D               	movwf	13	;volatile
 12039  0A8C                     l2392:
 12040                           
 12041                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x1C;
 12042  0A8C  301C               	movlw	28
 12043  0A8D  008E               	movwf	14	;volatile
 12044  0A8E                     l2394:
 12045                           
 12046                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xCC;
 12047  0A8E  30CC               	movlw	204
 12048  0A8F  0023               	movlb	3	; select bank3
 12049  0A90  008E               	movwf	14	;volatile
 12050  0A91                     l2396:
 12051                           
 12052                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x30;
 12053  0A91  3030               	movlw	48
 12054  0A92  008D               	movwf	13	;volatile
 12055  0A93                     l2398:
 12056                           
 12057                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x11;
 12058  0A93  3011               	movlw	17
 12059  0A94  008C               	movwf	12	;volatile
 12060                           
 12061                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
 12062  0A95  0024               	movlb	4	; select bank4
 12063  0A96  018D               	clrf	13	;volatile
 12064                           
 12065                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
 12066  0A97  018C               	clrf	12	;volatile
 12067                           
 12068                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 12069  0A98  018E               	clrf	14	;volatile
 12070  0A99                     l2400:
 12071                           
 12072                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
 12073  0A99  0021               	movlb	1	; select bank1
 12074  0A9A  1795               	bsf	21,7	;volatile
 12075                           
 12076                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
 12077  0A9B  0025               	movlb	5	; select bank5
 12078  0A9C  018C               	clrf	12	;volatile
 12079                           
 12080                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
 12081  0A9D  018D               	clrf	13	;volatile
 12082                           
 12083                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
 12084  0A9E  018E               	clrf	14	;volatile
 12085  0A9F                     l2402:
 12086                           
 12087                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0x37;
 12088  0A9F  3037               	movlw	55
 12089  0AA0  0026               	movlb	6	; select bank6
 12090  0AA1  008C               	movwf	12	;volatile
 12091  0AA2                     l2404:
 12092                           
 12093                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xF0;
 12094  0AA2  30F0               	movlw	240
 12095  0AA3  008D               	movwf	13	;volatile
 12096  0AA4                     l2406:
 12097                           
 12098                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
 12099  0AA4  30FF               	movlw	255
 12100  0AA5  008E               	movwf	14	;volatile
 12101  0AA6                     l2408:
 12102                           
 12103                           ;mcc_generated_files/pin_manager.c: 103:     INLVLA = 0x3F;
 12104  0AA6  303F               	movlw	63
 12105  0AA7  0027               	movlb	7	; select bank7
 12106  0AA8  008C               	movwf	12	;volatile
 12107  0AA9                     l2410:
 12108                           
 12109                           ;mcc_generated_files/pin_manager.c: 104:     INLVLB = 0xF0;
 12110  0AA9  30F0               	movlw	240
 12111  0AAA  008D               	movwf	13	;volatile
 12112  0AAB                     l2412:
 12113                           
 12114                           ;mcc_generated_files/pin_manager.c: 105:     INLVLC = 0xFF;
 12115  0AAB  30FF               	movlw	255
 12116  0AAC  008E               	movwf	14	;volatile
 12117  0AAD                     l2414:
 12118                           
 12119                           ;mcc_generated_files/pin_manager.c: 114:     RB7PPS = 0x12;
 12120  0AAD  3012               	movlw	18
 12121  0AAE  003D               	movlb	29	; select bank29
 12122  0AAF  009F               	movwf	31	;volatile
 12123  0AB0                     l2416:
 12124                           
 12125                           ;mcc_generated_files/pin_manager.c: 115:     RC6PPS = 0x0E;
 12126  0AB0  300E               	movlw	14
 12127  0AB1  00A6               	movwf	38	;volatile
 12128  0AB2                     l2418:
 12129                           
 12130                           ;mcc_generated_files/pin_manager.c: 116:     RC7PPS = 0x0F;
 12131  0AB2  300F               	movlw	15
 12132  0AB3  00A7               	movwf	39	;volatile
 12133  0AB4                     l67:
 12134  0AB4  0008               	return
 12135  0AB5                     __end_of_PIN_MANAGER_Initialize:
 12136                           
 12137                           	psect	text35
 12138  086F                     __ptext35:	
 12139 ;; *************** function _OSCILLATOR_Initialize *****************
 12140 ;; Defined at:
 12141 ;;		line 62 in file "mcc_generated_files/mcc.c"
 12142 ;; Parameters:    Size  Location     Type
 12143 ;;		None
 12144 ;; Auto vars:     Size  Location     Type
 12145 ;;		None
 12146 ;; Return value:  Size  Location     Type
 12147 ;;                  1    wreg      void 
 12148 ;; Registers used:
 12149 ;;		wreg, status,2
 12150 ;; Tracked objects:
 12151 ;;		On entry : 0/0
 12152 ;;		On exit  : 0/0
 12153 ;;		Unchanged: 0/0
 12154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12159 ;;Total ram usage:        0 bytes
 12160 ;; Hardware stack levels used: 1
 12161 ;; Hardware stack levels required when called: 7
 12162 ;; This function calls:
 12163 ;;		Nothing
 12164 ;; This function is called by:
 12165 ;;		_SYSTEM_Initialize
 12166 ;; This function uses a non-reentrant model
 12167 ;;
 12168                           
 12169  086F                     _OSCILLATOR_Initialize:	
 12170                           ;psect for function _OSCILLATOR_Initialize
 12171                           
 12172  086F                     l2420:	
 12173                           ;incstack = 0
 12174                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12175                           
 12176                           
 12177                           ;mcc_generated_files/mcc.c: 65:     OSCCON = 0x70;
 12178  086F  3070               	movlw	112
 12179  0870  0021               	movlb	1	; select bank1
 12180  0871  0099               	movwf	25	;volatile
 12181  0872                     l2422:
 12182                           
 12183                           ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
 12184  0872  0198               	clrf	24	;volatile
 12185  0873                     l2424:
 12186                           
 12187                           ;mcc_generated_files/mcc.c: 69:     BORCON = 0x00;
 12188  0873  0022               	movlb	2	; select bank2
 12189  0874  0196               	clrf	22	;volatile
 12190  0875                     l100:	
 12191                           ;mcc_generated_files/mcc.c: 72:     {;mcc_generated_files/mcc.c: 73:     }
 12192                           
 12193                           
 12194                           ;mcc_generated_files/mcc.c: 71:     while(PLLR == 0)
 12195  0875  0021               	movlb	1	; select bank1
 12196  0876  1F1A               	btfss	26,6	;volatile
 12197  0877  2879               	goto	u1861
 12198  0878  287A               	goto	u1860
 12199  0879                     u1861:
 12200  0879  2875               	goto	l100
 12201  087A                     u1860:
 12202  087A                     l103:
 12203  087A  0008               	return
 12204  087B                     __end_of_OSCILLATOR_Initialize:
 12205                           
 12206                           	psect	text36
 12207  09FE                     __ptext36:	
 12208 ;; *************** function _EUSART_Initialize *****************
 12209 ;; Defined at:
 12210 ;;		line 66 in file "mcc_generated_files/eusart.c"
 12211 ;; Parameters:    Size  Location     Type
 12212 ;;		None
 12213 ;; Auto vars:     Size  Location     Type
 12214 ;;		None
 12215 ;; Return value:  Size  Location     Type
 12216 ;;                  1    wreg      void 
 12217 ;; Registers used:
 12218 ;;		wreg, status,2, status,0, pclath, cstack
 12219 ;; Tracked objects:
 12220 ;;		On entry : 0/0
 12221 ;;		On exit  : 0/0
 12222 ;;		Unchanged: 0/0
 12223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12228 ;;Total ram usage:        0 bytes
 12229 ;; Hardware stack levels used: 1
 12230 ;; Hardware stack levels required when called: 8
 12231 ;; This function calls:
 12232 ;;		_EUSART_SetErrorHandler
 12233 ;;		_EUSART_SetFramingErrorHandler
 12234 ;;		_EUSART_SetOverrunErrorHandler
 12235 ;; This function is called by:
 12236 ;;		_SYSTEM_Initialize
 12237 ;; This function uses a non-reentrant model
 12238 ;;
 12239                           
 12240  09FE                     _EUSART_Initialize:	
 12241                           ;psect for function _EUSART_Initialize
 12242                           
 12243  09FE                     l2468:	
 12244                           ;incstack = 0
 12245                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12246                           
 12247                           
 12248                           ;mcc_generated_files/eusart.c: 71:     BAUD1CON = 0x08;
 12249  09FE  3008               	movlw	8
 12250  09FF  0023               	movlb	3	; select bank3
 12251  0A00  009F               	movwf	31	;volatile
 12252                           
 12253                           ;mcc_generated_files/eusart.c: 74:     RC1STA = 0x80;
 12254  0A01  3080               	movlw	128
 12255  0A02  009D               	movwf	29	;volatile
 12256                           
 12257                           ;mcc_generated_files/eusart.c: 77:     TX1STA = 0x24;
 12258  0A03  3024               	movlw	36
 12259  0A04  009E               	movwf	30	;volatile
 12260                           
 12261                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x40;
 12262  0A05  3040               	movlw	64
 12263  0A06  009B               	movwf	27	;volatile
 12264                           
 12265                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x03;
 12266  0A07  3003               	movlw	3
 12267  0A08  009C               	movwf	28	;volatile
 12268  0A09                     l2470:
 12269                           
 12270                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
 12271  0A09  3000               	movlw	0
 12272  0A0A  0020               	movlb	0	; select bank0
 12273  0A0B  00B0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
 12274  0A0C  3000               	movlw	0
 12275  0A0D  00B1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
 12276  0A0E  3188  201F  3189   	fcall	_EUSART_SetFramingErrorHandler
 12277  0A11                     l2472:
 12278                           
 12279                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
 12280  0A11  3000               	movlw	0
 12281  0A12  0020               	movlb	0	; select bank0
 12282  0A13  00B0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
 12283  0A14  3000               	movlw	0
 12284  0A15  00B1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
 12285  0A16  3188  2025  3189   	fcall	_EUSART_SetOverrunErrorHandler
 12286  0A19                     l2474:
 12287                           
 12288                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
 12289  0A19  3000               	movlw	0
 12290  0A1A  0020               	movlb	0	; select bank0
 12291  0A1B  00B0               	movwf	EUSART_SetErrorHandler@interruptHandler
 12292  0A1C  3000               	movlw	0
 12293  0A1D  00B1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
 12294  0A1E  3188  2019  3189   	fcall	_EUSART_SetErrorHandler
 12295  0A21                     l2476:
 12296                           
 12297                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
 12298  0A21  0020               	movlb	0	; select bank0
 12299  0A22  01DF               	clrf	_eusartRxLastError	;volatile
 12300  0A23                     l253:
 12301  0A23  0008               	return
 12302  0A24                     __end_of_EUSART_Initialize:
 12303                           
 12304                           	psect	text37
 12305  0825                     __ptext37:	
 12306 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 12307 ;; Defined at:
 12308 ;;		line 170 in file "mcc_generated_files/eusart.c"
 12309 ;; Parameters:    Size  Location     Type
 12310 ;;  interruptHan    2   16[BANK0 ] PTR FTN()void 
 12311 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 12312 ;; Auto vars:     Size  Location     Type
 12313 ;;		None
 12314 ;; Return value:  Size  Location     Type
 12315 ;;                  1    wreg      void 
 12316 ;; Registers used:
 12317 ;;		wreg
 12318 ;; Tracked objects:
 12319 ;;		On entry : 0/0
 12320 ;;		On exit  : 0/0
 12321 ;;		Unchanged: 0/0
 12322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12323 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12326 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12327 ;;Total ram usage:        2 bytes
 12328 ;; Hardware stack levels used: 1
 12329 ;; Hardware stack levels required when called: 7
 12330 ;; This function calls:
 12331 ;;		Nothing
 12332 ;; This function is called by:
 12333 ;;		_EUSART_Initialize
 12334 ;; This function uses a non-reentrant model
 12335 ;;
 12336                           
 12337  0825                     _EUSART_SetOverrunErrorHandler:	
 12338                           ;psect for function _EUSART_SetOverrunErrorHandler
 12339                           
 12340  0825                     l2272:	
 12341                           ;incstack = 0
 12342                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
 12343                           
 12344                           
 12345                           ;mcc_generated_files/eusart.c: 171:     EUSART_OverrunErrorHandler = interruptHandler;
 12346  0825  0020               	movlb	0	; select bank0
 12347  0826  0831               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
 12348  0827  00D7               	movwf	_EUSART_OverrunErrorHandler+1
 12349  0828  0830               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
 12350  0829  00D6               	movwf	_EUSART_OverrunErrorHandler
 12351  082A                     l301:
 12352  082A  0008               	return
 12353  082B                     __end_of_EUSART_SetOverrunErrorHandler:
 12354                           
 12355                           	psect	text38
 12356  081F                     __ptext38:	
 12357 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 12358 ;; Defined at:
 12359 ;;		line 166 in file "mcc_generated_files/eusart.c"
 12360 ;; Parameters:    Size  Location     Type
 12361 ;;  interruptHan    2   16[BANK0 ] PTR FTN()void 
 12362 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;		None
 12365 ;; Return value:  Size  Location     Type
 12366 ;;                  1    wreg      void 
 12367 ;; Registers used:
 12368 ;;		wreg
 12369 ;; Tracked objects:
 12370 ;;		On entry : 0/0
 12371 ;;		On exit  : 0/0
 12372 ;;		Unchanged: 0/0
 12373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12374 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12377 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12378 ;;Total ram usage:        2 bytes
 12379 ;; Hardware stack levels used: 1
 12380 ;; Hardware stack levels required when called: 7
 12381 ;; This function calls:
 12382 ;;		Nothing
 12383 ;; This function is called by:
 12384 ;;		_EUSART_Initialize
 12385 ;; This function uses a non-reentrant model
 12386 ;;
 12387                           
 12388  081F                     _EUSART_SetFramingErrorHandler:	
 12389                           ;psect for function _EUSART_SetFramingErrorHandler
 12390                           
 12391  081F                     l2270:	
 12392                           ;incstack = 0
 12393                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
 12394                           
 12395                           
 12396                           ;mcc_generated_files/eusart.c: 167:     EUSART_FramingErrorHandler = interruptHandler;
 12397  081F  0020               	movlb	0	; select bank0
 12398  0820  0831               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
 12399  0821  00D9               	movwf	_EUSART_FramingErrorHandler+1
 12400  0822  0830               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
 12401  0823  00D8               	movwf	_EUSART_FramingErrorHandler
 12402  0824                     l298:
 12403  0824  0008               	return
 12404  0825                     __end_of_EUSART_SetFramingErrorHandler:
 12405                           
 12406                           	psect	text39
 12407  0819                     __ptext39:	
 12408 ;; *************** function _EUSART_SetErrorHandler *****************
 12409 ;; Defined at:
 12410 ;;		line 174 in file "mcc_generated_files/eusart.c"
 12411 ;; Parameters:    Size  Location     Type
 12412 ;;  interruptHan    2   16[BANK0 ] PTR FTN()void 
 12413 ;;		 -> EUSART_DefaultErrorHandler(1), 
 12414 ;; Auto vars:     Size  Location     Type
 12415 ;;		None
 12416 ;; Return value:  Size  Location     Type
 12417 ;;                  1    wreg      void 
 12418 ;; Registers used:
 12419 ;;		wreg
 12420 ;; Tracked objects:
 12421 ;;		On entry : 0/0
 12422 ;;		On exit  : 0/0
 12423 ;;		Unchanged: 0/0
 12424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12425 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12428 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12429 ;;Total ram usage:        2 bytes
 12430 ;; Hardware stack levels used: 1
 12431 ;; Hardware stack levels required when called: 7
 12432 ;; This function calls:
 12433 ;;		Nothing
 12434 ;; This function is called by:
 12435 ;;		_EUSART_Initialize
 12436 ;; This function uses a non-reentrant model
 12437 ;;
 12438                           
 12439  0819                     _EUSART_SetErrorHandler:	
 12440                           ;psect for function _EUSART_SetErrorHandler
 12441                           
 12442  0819                     l2274:	
 12443                           ;incstack = 0
 12444                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
 12445                           
 12446                           
 12447                           ;mcc_generated_files/eusart.c: 175:     EUSART_ErrorHandler = interruptHandler;
 12448  0819  0020               	movlb	0	; select bank0
 12449  081A  0831               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
 12450  081B  00D5               	movwf	_EUSART_ErrorHandler+1
 12451  081C  0830               	movf	EUSART_SetErrorHandler@interruptHandler,w
 12452  081D  00D4               	movwf	_EUSART_ErrorHandler
 12453  081E                     l304:
 12454  081E  0008               	return
 12455  081F                     __end_of_EUSART_SetErrorHandler:
 12456                           
 12457                           	psect	text40
 12458  0845                     __ptext40:	
 12459 ;; *************** function _ADC_Initialize *****************
 12460 ;; Defined at:
 12461 ;;		line 67 in file "mcc_generated_files/adc.c"
 12462 ;; Parameters:    Size  Location     Type
 12463 ;;		None
 12464 ;; Auto vars:     Size  Location     Type
 12465 ;;		None
 12466 ;; Return value:  Size  Location     Type
 12467 ;;                  1    wreg      void 
 12468 ;; Registers used:
 12469 ;;		wreg, status,2
 12470 ;; Tracked objects:
 12471 ;;		On entry : 0/0
 12472 ;;		On exit  : 0/0
 12473 ;;		Unchanged: 0/0
 12474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12479 ;;Total ram usage:        0 bytes
 12480 ;; Hardware stack levels used: 1
 12481 ;; Hardware stack levels required when called: 7
 12482 ;; This function calls:
 12483 ;;		Nothing
 12484 ;; This function is called by:
 12485 ;;		_SYSTEM_Initialize
 12486 ;; This function uses a non-reentrant model
 12487 ;;
 12488                           
 12489  0845                     _ADC_Initialize:	
 12490                           ;psect for function _ADC_Initialize
 12491                           
 12492  0845                     l2426:	
 12493                           ;incstack = 0
 12494                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 12495                           
 12496                           
 12497                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0xD0;
 12498  0845  30D0               	movlw	208
 12499  0846  0021               	movlb	1	; select bank1
 12500  0847  009E               	movwf	30	;volatile
 12501  0848                     l2428:
 12502                           
 12503                           ;mcc_generated_files/adc.c: 75:     ADCON2 = 0x00;
 12504  0848  019F               	clrf	31	;volatile
 12505  0849                     l2430:
 12506                           
 12507                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
 12508  0849  019B               	clrf	27	;volatile
 12509  084A                     l2432:
 12510                           
 12511                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
 12512  084A  019C               	clrf	28	;volatile
 12513  084B                     l2434:
 12514                           
 12515                           ;mcc_generated_files/adc.c: 84:     ADCON0 = 0x03;
 12516  084B  3003               	movlw	3
 12517  084C  009D               	movwf	29	;volatile
 12518  084D                     l122:
 12519  084D  0008               	return
 12520  084E                     __end_of_ADC_Initialize:
 12521                           
 12522                           	psect	text41
 12523  0995                     __ptext41:	
 12524 ;; *************** function _ADC_GetConversion *****************
 12525 ;; Defined at:
 12526 ;;		line 115 in file "mcc_generated_files/adc.c"
 12527 ;; Parameters:    Size  Location     Type
 12528 ;;  channel         1    wreg     enum E9638
 12529 ;; Auto vars:     Size  Location     Type
 12530 ;;  channel         1   19[BANK0 ] enum E9638
 12531 ;; Return value:  Size  Location     Type
 12532 ;;                  2   16[BANK0 ] unsigned short 
 12533 ;; Registers used:
 12534 ;;		wreg, status,2, status,0
 12535 ;; Tracked objects:
 12536 ;;		On entry : 0/0
 12537 ;;		On exit  : 0/0
 12538 ;;		Unchanged: 0/0
 12539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12540 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12541 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12542 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12543 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12544 ;;Total ram usage:        4 bytes
 12545 ;; Hardware stack levels used: 1
 12546 ;; Hardware stack levels required when called: 7
 12547 ;; This function calls:
 12548 ;;		Nothing
 12549 ;; This function is called by:
 12550 ;;		_main
 12551 ;; This function uses a non-reentrant model
 12552 ;;
 12553                           
 12554  0995                     _ADC_GetConversion:	
 12555                           ;psect for function _ADC_GetConversion
 12556                           
 12557                           
 12558                           ;incstack = 0
 12559                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 12560                           ;ADC_GetConversion@channel stored from wreg
 12561  0995  0020               	movlb	0	; select bank0
 12562  0996  00B3               	movwf	ADC_GetConversion@channel
 12563  0997                     l2592:
 12564                           
 12565                           ;mcc_generated_files/adc.c: 115: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 116: {;mcc_generated_files/adc.c: 118:     ADCON0bits.CHS = ch
      +                          annel;
 12566  0997  0833               	movf	ADC_GetConversion@channel,w
 12567  0998  00B2               	movwf	??_ADC_GetConversion
 12568  0999  0DB2               	rlf	??_ADC_GetConversion,f
 12569  099A  0DB2               	rlf	??_ADC_GetConversion,f
 12570  099B  0021               	movlb	1	; select bank1
 12571  099C  081D               	movf	29,w	;volatile
 12572  099D  0020               	movlb	0	; select bank0
 12573  099E  0632               	xorwf	??_ADC_GetConversion,w
 12574  099F  3983               	andlw	-125
 12575  09A0  0632               	xorwf	??_ADC_GetConversion,w
 12576  09A1  0021               	movlb	1	; select bank1
 12577  09A2  009D               	movwf	29	;volatile
 12578  09A3                     l2594:
 12579                           
 12580                           ;mcc_generated_files/adc.c: 121:     ADCON0bits.ADON = 1;
 12581  09A3  141D               	bsf	29,0	;volatile
 12582  09A4                     l2596:
 12583                           
 12584                           ;mcc_generated_files/adc.c: 124:     _delay((unsigned long)((5)*(32000000/4000000.0)));
 12585  09A4  300D               	movlw	13
 12586  09A5                     u4097:
 12587  09A5  0B89               	decfsz	9,f
 12588  09A6  29A5               	goto	u4097
 12589  09A7  0000               	nop
 12590  09A8                     l2598:
 12591                           
 12592                           ;mcc_generated_files/adc.c: 127:     ADCON0bits.GO_nDONE = 1;
 12593  09A8  0021               	movlb	1	; select bank1
 12594  09A9  149D               	bsf	29,1	;volatile
 12595  09AA                     l137:	
 12596                           ;mcc_generated_files/adc.c: 131:     {;mcc_generated_files/adc.c: 132:     }
 12597                           
 12598                           
 12599                           ;mcc_generated_files/adc.c: 130:     while (ADCON0bits.GO_nDONE)
 12600  09AA  189D               	btfsc	29,1	;volatile
 12601  09AB  29AD               	goto	u2111
 12602  09AC  29AE               	goto	u2110
 12603  09AD                     u2111:
 12604  09AD  29AA               	goto	l137
 12605  09AE                     u2110:
 12606  09AE                     l2600:
 12607                           
 12608                           ;mcc_generated_files/adc.c: 135:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 12609  09AE  081C               	movf	28,w	;volatile
 12610  09AF  0020               	movlb	0	; select bank0
 12611  09B0  00B1               	movwf	?_ADC_GetConversion+1
 12612  09B1  0021               	movlb	1	; select bank1
 12613  09B2  081B               	movf	27,w	;volatile
 12614  09B3  0020               	movlb	0	; select bank0
 12615  09B4  00B0               	movwf	?_ADC_GetConversion
 12616  09B5                     l140:
 12617  09B5  0008               	return
 12618  09B6                     __end_of_ADC_GetConversion:
 12619                           
 12620                           	psect	intentry
 12621  0004                     __pintentry:	
 12622 ;; *************** function _INTERRUPT_InterruptManager *****************
 12623 ;; Defined at:
 12624 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 12625 ;; Parameters:    Size  Location     Type
 12626 ;;		None
 12627 ;; Auto vars:     Size  Location     Type
 12628 ;;		None
 12629 ;; Return value:  Size  Location     Type
 12630 ;;                  1    wreg      void 
 12631 ;; Registers used:
 12632 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12633 ;; Tracked objects:
 12634 ;;		On entry : 0/0
 12635 ;;		On exit  : 0/0
 12636 ;;		Unchanged: 0/0
 12637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12642 ;;Total ram usage:        0 bytes
 12643 ;; Hardware stack levels used: 1
 12644 ;; Hardware stack levels required when called: 6
 12645 ;; This function calls:
 12646 ;;		_TMR4_ISR
 12647 ;; This function is called by:
 12648 ;;		Interrupt level 1
 12649 ;; This function uses a non-reentrant model
 12650 ;;
 12651                           
 12652  0004                     _INTERRUPT_InterruptManager:
 12653                           
 12654                           ;incstack = 0
 12655  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 12656                           
 12657                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12658  0005  3180               	pagesel	$
 12659  0006                     i1l3146:
 12660                           
 12661                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 12662  0006  1F0B               	btfss	11,6	;volatile
 12663  0007  2809               	goto	u312_21
 12664  0008  280A               	goto	u312_20
 12665  0009                     u312_21:
 12666  0009  2817               	goto	i1l499
 12667  000A                     u312_20:
 12668  000A                     i1l3148:
 12669                           
 12670                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE2bits.TMR4IE == 1 && PIR2bits.TMR4IF == 1)
 12671  000A  0021               	movlb	1	; select bank1
 12672  000B  1C91               	btfss	17,1	;volatile
 12673  000C  280E               	goto	u313_21
 12674  000D  280F               	goto	u313_20
 12675  000E                     u313_21:
 12676  000E  2817               	goto	i1l499
 12677  000F                     u313_20:
 12678  000F                     i1l3150:
 12679  000F  0020               	movlb	0	; select bank0
 12680  0010  1C91               	btfss	17,1	;volatile
 12681  0011  2813               	goto	u314_21
 12682  0012  2814               	goto	u314_20
 12683  0013                     u314_21:
 12684  0013  2817               	goto	i1l499
 12685  0014                     u314_20:
 12686  0014                     i1l3152:
 12687                           
 12688                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR4_ISR();
 12689  0014  3188  2094  3180   	fcall	_TMR4_ISR
 12690  0017                     i1l499:	
 12691                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 12692                           
 12693  0017  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 12694  0018  0009               	retfie
 12695  0019                     __end_of_INTERRUPT_InterruptManager:
 12696                           
 12697                           	psect	text43
 12698  0894                     __ptext43:	
 12699 ;; *************** function _TMR4_ISR *****************
 12700 ;; Defined at:
 12701 ;;		line 165 in file "mcc_generated_files/tmr4.c"
 12702 ;; Parameters:    Size  Location     Type
 12703 ;;		None
 12704 ;; Auto vars:     Size  Location     Type
 12705 ;;		None
 12706 ;; Return value:  Size  Location     Type
 12707 ;;                  1    wreg      void 
 12708 ;; Registers used:
 12709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12710 ;; Tracked objects:
 12711 ;;		On entry : 0/0
 12712 ;;		On exit  : 0/0
 12713 ;;		Unchanged: 0/0
 12714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12719 ;;Total ram usage:        0 bytes
 12720 ;; Hardware stack levels used: 1
 12721 ;; Hardware stack levels required when called: 5
 12722 ;; This function calls:
 12723 ;;		_TMR4_CallBack
 12724 ;; This function is called by:
 12725 ;;		_INTERRUPT_InterruptManager
 12726 ;; This function uses a non-reentrant model
 12727 ;;
 12728                           
 12729  0894                     _TMR4_ISR:	
 12730                           ;psect for function _TMR4_ISR
 12731                           
 12732  0894                     i1l2710:	
 12733                           ;incstack = 0
 12734                           ; Regs used in _TMR4_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12735                           
 12736                           
 12737                           ;mcc_generated_files/tmr4.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr4.c: 170:     PIR2bits.TMR4IF = 0;
 12738  0894  0020               	movlb	0	; select bank0
 12739  0895  1091               	bcf	17,1	;volatile
 12740  0896                     i1l2712:
 12741                           
 12742                           ;mcc_generated_files/tmr4.c: 173:     if (++CountCallBack >= 16)
 12743  0896  3001               	movlw	1
 12744  0897  07D0               	addwf	TMR4_ISR@CountCallBack,f	;volatile
 12745  0898  3000               	movlw	0
 12746  0899  3DD1               	addwfc	TMR4_ISR@CountCallBack+1,f	;volatile
 12747  089A  3000               	movlw	0
 12748  089B  0251               	subwf	TMR4_ISR@CountCallBack+1,w	;volatile
 12749  089C  3010               	movlw	16
 12750  089D  1903               	skipnz
 12751  089E  0250               	subwf	TMR4_ISR@CountCallBack,w	;volatile
 12752  089F  1C03               	skipc
 12753  08A0  28A2               	goto	u222_21
 12754  08A1  28A3               	goto	u222_20
 12755  08A2                     u222_21:
 12756  08A2  28A9               	goto	i1l578
 12757  08A3                     u222_20:
 12758  08A3                     i1l2714:
 12759                           
 12760                           ;mcc_generated_files/tmr4.c: 174:     {;mcc_generated_files/tmr4.c: 176:         TMR4_Ca
      +                          llBack();
 12761  08A3  3188  2087  3188   	fcall	_TMR4_CallBack
 12762  08A6                     i1l2716:
 12763                           
 12764                           ;mcc_generated_files/tmr4.c: 179:         CountCallBack = 0;
 12765  08A6  0020               	movlb	0	; select bank0
 12766  08A7  01D0               	clrf	TMR4_ISR@CountCallBack	;volatile
 12767  08A8  01D1               	clrf	TMR4_ISR@CountCallBack+1	;volatile
 12768  08A9                     i1l578:
 12769  08A9  0008               	return
 12770  08AA                     __end_of_TMR4_ISR:
 12771                           
 12772                           	psect	text44
 12773  0887                     __ptext44:	
 12774 ;; *************** function _TMR4_CallBack *****************
 12775 ;; Defined at:
 12776 ;;		line 183 in file "mcc_generated_files/tmr4.c"
 12777 ;; Parameters:    Size  Location     Type
 12778 ;;		None
 12779 ;; Auto vars:     Size  Location     Type
 12780 ;;		None
 12781 ;; Return value:  Size  Location     Type
 12782 ;;                  1    wreg      void 
 12783 ;; Registers used:
 12784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12785 ;; Tracked objects:
 12786 ;;		On entry : 0/0
 12787 ;;		On exit  : 0/0
 12788 ;;		Unchanged: 0/0
 12789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12794 ;;Total ram usage:        0 bytes
 12795 ;; Hardware stack levels used: 1
 12796 ;; Hardware stack levels required when called: 4
 12797 ;; This function calls:
 12798 ;;		Absolute function
 12799 ;;		_TMR4_DefaultInterruptHandler
 12800 ;;		_display_animation_timer_isr
 12801 ;; This function is called by:
 12802 ;;		_TMR4_ISR
 12803 ;; This function uses a non-reentrant model
 12804 ;;
 12805                           
 12806  0887                     _TMR4_CallBack:	
 12807                           ;psect for function _TMR4_CallBack
 12808                           
 12809  0887                     i1l2490:	
 12810                           ;incstack = 0
 12811                           ; Regs used in _TMR4_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12812                           
 12813                           
 12814                           ;mcc_generated_files/tmr4.c: 187:     if(TMR4_InterruptHandler)
 12815  0887  0020               	movlb	0	; select bank0
 12816  0888  0852               	movf	_TMR4_InterruptHandler,w
 12817  0889  0453               	iorwf	_TMR4_InterruptHandler+1,w
 12818  088A  1903               	btfsc	3,2
 12819  088B  288D               	goto	u188_21
 12820  088C  288E               	goto	u188_20
 12821  088D                     u188_21:
 12822  088D  2893               	goto	i1l582
 12823  088E                     u188_20:
 12824  088E                     i1l2492:
 12825                           
 12826                           ;mcc_generated_files/tmr4.c: 188:     {;mcc_generated_files/tmr4.c: 189:         TMR4_In
      +                          terruptHandler();
 12827  088E  0853               	movf	_TMR4_InterruptHandler+1,w
 12828  088F  008A               	movwf	10
 12829  0890  0852               	movf	_TMR4_InterruptHandler,w
 12830  0891  000A               	callw
 12831  0892  3188               	pagesel	$
 12832  0893                     i1l582:
 12833  0893  0008               	return
 12834  0894                     __end_of_TMR4_CallBack:
 12835                           
 12836                           	psect	text45
 12837  0003                     __ptext45:	
 12838 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 12839 ;; Defined at:
 12840 ;;		line 197 in file "mcc_generated_files/tmr4.c"
 12841 ;; Parameters:    Size  Location     Type
 12842 ;;		None
 12843 ;; Auto vars:     Size  Location     Type
 12844 ;;		None
 12845 ;; Return value:  Size  Location     Type
 12846 ;;                  1    wreg      void 
 12847 ;; Registers used:
 12848 ;;		None
 12849 ;; Tracked objects:
 12850 ;;		On entry : 0/0
 12851 ;;		On exit  : 0/0
 12852 ;;		Unchanged: 0/0
 12853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12858 ;;Total ram usage:        0 bytes
 12859 ;; Hardware stack levels used: 1
 12860 ;; This function calls:
 12861 ;;		Nothing
 12862 ;; This function is called by:
 12863 ;;		_TMR4_Initialize
 12864 ;;		_TMR4_CallBack
 12865 ;; This function uses a non-reentrant model
 12866 ;;
 12867                           
 12868  0003                     _TMR4_DefaultInterruptHandler:	
 12869                           ;psect for function _TMR4_DefaultInterruptHandler
 12870                           
 12871  0003                     i1l588:	
 12872                           ;incstack = 0
 12873                           ; Regs used in _TMR4_DefaultInterruptHandler: []
 12874                           
 12875  0003  0008               	return
 12876  0004                     __end_of_TMR4_DefaultInterruptHandler:
 12877                           
 12878                           	psect	text46
 12879  0C6C                     __ptext46:	
 12880 ;; *************** function _display_animation_timer_isr *****************
 12881 ;; Defined at:
 12882 ;;		line 39 in file "TM1637Display.c"
 12883 ;; Parameters:    Size  Location     Type
 12884 ;;		None
 12885 ;; Auto vars:     Size  Location     Type
 12886 ;;  digitArr        4   12[BANK0 ] unsigned char [4]
 12887 ;; Return value:  Size  Location     Type
 12888 ;;                  1    wreg      void 
 12889 ;; Registers used:
 12890 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12891 ;; Tracked objects:
 12892 ;;		On entry : 0/0
 12893 ;;		On exit  : 0/0
 12894 ;;		Unchanged: 0/0
 12895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12897 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12898 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12899 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12900 ;;Total ram usage:       12 bytes
 12901 ;; Hardware stack levels used: 1
 12902 ;; Hardware stack levels required when called: 3
 12903 ;; This function calls:
 12904 ;;		___llmod
 12905 ;;		_tm1637DisplayDecimalRaw
 12906 ;; This function is called by:
 12907 ;;		_tm1637Init
 12908 ;;		_TMR4_CallBack
 12909 ;; This function uses a non-reentrant model
 12910 ;;
 12911                           
 12912  0C6C                     _display_animation_timer_isr:	
 12913                           ;psect for function _display_animation_timer_isr
 12914                           
 12915  0C6C                     i1l2276:	
 12916                           ;incstack = 0
 12917                           ; Regs used in _display_animation_timer_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12918                           
 12919                           
 12920                           ;TM1637Display.c: 40:     char digitArr[4];;TM1637Display.c: 41:     *((uint32_t*)digitA
      +                          rr) = rotationMap[rotationMapIdx % rotationMapSize];
 12921  0C6C  3000               	movlw	0
 12922  0C6D  00F3               	movwf	___llmod@divisor+3
 12923  0C6E  3000               	movlw	0
 12924  0C6F  00F2               	movwf	___llmod@divisor+2
 12925  0C70  3000               	movlw	0
 12926  0C71  00F1               	movwf	___llmod@divisor+1
 12927  0C72  300C               	movlw	12
 12928  0C73  00F0               	movwf	___llmod@divisor
 12929  0C74  0020               	movlb	0	; select bank0
 12930  0C75  085E               	movf	_rotationMapIdx,w
 12931  0C76  00A4               	movwf	??_display_animation_timer_isr
 12932  0C77  01A5               	clrf	??_display_animation_timer_isr+1
 12933  0C78  01A6               	clrf	??_display_animation_timer_isr+2
 12934  0C79  01A7               	clrf	??_display_animation_timer_isr+3
 12935  0C7A  0827               	movf	??_display_animation_timer_isr+3,w
 12936  0C7B  00F7               	movwf	___llmod@dividend+3
 12937  0C7C  0826               	movf	??_display_animation_timer_isr+2,w
 12938  0C7D  00F6               	movwf	___llmod@dividend+2
 12939  0C7E  0825               	movf	??_display_animation_timer_isr+1,w
 12940  0C7F  00F5               	movwf	___llmod@dividend+1
 12941  0C80  0824               	movf	??_display_animation_timer_isr,w
 12942  0C81  00F4               	movwf	___llmod@dividend
 12943  0C82  318B  23D8  318C   	fcall	___llmod
 12944  0C85  0871               	movf	?___llmod+1,w
 12945  0C86  0085               	movwf	5
 12946  0C87  0870               	movf	?___llmod,w
 12947  0C88  0084               	movwf	4
 12948  0C89  3584               	lslf	4,f
 12949  0C8A  0D85               	rlf	5,f
 12950  0C8B  3584               	lslf	4,f
 12951  0C8C  0D85               	rlf	5,f
 12952  0C8D  3000               	movlw	low (_rotationMap| (0+32768))
 12953  0C8E  0784               	addwf	4,f
 12954  0C8F  3090               	movlw	high (_rotationMap| (0+32768))
 12955  0C90  3D85               	addwfc	5,f
 12956  0C91  3F00               	moviw [0]fsr0
 12957  0C92  0020               	movlb	0	; select bank0
 12958  0C93  00A8               	movwf	??_display_animation_timer_isr+4
 12959  0C94  3F01               	moviw [1]fsr0
 12960  0C95  00A9               	movwf	??_display_animation_timer_isr+5
 12961  0C96  3F02               	moviw [2]fsr0
 12962  0C97  00AA               	movwf	??_display_animation_timer_isr+6
 12963  0C98  3F03               	moviw [3]fsr0
 12964  0C99  00AB               	movwf	??_display_animation_timer_isr+7
 12965  0C9A  302C               	movlw	low (display_animation_timer_isr@digitArr| 0)
 12966  0C9B  0086               	movwf	6
 12967  0C9C  0187               	clrf	7
 12968  0C9D  0828               	movf	??_display_animation_timer_isr+4,w
 12969  0C9E  3FC0               	movwi [0]fsr1
 12970  0C9F  0829               	movf	??_display_animation_timer_isr+5,w
 12971  0CA0  3FC1               	movwi [1]fsr1
 12972  0CA1  082A               	movf	??_display_animation_timer_isr+6,w
 12973  0CA2  3FC2               	movwi [2]fsr1
 12974  0CA3  082B               	movf	??_display_animation_timer_isr+7,w
 12975  0CA4  3FC3               	movwi [3]fsr1
 12976  0CA5                     i1l2278:
 12977                           
 12978                           ;TM1637Display.c: 42:     tm1637DisplayDecimalRaw(displayHandle, digitArr, 0);
 12979  0CA5  302C               	movlw	(low (display_animation_timer_isr@digitArr| 0))& (0+255)
 12980  0CA6  00A4               	movwf	??_display_animation_timer_isr
 12981  0CA7  0824               	movf	??_display_animation_timer_isr,w
 12982  0CA8  00FB               	movwf	tm1637DisplayDecimalRaw@digitArr
 12983  0CA9  3000               	movlw	0
 12984  0CAA  00FC               	movwf	tm1637DisplayDecimalRaw@displaySeparator
 12985  0CAB  00FD               	movwf	tm1637DisplayDecimalRaw@displaySeparator+1
 12986  0CAC  085D               	movf	_displayHandle,w
 12987  0CAD  318D  2518  318C   	fcall	_tm1637DisplayDecimalRaw
 12988  0CB0                     i1l2280:
 12989                           
 12990                           ;TM1637Display.c: 43:     if (rotationMapIdx > 255 - rotationMapSize) {
 12991  0CB0  30F4               	movlw	244
 12992  0CB1  0020               	movlb	0	; select bank0
 12993  0CB2  025E               	subwf	_rotationMapIdx,w
 12994  0CB3  1C03               	skipc
 12995  0CB4  2CB6               	goto	u171_21
 12996  0CB5  2CB7               	goto	u171_20
 12997  0CB6                     u171_21:
 12998  0CB6  2CB9               	goto	i1l2284
 12999  0CB7                     u171_20:
 13000  0CB7                     i1l2282:
 13001                           
 13002                           ;TM1637Display.c: 44:         rotationMapIdx = 0;
 13003  0CB7  01DE               	clrf	_rotationMapIdx
 13004                           
 13005                           ;TM1637Display.c: 45:     } else {
 13006  0CB8  2CBD               	goto	i1l432
 13007  0CB9                     i1l2284:
 13008                           
 13009                           ;TM1637Display.c: 46:         rotationMapIdx += rotationAnimationStep;
 13010  0CB9  085C               	movf	_rotationAnimationStep,w
 13011  0CBA  00A4               	movwf	??_display_animation_timer_isr
 13012  0CBB  0824               	movf	??_display_animation_timer_isr,w
 13013  0CBC  07DE               	addwf	_rotationMapIdx,f
 13014  0CBD                     i1l432:
 13015  0CBD  0008               	return
 13016  0CBE                     __end_of_display_animation_timer_isr:
 13017                           
 13018                           	psect	text47
 13019  0D18                     __ptext47:	
 13020 ;; *************** function _tm1637DisplayDecimalRaw *****************
 13021 ;; Defined at:
 13022 ;;		line 90 in file "TM1637Display.c"
 13023 ;; Parameters:    Size  Location     Type
 13024 ;;  display         1    wreg     PTR volatile struct .
 13025 ;;		 -> tm1637Init@display(7), NULL(0), 
 13026 ;;  digitArr        1   11[COMMON] PTR unsigned char 
 13027 ;;		 -> display_animation_timer_isr@digitArr(4), 
 13028 ;;  displaySepar    2   12[COMMON] int 
 13029 ;; Auto vars:     Size  Location     Type
 13030 ;;  display         1    3[BANK0 ] PTR volatile struct .
 13031 ;;		 -> tm1637Init@display(7), NULL(0), 
 13032 ;;  i               2    1[BANK0 ] int 
 13033 ;; Return value:  Size  Location     Type
 13034 ;;                  1    wreg      void 
 13035 ;; Registers used:
 13036 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13037 ;; Tracked objects:
 13038 ;;		On entry : 0/0
 13039 ;;		On exit  : 0/0
 13040 ;;		Unchanged: 0/0
 13041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13042 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13043 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13044 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13045 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13046 ;;Total ram usage:        7 bytes
 13047 ;; Hardware stack levels used: 1
 13048 ;; Hardware stack levels required when called: 2
 13049 ;; This function calls:
 13050 ;;		i1__tm1637ReadResult
 13051 ;;		i1__tm1637Start
 13052 ;;		i1__tm1637Stop
 13053 ;;		i1__tm1637WriteByte
 13054 ;; This function is called by:
 13055 ;;		_display_animation_timer_isr
 13056 ;; This function uses a non-reentrant model
 13057 ;;
 13058                           
 13059  0D18                     _tm1637DisplayDecimalRaw:	
 13060                           ;psect for function _tm1637DisplayDecimalRaw
 13061                           
 13062                           
 13063                           ;incstack = 0
 13064                           ; Regs used in _tm1637DisplayDecimalRaw: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 13065                           ;tm1637DisplayDecimalRaw@display stored from wreg
 13066  0D18  0020               	movlb	0	; select bank0
 13067  0D19  00A3               	movwf	tm1637DisplayDecimalRaw@display
 13068  0D1A                     i1l2232:
 13069                           
 13070                           ;TM1637Display.c: 91:     _tm1637Start(display);
 13071  0D1A  0823               	movf	tm1637DisplayDecimalRaw@display,w
 13072  0D1B  318A  2253  318D   	fcall	i1__tm1637Start
 13073                           
 13074                           ;TM1637Display.c: 92:     _tm1637WriteByte(display, 0x40);
 13075  0D1E  3040               	movlw	64
 13076  0D1F  0020               	movlb	0	; select bank0
 13077  0D20  00A0               	movwf	??_tm1637DisplayDecimalRaw
 13078  0D21  0820               	movf	??_tm1637DisplayDecimalRaw,w
 13079  0D22  00F6               	movwf	i1__tm1637WriteByte@b
 13080  0D23  0823               	movf	tm1637DisplayDecimalRaw@display,w
 13081  0D24  318C  24BE  318D   	fcall	i1__tm1637WriteByte
 13082                           
 13083                           ;TM1637Display.c: 93:     _tm1637ReadResult(display);
 13084  0D27  0020               	movlb	0	; select bank0
 13085  0D28  0823               	movf	tm1637DisplayDecimalRaw@display,w
 13086  0D29  318A  22E8  318D   	fcall	i1__tm1637ReadResult
 13087                           
 13088                           ;TM1637Display.c: 94:     _tm1637Stop(display);
 13089  0D2C  0020               	movlb	0	; select bank0
 13090  0D2D  0823               	movf	tm1637DisplayDecimalRaw@display,w
 13091  0D2E  318B  2392  318D   	fcall	i1__tm1637Stop
 13092                           
 13093                           ;TM1637Display.c: 96:     _tm1637Start(display);
 13094  0D31  0020               	movlb	0	; select bank0
 13095  0D32  0823               	movf	tm1637DisplayDecimalRaw@display,w
 13096  0D33  318A  2253  318D   	fcall	i1__tm1637Start
 13097                           
 13098                           ;TM1637Display.c: 97:     _tm1637WriteByte(display, 0xc0);
 13099  0D36  30C0               	movlw	192
 13100  0D37  0020               	movlb	0	; select bank0
 13101  0D38  00A0               	movwf	??_tm1637DisplayDecimalRaw
 13102  0D39  0820               	movf	??_tm1637DisplayDecimalRaw,w
 13103  0D3A  00F6               	movwf	i1__tm1637WriteByte@b
 13104  0D3B  0823               	movf	tm1637DisplayDecimalRaw@display,w
 13105  0D3C  318C  24BE  318D   	fcall	i1__tm1637WriteByte
 13106                           
 13107                           ;TM1637Display.c: 98:     _tm1637ReadResult(display);
 13108  0D3F  0020               	movlb	0	; select bank0
 13109  0D40  0823               	movf	tm1637DisplayDecimalRaw@display,w
 13110  0D41  318A  22E8  318D   	fcall	i1__tm1637ReadResult
 13111  0D44                     i1l2234:
 13112                           
 13113                           ;TM1637Display.c: 100:     for (int i = 0; i < 4; ++i) {
 13114  0D44  0020               	movlb	0	; select bank0
 13115  0D45  01A1               	clrf	tm1637DisplayDecimalRaw@i
 13116  0D46  01A2               	clrf	tm1637DisplayDecimalRaw@i+1
 13117  0D47                     i1l2240:
 13118                           
 13119                           ;TM1637Display.c: 101:         _tm1637WriteByte(display, digitArr[3 - i]);
 13120  0D47  087B               	movf	tm1637DisplayDecimalRaw@digitArr,w
 13121  0D48  0020               	movlb	0	; select bank0
 13122  0D49  00A0               	movwf	??_tm1637DisplayDecimalRaw
 13123  0D4A  0821               	movf	tm1637DisplayDecimalRaw@i,w
 13124  0D4B  02A0               	subwf	??_tm1637DisplayDecimalRaw,f
 13125  0D4C  0820               	movf	??_tm1637DisplayDecimalRaw,w
 13126  0D4D  0086               	movwf	6
 13127  0D4E  0187               	clrf	7
 13128  0D4F  3F43               	moviw [3]fsr1
 13129  0D50  00F6               	movwf	i1__tm1637WriteByte@b
 13130  0D51  0823               	movf	tm1637DisplayDecimalRaw@display,w
 13131  0D52  318C  24BE  318D   	fcall	i1__tm1637WriteByte
 13132                           
 13133                           ;TM1637Display.c: 102:         _tm1637ReadResult(display);
 13134  0D55  0020               	movlb	0	; select bank0
 13135  0D56  0823               	movf	tm1637DisplayDecimalRaw@display,w
 13136  0D57  318A  22E8  318D   	fcall	i1__tm1637ReadResult
 13137  0D5A                     i1l2242:
 13138                           
 13139                           ;TM1637Display.c: 103:     }
 13140  0D5A  3001               	movlw	1
 13141  0D5B  0020               	movlb	0	; select bank0
 13142  0D5C  07A1               	addwf	tm1637DisplayDecimalRaw@i,f
 13143  0D5D  3000               	movlw	0
 13144  0D5E  3DA2               	addwfc	tm1637DisplayDecimalRaw@i+1,f
 13145  0D5F                     i1l2244:
 13146  0D5F  0822               	movf	tm1637DisplayDecimalRaw@i+1,w
 13147  0D60  3A80               	xorlw	128
 13148  0D61  00A0               	movwf	??_tm1637DisplayDecimalRaw
 13149  0D62  3080               	movlw	128
 13150  0D63  0220               	subwf	??_tm1637DisplayDecimalRaw,w
 13151  0D64  1D03               	skipz
 13152  0D65  2D68               	goto	u163_25
 13153  0D66  3004               	movlw	4
 13154  0D67  0221               	subwf	tm1637DisplayDecimalRaw@i,w
 13155  0D68                     u163_25:
 13156  0D68  1C03               	skipc
 13157  0D69  2D6B               	goto	u163_21
 13158  0D6A  2D6C               	goto	u163_20
 13159  0D6B                     u163_21:
 13160  0D6B  2D47               	goto	i1l2240
 13161  0D6C                     u163_20:
 13162  0D6C                     i1l2246:
 13163                           
 13164                           ;TM1637Display.c: 105:     _tm1637Stop(display);
 13165  0D6C  0020               	movlb	0	; select bank0
 13166  0D6D  0823               	movf	tm1637DisplayDecimalRaw@display,w
 13167  0D6E  318B  2392  318D   	fcall	i1__tm1637Stop
 13168  0D71                     i1l452:
 13169  0D71  0008               	return
 13170  0D72                     __end_of_tm1637DisplayDecimalRaw:
 13171                           
 13172                           	psect	text48
 13173  0CBE                     __ptext48:	
 13174 ;; *************** function i1__tm1637WriteByte *****************
 13175 ;; Defined at:
 13176 ;;		line 177 in file "TM1637Display.c"
 13177 ;; Parameters:    Size  Location     Type
 13178 ;;  display         1    wreg     PTR volatile struct .
 13179 ;;		 -> tm1637Init@display(7), NULL(0), 
 13180 ;;  b               1    6[COMMON] unsigned char 
 13181 ;; Auto vars:     Size  Location     Type
 13182 ;;  display         1   10[COMMON] PTR volatile struct .
 13183 ;;		 -> tm1637Init@display(7), NULL(0), 
 13184 ;;  i               2    8[COMMON] int 
 13185 ;; Return value:  Size  Location     Type
 13186 ;;                  1    wreg      void 
 13187 ;; Registers used:
 13188 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13189 ;; Tracked objects:
 13190 ;;		On entry : 0/0
 13191 ;;		On exit  : 0/0
 13192 ;;		Unchanged: 0/0
 13193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13194 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13195 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13196 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13197 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13198 ;;Total ram usage:        5 bytes
 13199 ;; Hardware stack levels used: 1
 13200 ;; Hardware stack levels required when called: 1
 13201 ;; This function calls:
 13202 ;;		i1_write_reg
 13203 ;; This function is called by:
 13204 ;;		_tm1637DisplayDecimalRaw
 13205 ;; This function uses a non-reentrant model
 13206 ;;
 13207                           
 13208  0CBE                     i1__tm1637WriteByte:	
 13209                           ;psect for function i1__tm1637WriteByte
 13210                           
 13211                           
 13212                           ;incstack = 0
 13213                           ; Regs used in i1__tm1637WriteByte: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13214                           ;i1__tm1637WriteByte@display stored from wreg
 13215  0CBE  00FA               	movwf	i1__tm1637WriteByte@display
 13216  0CBF                     i1l2208:
 13217                           
 13218                           ;TM1637Display.c: 178:     for (int i = 0; i < 8; ++i) {
 13219  0CBF  01F8               	clrf	i1__tm1637WriteByte@i
 13220  0CC0  01F9               	clrf	i1__tm1637WriteByte@i+1
 13221  0CC1                     i1l2214:
 13222                           
 13223                           ;TM1637Display.c: 179:         write_reg(display->CLK, 0);
 13224  0CC1  087A               	movf	i1__tm1637WriteByte@display,w
 13225  0CC2  3E04               	addlw	4
 13226  0CC3  0086               	movwf	6
 13227  0CC4  0187               	clrf	7
 13228  0CC5  3F40               	moviw [0]fsr1
 13229  0CC6  00F0               	movwf	i1write_reg@pin
 13230  0CC7  3F41               	moviw [1]fsr1
 13231  0CC8  00F1               	movwf	i1write_reg@pin+1
 13232  0CC9  3F42               	moviw [2]fsr1
 13233  0CCA  00F2               	movwf	i1write_reg@pin+2
 13234  0CCB  01F3               	clrf	i1write_reg@data
 13235  0CCC  3188  20AA  318C   	fcall	i1_write_reg
 13236  0CCF                     i1l2216:
 13237                           
 13238                           ;TM1637Display.c: 180:         if (b & 0x01) {
 13239  0CCF  1C76               	btfss	i1__tm1637WriteByte@b,0
 13240  0CD0  2CD2               	goto	u161_21
 13241  0CD1  2CD3               	goto	u161_20
 13242  0CD2                     u161_21:
 13243  0CD2  2CE2               	goto	i1l2220
 13244  0CD3                     u161_20:
 13245  0CD3                     i1l2218:
 13246                           
 13247                           ;TM1637Display.c: 181:             write_reg(display->DIO, 1);
 13248  0CD3  0A7A               	incf	i1__tm1637WriteByte@display,w
 13249  0CD4  0086               	movwf	6
 13250  0CD5  0187               	clrf	7
 13251  0CD6  3F40               	moviw [0]fsr1
 13252  0CD7  00F0               	movwf	i1write_reg@pin
 13253  0CD8  3F41               	moviw [1]fsr1
 13254  0CD9  00F1               	movwf	i1write_reg@pin+1
 13255  0CDA  3F42               	moviw [2]fsr1
 13256  0CDB  00F2               	movwf	i1write_reg@pin+2
 13257  0CDC  01F3               	clrf	i1write_reg@data
 13258  0CDD  0AF3               	incf	i1write_reg@data,f
 13259  0CDE  3188  20AA  318C   	fcall	i1_write_reg
 13260                           
 13261                           ;TM1637Display.c: 182:         }
 13262  0CE1  2CEF               	goto	i1l2222
 13263  0CE2                     i1l2220:
 13264                           
 13265                           ;TM1637Display.c: 184:             write_reg(display->DIO, 0);
 13266  0CE2  0A7A               	incf	i1__tm1637WriteByte@display,w
 13267  0CE3  0086               	movwf	6
 13268  0CE4  0187               	clrf	7
 13269  0CE5  3F40               	moviw [0]fsr1
 13270  0CE6  00F0               	movwf	i1write_reg@pin
 13271  0CE7  3F41               	moviw [1]fsr1
 13272  0CE8  00F1               	movwf	i1write_reg@pin+1
 13273  0CE9  3F42               	moviw [2]fsr1
 13274  0CEA  00F2               	movwf	i1write_reg@pin+2
 13275  0CEB  01F3               	clrf	i1write_reg@data
 13276  0CEC  3188  20AA  318C   	fcall	i1_write_reg
 13277  0CEF                     i1l2222:
 13278                           
 13279                           ;TM1637Display.c: 186:         _delay((unsigned long)((3)*(32000000/4000000.0)));
 13280  0CEF  3008               	movlw	8
 13281  0CF0                     u410_27:
 13282  0CF0  0B89               	decfsz	9,f
 13283  0CF1  2CF0               	goto	u410_27
 13284  0CF2                     i1l2224:
 13285                           
 13286                           ;TM1637Display.c: 187:         b >>= 1;
 13287  0CF2  1003               	clrc
 13288  0CF3  0CF6               	rrf	i1__tm1637WriteByte@b,f
 13289                           
 13290                           ;TM1637Display.c: 188:         write_reg(display->CLK, 1);
 13291  0CF4  087A               	movf	i1__tm1637WriteByte@display,w
 13292  0CF5  3E04               	addlw	4
 13293  0CF6  0086               	movwf	6
 13294  0CF7  0187               	clrf	7
 13295  0CF8  3F40               	moviw [0]fsr1
 13296  0CF9  00F0               	movwf	i1write_reg@pin
 13297  0CFA  3F41               	moviw [1]fsr1
 13298  0CFB  00F1               	movwf	i1write_reg@pin+1
 13299  0CFC  3F42               	moviw [2]fsr1
 13300  0CFD  00F2               	movwf	i1write_reg@pin+2
 13301  0CFE  01F3               	clrf	i1write_reg@data
 13302  0CFF  0AF3               	incf	i1write_reg@data,f
 13303  0D00  3188  20AA  318C   	fcall	i1_write_reg
 13304  0D03                     i1l2226:
 13305                           
 13306                           ;TM1637Display.c: 189:         _delay((unsigned long)((3)*(32000000/4000000.0)));
 13307  0D03  3008               	movlw	8
 13308  0D04                     u411_27:
 13309  0D04  0B89               	decfsz	9,f
 13310  0D05  2D04               	goto	u411_27
 13311  0D06                     i1l2228:
 13312                           
 13313                           ;TM1637Display.c: 190:     }
 13314  0D06  3001               	movlw	1
 13315  0D07  07F8               	addwf	i1__tm1637WriteByte@i,f
 13316  0D08  3000               	movlw	0
 13317  0D09  3DF9               	addwfc	i1__tm1637WriteByte@i+1,f
 13318  0D0A                     i1l2230:
 13319  0D0A  0879               	movf	i1__tm1637WriteByte@i+1,w
 13320  0D0B  3A80               	xorlw	128
 13321  0D0C  00F7               	movwf	??i1__tm1637WriteByte
 13322  0D0D  3080               	movlw	128
 13323  0D0E  0277               	subwf	??i1__tm1637WriteByte,w
 13324  0D0F  1D03               	skipz
 13325  0D10  2D13               	goto	u162_25
 13326  0D11  3008               	movlw	8
 13327  0D12  0278               	subwf	i1__tm1637WriteByte@i,w
 13328  0D13                     u162_25:
 13329  0D13  1C03               	skipc
 13330  0D14  2D16               	goto	u162_21
 13331  0D15  2D17               	goto	u162_20
 13332  0D16                     u162_21:
 13333  0D16  2CC1               	goto	i1l2214
 13334  0D17                     u162_20:
 13335  0D17                     i1l479:
 13336  0D17  0008               	return
 13337  0D18                     __end_ofi1__tm1637WriteByte:
 13338                           
 13339                           	psect	text49
 13340  0B92                     __ptext49:	
 13341 ;; *************** function i1__tm1637Stop *****************
 13342 ;; Defined at:
 13343 ;;		line 158 in file "TM1637Display.c"
 13344 ;; Parameters:    Size  Location     Type
 13345 ;;  display         1    wreg     PTR volatile struct .
 13346 ;;		 -> tm1637Init@display(7), NULL(0), 
 13347 ;; Auto vars:     Size  Location     Type
 13348 ;;  display         1    6[COMMON] PTR volatile struct .
 13349 ;;		 -> tm1637Init@display(7), NULL(0), 
 13350 ;; Return value:  Size  Location     Type
 13351 ;;                  1    wreg      void 
 13352 ;; Registers used:
 13353 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13354 ;; Tracked objects:
 13355 ;;		On entry : 0/0
 13356 ;;		On exit  : 0/0
 13357 ;;		Unchanged: 0/0
 13358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13360 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13362 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13363 ;;Total ram usage:        1 bytes
 13364 ;; Hardware stack levels used: 1
 13365 ;; Hardware stack levels required when called: 1
 13366 ;; This function calls:
 13367 ;;		i1_write_reg
 13368 ;; This function is called by:
 13369 ;;		_tm1637DisplayDecimalRaw
 13370 ;; This function uses a non-reentrant model
 13371 ;;
 13372                           
 13373  0B92                     i1__tm1637Stop:	
 13374                           ;psect for function i1__tm1637Stop
 13375                           
 13376                           
 13377                           ;incstack = 0
 13378                           ; Regs used in i1__tm1637Stop: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13379                           ;i1__tm1637Stop@display stored from wreg
 13380  0B92  00F6               	movwf	i1__tm1637Stop@display
 13381  0B93                     i1l2190:
 13382                           
 13383                           ;TM1637Display.c: 159:     write_reg(display->CLK, 0);
 13384  0B93  0876               	movf	i1__tm1637Stop@display,w
 13385  0B94  3E04               	addlw	4
 13386  0B95  0086               	movwf	6
 13387  0B96  0187               	clrf	7
 13388  0B97  3F40               	moviw [0]fsr1
 13389  0B98  00F0               	movwf	i1write_reg@pin
 13390  0B99  3F41               	moviw [1]fsr1
 13391  0B9A  00F1               	movwf	i1write_reg@pin+1
 13392  0B9B  3F42               	moviw [2]fsr1
 13393  0B9C  00F2               	movwf	i1write_reg@pin+2
 13394  0B9D  01F3               	clrf	i1write_reg@data
 13395  0B9E  3188  20AA  318B   	fcall	i1_write_reg
 13396  0BA1                     i1l2192:
 13397                           
 13398                           ;TM1637Display.c: 160:     _delay((unsigned long)((2)*(32000000/4000000.0)));
 13399  0BA1  3005               	movlw	5
 13400  0BA2                     u412_27:
 13401  0BA2  0B89               	decfsz	9,f
 13402  0BA3  2BA2               	goto	u412_27
 13403  0BA4  0000               	nop
 13404  0BA5                     i1l2194:
 13405                           
 13406                           ;TM1637Display.c: 161:     write_reg(display->DIO, 0);
 13407  0BA5  0A76               	incf	i1__tm1637Stop@display,w
 13408  0BA6  0086               	movwf	6
 13409  0BA7  0187               	clrf	7
 13410  0BA8  3F40               	moviw [0]fsr1
 13411  0BA9  00F0               	movwf	i1write_reg@pin
 13412  0BAA  3F41               	moviw [1]fsr1
 13413  0BAB  00F1               	movwf	i1write_reg@pin+1
 13414  0BAC  3F42               	moviw [2]fsr1
 13415  0BAD  00F2               	movwf	i1write_reg@pin+2
 13416  0BAE  01F3               	clrf	i1write_reg@data
 13417  0BAF  3188  20AA  318B   	fcall	i1_write_reg
 13418                           
 13419                           ;TM1637Display.c: 162:     _delay((unsigned long)((2)*(32000000/4000000.0)));
 13420  0BB2  3005               	movlw	5
 13421  0BB3                     u413_27:
 13422  0BB3  0B89               	decfsz	9,f
 13423  0BB4  2BB3               	goto	u413_27
 13424  0BB5  0000               	nop
 13425  0BB6                     i1l2196:
 13426                           
 13427                           ;TM1637Display.c: 163:     write_reg(display->CLK, 1);
 13428  0BB6  0876               	movf	i1__tm1637Stop@display,w
 13429  0BB7  3E04               	addlw	4
 13430  0BB8  0086               	movwf	6
 13431  0BB9  0187               	clrf	7
 13432  0BBA  3F40               	moviw [0]fsr1
 13433  0BBB  00F0               	movwf	i1write_reg@pin
 13434  0BBC  3F41               	moviw [1]fsr1
 13435  0BBD  00F1               	movwf	i1write_reg@pin+1
 13436  0BBE  3F42               	moviw [2]fsr1
 13437  0BBF  00F2               	movwf	i1write_reg@pin+2
 13438  0BC0  01F3               	clrf	i1write_reg@data
 13439  0BC1  0AF3               	incf	i1write_reg@data,f
 13440  0BC2  3188  20AA  318B   	fcall	i1_write_reg
 13441  0BC5                     i1l2198:
 13442                           
 13443                           ;TM1637Display.c: 164:     _delay((unsigned long)((2)*(32000000/4000000.0)));
 13444  0BC5  3005               	movlw	5
 13445  0BC6                     u414_27:
 13446  0BC6  0B89               	decfsz	9,f
 13447  0BC7  2BC6               	goto	u414_27
 13448  0BC8  0000               	nop
 13449                           
 13450                           ;TM1637Display.c: 165:     write_reg(display->DIO, 1);
 13451  0BC9  0A76               	incf	i1__tm1637Stop@display,w
 13452  0BCA  0086               	movwf	6
 13453  0BCB  0187               	clrf	7
 13454  0BCC  3F40               	moviw [0]fsr1
 13455  0BCD  00F0               	movwf	i1write_reg@pin
 13456  0BCE  3F41               	moviw [1]fsr1
 13457  0BCF  00F1               	movwf	i1write_reg@pin+1
 13458  0BD0  3F42               	moviw [2]fsr1
 13459  0BD1  00F2               	movwf	i1write_reg@pin+2
 13460  0BD2  01F3               	clrf	i1write_reg@data
 13461  0BD3  0AF3               	incf	i1write_reg@data,f
 13462  0BD4  3188  20AA  318B   	fcall	i1_write_reg
 13463  0BD7                     i1l469:
 13464  0BD7  0008               	return
 13465  0BD8                     __end_ofi1__tm1637Stop:
 13466                           
 13467                           	psect	text50
 13468  0A53                     __ptext50:	
 13469 ;; *************** function i1__tm1637Start *****************
 13470 ;; Defined at:
 13471 ;;		line 151 in file "TM1637Display.c"
 13472 ;; Parameters:    Size  Location     Type
 13473 ;;  display         1    wreg     PTR volatile struct .
 13474 ;;		 -> tm1637Init@display(7), NULL(0), 
 13475 ;; Auto vars:     Size  Location     Type
 13476 ;;  display         1    6[COMMON] PTR volatile struct .
 13477 ;;		 -> tm1637Init@display(7), NULL(0), 
 13478 ;; Return value:  Size  Location     Type
 13479 ;;                  1    wreg      void 
 13480 ;; Registers used:
 13481 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13482 ;; Tracked objects:
 13483 ;;		On entry : 0/0
 13484 ;;		On exit  : 0/0
 13485 ;;		Unchanged: 0/0
 13486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13488 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13490 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13491 ;;Total ram usage:        1 bytes
 13492 ;; Hardware stack levels used: 1
 13493 ;; Hardware stack levels required when called: 1
 13494 ;; This function calls:
 13495 ;;		i1_write_reg
 13496 ;; This function is called by:
 13497 ;;		_tm1637DisplayDecimalRaw
 13498 ;; This function uses a non-reentrant model
 13499 ;;
 13500                           
 13501  0A53                     i1__tm1637Start:	
 13502                           ;psect for function i1__tm1637Start
 13503                           
 13504                           
 13505                           ;incstack = 0
 13506                           ; Regs used in i1__tm1637Start: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13507                           ;i1__tm1637Start@display stored from wreg
 13508  0A53  00F6               	movwf	i1__tm1637Start@display
 13509  0A54                     i1l2184:
 13510                           
 13511                           ;TM1637Display.c: 152:     write_reg(display->CLK, 1);
 13512  0A54  0876               	movf	i1__tm1637Start@display,w
 13513  0A55  3E04               	addlw	4
 13514  0A56  0086               	movwf	6
 13515  0A57  0187               	clrf	7
 13516  0A58  3F40               	moviw [0]fsr1
 13517  0A59  00F0               	movwf	i1write_reg@pin
 13518  0A5A  3F41               	moviw [1]fsr1
 13519  0A5B  00F1               	movwf	i1write_reg@pin+1
 13520  0A5C  3F42               	moviw [2]fsr1
 13521  0A5D  00F2               	movwf	i1write_reg@pin+2
 13522  0A5E  01F3               	clrf	i1write_reg@data
 13523  0A5F  0AF3               	incf	i1write_reg@data,f
 13524  0A60  3188  20AA  318A   	fcall	i1_write_reg
 13525                           
 13526                           ;TM1637Display.c: 153:     write_reg(display->DIO, 1);
 13527  0A63  0A76               	incf	i1__tm1637Start@display,w
 13528  0A64  0086               	movwf	6
 13529  0A65  0187               	clrf	7
 13530  0A66  3F40               	moviw [0]fsr1
 13531  0A67  00F0               	movwf	i1write_reg@pin
 13532  0A68  3F41               	moviw [1]fsr1
 13533  0A69  00F1               	movwf	i1write_reg@pin+1
 13534  0A6A  3F42               	moviw [2]fsr1
 13535  0A6B  00F2               	movwf	i1write_reg@pin+2
 13536  0A6C  01F3               	clrf	i1write_reg@data
 13537  0A6D  0AF3               	incf	i1write_reg@data,f
 13538  0A6E  3188  20AA  318A   	fcall	i1_write_reg
 13539  0A71                     i1l2186:
 13540                           
 13541                           ;TM1637Display.c: 154:     _delay((unsigned long)((2)*(32000000/4000000.0)));
 13542  0A71  3005               	movlw	5
 13543  0A72                     u415_27:
 13544  0A72  0B89               	decfsz	9,f
 13545  0A73  2A72               	goto	u415_27
 13546  0A74  0000               	nop
 13547  0A75                     i1l2188:
 13548                           
 13549                           ;TM1637Display.c: 155:     write_reg(display->DIO, 0);
 13550  0A75  0A76               	incf	i1__tm1637Start@display,w
 13551  0A76  0086               	movwf	6
 13552  0A77  0187               	clrf	7
 13553  0A78  3F40               	moviw [0]fsr1
 13554  0A79  00F0               	movwf	i1write_reg@pin
 13555  0A7A  3F41               	moviw [1]fsr1
 13556  0A7B  00F1               	movwf	i1write_reg@pin+1
 13557  0A7C  3F42               	moviw [2]fsr1
 13558  0A7D  00F2               	movwf	i1write_reg@pin+2
 13559  0A7E  01F3               	clrf	i1write_reg@data
 13560  0A7F  3188  20AA  318A   	fcall	i1_write_reg
 13561  0A82                     i1l466:
 13562  0A82  0008               	return
 13563  0A83                     __end_ofi1__tm1637Start:
 13564                           
 13565                           	psect	text51
 13566  0AE8                     __ptext51:	
 13567 ;; *************** function i1__tm1637ReadResult *****************
 13568 ;; Defined at:
 13569 ;;		line 168 in file "TM1637Display.c"
 13570 ;; Parameters:    Size  Location     Type
 13571 ;;  display         1    wreg     PTR volatile struct .
 13572 ;;		 -> tm1637Init@display(7), NULL(0), 
 13573 ;; Auto vars:     Size  Location     Type
 13574 ;;  display         1    6[COMMON] PTR volatile struct .
 13575 ;;		 -> tm1637Init@display(7), NULL(0), 
 13576 ;; Return value:  Size  Location     Type
 13577 ;;                  1    wreg      void 
 13578 ;; Registers used:
 13579 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13580 ;; Tracked objects:
 13581 ;;		On entry : 0/0
 13582 ;;		On exit  : 0/0
 13583 ;;		Unchanged: 0/0
 13584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13588 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13589 ;;Total ram usage:        1 bytes
 13590 ;; Hardware stack levels used: 1
 13591 ;; Hardware stack levels required when called: 1
 13592 ;; This function calls:
 13593 ;;		i1_write_reg
 13594 ;; This function is called by:
 13595 ;;		_tm1637DisplayDecimalRaw
 13596 ;; This function uses a non-reentrant model
 13597 ;;
 13598                           
 13599  0AE8                     i1__tm1637ReadResult:	
 13600                           ;psect for function i1__tm1637ReadResult
 13601                           
 13602                           
 13603                           ;incstack = 0
 13604                           ; Regs used in i1__tm1637ReadResult: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13605                           ;i1__tm1637ReadResult@display stored from wreg
 13606  0AE8  00F6               	movwf	i1__tm1637ReadResult@display
 13607  0AE9                     i1l2200:
 13608                           
 13609                           ;TM1637Display.c: 169:     write_reg(display->CLK, 0);
 13610  0AE9  0876               	movf	i1__tm1637ReadResult@display,w
 13611  0AEA  3E04               	addlw	4
 13612  0AEB  0086               	movwf	6
 13613  0AEC  0187               	clrf	7
 13614  0AED  3F40               	moviw [0]fsr1
 13615  0AEE  00F0               	movwf	i1write_reg@pin
 13616  0AEF  3F41               	moviw [1]fsr1
 13617  0AF0  00F1               	movwf	i1write_reg@pin+1
 13618  0AF1  3F42               	moviw [2]fsr1
 13619  0AF2  00F2               	movwf	i1write_reg@pin+2
 13620  0AF3  01F3               	clrf	i1write_reg@data
 13621  0AF4  3188  20AA  318A   	fcall	i1_write_reg
 13622  0AF7                     i1l2202:
 13623                           
 13624                           ;TM1637Display.c: 170:     _delay((unsigned long)((5)*(32000000/4000000.0)));
 13625  0AF7  300D               	movlw	13
 13626  0AF8                     u416_27:
 13627  0AF8  0B89               	decfsz	9,f
 13628  0AF9  2AF8               	goto	u416_27
 13629  0AFA  0000               	nop
 13630  0AFB                     i1l2204:
 13631                           
 13632                           ;TM1637Display.c: 172:     write_reg(display->CLK, 1);
 13633  0AFB  0876               	movf	i1__tm1637ReadResult@display,w
 13634  0AFC  3E04               	addlw	4
 13635  0AFD  0086               	movwf	6
 13636  0AFE  0187               	clrf	7
 13637  0AFF  3F40               	moviw [0]fsr1
 13638  0B00  00F0               	movwf	i1write_reg@pin
 13639  0B01  3F41               	moviw [1]fsr1
 13640  0B02  00F1               	movwf	i1write_reg@pin+1
 13641  0B03  3F42               	moviw [2]fsr1
 13642  0B04  00F2               	movwf	i1write_reg@pin+2
 13643  0B05  01F3               	clrf	i1write_reg@data
 13644  0B06  0AF3               	incf	i1write_reg@data,f
 13645  0B07  3188  20AA  318A   	fcall	i1_write_reg
 13646                           
 13647                           ;TM1637Display.c: 173:     _delay((unsigned long)((2)*(32000000/4000000.0)));
 13648  0B0A  3005               	movlw	5
 13649  0B0B                     u417_27:
 13650  0B0B  0B89               	decfsz	9,f
 13651  0B0C  2B0B               	goto	u417_27
 13652  0B0D  0000               	nop
 13653  0B0E                     i1l2206:
 13654                           
 13655                           ;TM1637Display.c: 174:     write_reg(display->CLK, 0);
 13656  0B0E  0876               	movf	i1__tm1637ReadResult@display,w
 13657  0B0F  3E04               	addlw	4
 13658  0B10  0086               	movwf	6
 13659  0B11  0187               	clrf	7
 13660  0B12  3F40               	moviw [0]fsr1
 13661  0B13  00F0               	movwf	i1write_reg@pin
 13662  0B14  3F41               	moviw [1]fsr1
 13663  0B15  00F1               	movwf	i1write_reg@pin+1
 13664  0B16  3F42               	moviw [2]fsr1
 13665  0B17  00F2               	movwf	i1write_reg@pin+2
 13666  0B18  01F3               	clrf	i1write_reg@data
 13667  0B19  3188  20AA  318A   	fcall	i1_write_reg
 13668  0B1C                     i1l472:
 13669  0B1C  0008               	return
 13670  0B1D                     __end_ofi1__tm1637ReadResult:
 13671                           
 13672                           	psect	text52
 13673  08AA                     __ptext52:	
 13674 ;; *************** function i1_write_reg *****************
 13675 ;; Defined at:
 13676 ;;		line 11 in file "custom_pin.c"
 13677 ;; Parameters:    Size  Location     Type
 13678 ;;  pin             3    0[COMMON] volatile struct .
 13679 ;;  data            1    3[COMMON] unsigned char 
 13680 ;; Auto vars:     Size  Location     Type
 13681 ;;		None
 13682 ;; Return value:  Size  Location     Type
 13683 ;;                  1    wreg      void 
 13684 ;; Registers used:
 13685 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13686 ;; Tracked objects:
 13687 ;;		On entry : 0/0
 13688 ;;		On exit  : 0/0
 13689 ;;		Unchanged: 0/0
 13690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13691 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13693 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13694 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13695 ;;Total ram usage:        6 bytes
 13696 ;; Hardware stack levels used: 1
 13697 ;; This function calls:
 13698 ;;		Nothing
 13699 ;; This function is called by:
 13700 ;;		i1__tm1637Start
 13701 ;;		i1__tm1637Stop
 13702 ;;		i1__tm1637ReadResult
 13703 ;;		i1__tm1637WriteByte
 13704 ;; This function uses a non-reentrant model
 13705 ;;
 13706                           
 13707  08AA                     i1_write_reg:	
 13708                           ;psect for function i1_write_reg
 13709                           
 13710  08AA                     i1l2182:	
 13711                           ;incstack = 0
 13712                           ; Regs used in i1_write_reg: [wreg+fsr1l+fsr1h+status,2+status,0]
 13713                           
 13714                           
 13715                           ;custom_pin.c: 12:     *(pin.port) &= ~pin.mask;
 13716  08AA  0970               	comf	i1write_reg@pin,w	;volatile
 13717  08AB  00F4               	movwf	??i1_write_reg
 13718  08AC  0872               	movf	i1write_reg@pin+2,w	;volatile
 13719  08AD  0086               	movwf	6
 13720  08AE  0187               	clrf	7
 13721  08AF  0874               	movf	??i1_write_reg,w
 13722  08B0  0581               	andwf	1,f
 13723                           
 13724                           ;custom_pin.c: 13:     *(pin.port) |= (data << pin.pos & pin.mask);
 13725  08B1  0873               	movf	i1write_reg@data,w
 13726  08B2  00F4               	movwf	??i1_write_reg
 13727  08B3  0A71               	incf	i1write_reg@pin+1,w	;volatile
 13728  08B4  28B6               	goto	u160_24
 13729  08B5                     u160_25:
 13730  08B5  35F4               	lslf	??i1_write_reg,f
 13731  08B6                     u160_24:
 13732  08B6  0B89               	decfsz	9,f
 13733  08B7  28B5               	goto	u160_25
 13734  08B8  0874               	movf	??i1_write_reg,w
 13735  08B9  0570               	andwf	i1write_reg@pin,w	;volatile
 13736  08BA  00F5               	movwf	??i1_write_reg+1
 13737  08BB  0872               	movf	i1write_reg@pin+2,w	;volatile
 13738  08BC  0086               	movwf	6
 13739  08BD  0187               	clrf	7
 13740  08BE  0875               	movf	??i1_write_reg+1,w
 13741  08BF  0481               	iorwf	1,f
 13742  08C0                     i1l482:
 13743  08C0  0008               	return
 13744  08C1                     __end_ofi1_write_reg:
 13745                           
 13746                           	psect	text53
 13747  0BD8                     __ptext53:	
 13748 ;; *************** function ___llmod *****************
 13749 ;; Defined at:
 13750 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\llmod.c"
 13751 ;; Parameters:    Size  Location     Type
 13752 ;;  divisor         4    0[COMMON] unsigned long 
 13753 ;;  dividend        4    4[COMMON] unsigned long 
 13754 ;; Auto vars:     Size  Location     Type
 13755 ;;  counter         1    9[COMMON] unsigned char 
 13756 ;; Return value:  Size  Location     Type
 13757 ;;                  4    0[COMMON] unsigned long 
 13758 ;; Registers used:
 13759 ;;		wreg, status,2, status,0
 13760 ;; Tracked objects:
 13761 ;;		On entry : 0/0
 13762 ;;		On exit  : 0/0
 13763 ;;		Unchanged: 0/0
 13764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13765 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13767 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13768 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13769 ;;Total ram usage:       10 bytes
 13770 ;; Hardware stack levels used: 1
 13771 ;; This function calls:
 13772 ;;		Nothing
 13773 ;; This function is called by:
 13774 ;;		_display_animation_timer_isr
 13775 ;; This function uses a non-reentrant model
 13776 ;;
 13777                           
 13778  0BD8                     ___llmod:	
 13779                           ;psect for function ___llmod
 13780                           
 13781  0BD8                     i1l2250:	
 13782                           ;incstack = 0
 13783                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 13784                           
 13785  0BD8  0873               	movf	___llmod@divisor+3,w
 13786  0BD9  0472               	iorwf	___llmod@divisor+2,w
 13787  0BDA  0471               	iorwf	___llmod@divisor+1,w
 13788  0BDB  0470               	iorwf	___llmod@divisor,w
 13789  0BDC  1903               	skipnz
 13790  0BDD  2BDF               	goto	u165_21
 13791  0BDE  2BE0               	goto	u165_20
 13792  0BDF                     u165_21:
 13793  0BDF  2C19               	goto	i1l2266
 13794  0BE0                     u165_20:
 13795  0BE0                     i1l2252:
 13796  0BE0  01F9               	clrf	___llmod@counter
 13797  0BE1  0AF9               	incf	___llmod@counter,f
 13798  0BE2  2BEE               	goto	i1l2256
 13799  0BE3                     i1l2254:
 13800  0BE3  3001               	movlw	1
 13801  0BE4                     u166_25:
 13802  0BE4  35F0               	lslf	___llmod@divisor,f
 13803  0BE5  0DF1               	rlf	___llmod@divisor+1,f
 13804  0BE6  0DF2               	rlf	___llmod@divisor+2,f
 13805  0BE7  0DF3               	rlf	___llmod@divisor+3,f
 13806  0BE8  0B89               	decfsz	9,f
 13807  0BE9  2BE4               	goto	u166_25
 13808  0BEA  3001               	movlw	1
 13809  0BEB  00F8               	movwf	??___llmod
 13810  0BEC  0878               	movf	??___llmod,w
 13811  0BED  07F9               	addwf	___llmod@counter,f
 13812  0BEE                     i1l2256:
 13813  0BEE  1FF3               	btfss	___llmod@divisor+3,7
 13814  0BEF  2BF1               	goto	u167_21
 13815  0BF0  2BF2               	goto	u167_20
 13816  0BF1                     u167_21:
 13817  0BF1  2BE3               	goto	i1l2254
 13818  0BF2                     u167_20:
 13819  0BF2                     i1l2258:
 13820  0BF2  0873               	movf	___llmod@divisor+3,w
 13821  0BF3  0277               	subwf	___llmod@dividend+3,w
 13822  0BF4  1D03               	skipz
 13823  0BF5  2C00               	goto	u168_25
 13824  0BF6  0872               	movf	___llmod@divisor+2,w
 13825  0BF7  0276               	subwf	___llmod@dividend+2,w
 13826  0BF8  1D03               	skipz
 13827  0BF9  2C00               	goto	u168_25
 13828  0BFA  0871               	movf	___llmod@divisor+1,w
 13829  0BFB  0275               	subwf	___llmod@dividend+1,w
 13830  0BFC  1D03               	skipz
 13831  0BFD  2C00               	goto	u168_25
 13832  0BFE  0870               	movf	___llmod@divisor,w
 13833  0BFF  0274               	subwf	___llmod@dividend,w
 13834  0C00                     u168_25:
 13835  0C00  1C03               	skipc
 13836  0C01  2C03               	goto	u168_21
 13837  0C02  2C04               	goto	u168_20
 13838  0C03                     u168_21:
 13839  0C03  2C0C               	goto	i1l2262
 13840  0C04                     u168_20:
 13841  0C04                     i1l2260:
 13842  0C04  0870               	movf	___llmod@divisor,w
 13843  0C05  02F4               	subwf	___llmod@dividend,f
 13844  0C06  0871               	movf	___llmod@divisor+1,w
 13845  0C07  3BF5               	subwfb	___llmod@dividend+1,f
 13846  0C08  0872               	movf	___llmod@divisor+2,w
 13847  0C09  3BF6               	subwfb	___llmod@dividend+2,f
 13848  0C0A  0873               	movf	___llmod@divisor+3,w
 13849  0C0B  3BF7               	subwfb	___llmod@dividend+3,f
 13850  0C0C                     i1l2262:
 13851  0C0C  3001               	movlw	1
 13852  0C0D                     u169_25:
 13853  0C0D  36F3               	lsrf	___llmod@divisor+3,f
 13854  0C0E  0CF2               	rrf	___llmod@divisor+2,f
 13855  0C0F  0CF1               	rrf	___llmod@divisor+1,f
 13856  0C10  0CF0               	rrf	___llmod@divisor,f
 13857  0C11  0B89               	decfsz	9,f
 13858  0C12  2C0D               	goto	u169_25
 13859  0C13                     i1l2264:
 13860  0C13  3001               	movlw	1
 13861  0C14  02F9               	subwf	___llmod@counter,f
 13862  0C15  1D03               	btfss	3,2
 13863  0C16  2C18               	goto	u170_21
 13864  0C17  2C19               	goto	u170_20
 13865  0C18                     u170_21:
 13866  0C18  2BF2               	goto	i1l2258
 13867  0C19                     u170_20:
 13868  0C19                     i1l2266:
 13869  0C19  0877               	movf	___llmod@dividend+3,w
 13870  0C1A  00F3               	movwf	?___llmod+3
 13871  0C1B  0876               	movf	___llmod@dividend+2,w
 13872  0C1C  00F2               	movwf	?___llmod+2
 13873  0C1D  0875               	movf	___llmod@dividend+1,w
 13874  0C1E  00F1               	movwf	?___llmod+1
 13875  0C1F  0874               	movf	___llmod@dividend,w
 13876  0C20  00F0               	movwf	?___llmod
 13877  0C21                     i1l886:
 13878  0C21  0008               	return
 13879  0C22                     __end_of___llmod:
 13880  007E                     btemp	set	126	;btemp
 13881  007E                     int$flags	set	126
 13882  007E                     wtemp0	set	126
 13883                           
 13884                           	psect	idloc
 13885                           
 13886                           ;Config register IDLOC0 @ 0x8000
 13887                           ;	unspecified, using default values
 13888  8000                     	org	32768
 13889  8000  3FFF               	dw	16383
 13890                           
 13891                           ;Config register IDLOC1 @ 0x8001
 13892                           ;	unspecified, using default values
 13893  8001                     	org	32769
 13894  8001  3FFF               	dw	16383
 13895                           
 13896                           ;Config register IDLOC2 @ 0x8002
 13897                           ;	unspecified, using default values
 13898  8002                     	org	32770
 13899  8002  3FFF               	dw	16383
 13900                           
 13901                           ;Config register IDLOC3 @ 0x8003
 13902                           ;	unspecified, using default values
 13903  8003                     	org	32771
 13904  8003  3FFF               	dw	16383
 13905                           
 13906                           	psect	config
 13907                           
 13908                           ;Config register CONFIG1 @ 0x8007
 13909                           ;	Oscillator Selection Bits
 13910                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 13911                           ;	Power-up Timer Enable
 13912                           ;	PWRTE = OFF, PWRT disabled
 13913                           ;	MCLR Pin Function Select
 13914                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 13915                           ;	Flash Program Memory Code Protection
 13916                           ;	CP = OFF, Program memory code protection is disabled
 13917                           ;	Brown-out Reset Enable
 13918                           ;	BOREN = ON, Brown-out Reset enabled
 13919                           ;	Clock Out Enable
 13920                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 13921                           ;	Internal/External Switch Over
 13922                           ;	IESO = ON, Internal External Switch Over mode is enabled
 13923                           ;	Fail-Safe Clock Monitor Enable
 13924                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 13925  8007                     	org	32775
 13926  8007  3FFC               	dw	16380
 13927                           
 13928                           ;Config register CONFIG2 @ 0x8008
 13929                           ;	Flash Memory Self-Write Protection
 13930                           ;	WRT = OFF, Write protection off
 13931                           ;	Peripheral Pin Select one-way control
 13932                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 13933                           ;	Zero Cross Detect Disable Bit
 13934                           ;	ZCD = OFF, ZCD disable.  ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 13935                           ;	PLL Enable Bit
 13936                           ;	PLLEN = ON, 4x PLL is always enabled
 13937                           ;	Stack Overflow/Underflow Reset Enable
 13938                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 13939                           ;	Brown-out Reset Voltage Selection
 13940                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 13941                           ;	Low-Power Brown Out Reset
 13942                           ;	LPBOR = OFF, Low-Power BOR is disabled
 13943                           ;	Low-Voltage Programming Enable
 13944                           ;	LVP = ON, Low-voltage programming enabled
 13945  8008                     	org	32776
 13946  8008  3FFF               	dw	16383
 13947                           
 13948                           ;Config register CONFIG3 @ 0x8009
 13949                           ;	WDT Period Select
 13950                           ;	WDTCPS = WDTCPS1F, Software Control (WDTPS)
 13951                           ;	Watchdog Timer Enable
 13952                           ;	WDTE = OFF, WDT disabled
 13953                           ;	WDT Window Select
 13954                           ;	WDTCWS = WDTCWSSW, Software WDT window size control (WDTWS bits)
 13955                           ;	WDT Input Clock Selector
 13956                           ;	WDTCCS = SWC, Software control, controlled by WDTCS bits
 13957  8009                     	org	32777
 13958  8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    69
    Data        8
    BSS         23
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     48      64
    BANK1            80     65      80
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    tm1637CycleAnimationStop@display.port	PTR volatile unsigned char  size(1) Largest target is 0

    tm1637CycleAnimationStart@display.port	PTR volatile unsigned char  size(1) Largest target is 0

    tm1637DisplayDecimal@display.port	PTR volatile unsigned char  size(1) Largest target is 0

    tm1637DisplayDecimal@display.CLK.port	PTR volatile unsigned char  size(1) Largest target is 0

    tm1637DisplayDecimal@display.DIO.port	PTR volatile unsigned char  size(1) Largest target is 0

    tm1637SetBrightness@display.port	PTR volatile unsigned char  size(1) Largest target is 0

    tm1637SetBrightness@display.CLK.port	PTR volatile unsigned char  size(1) Largest target is 0

    tm1637SetBrightness@display.DIO.port	PTR volatile unsigned char  size(1) Largest target is 0

    _tm1637Stop@display.port	PTR volatile unsigned char  size(1) Largest target is 0

    _tm1637ReadResult@display.port	PTR volatile unsigned char  size(1) Largest target is 0

    _tm1637WriteByte@display.port	PTR volatile unsigned char  size(1) Largest target is 0

    _tm1637Start@display.port	PTR volatile unsigned char  size(1) Largest target is 0

    tm1637DisplayDecimalRaw@display.port	PTR volatile unsigned char  size(1) Largest target is 0

    tm1637DisplayDecimalRaw@display.CLK.port	PTR volatile unsigned char  size(1) Largest target is 0

    tm1637DisplayDecimalRaw@display.DIO.port	PTR volatile unsigned char  size(1) Largest target is 0

    i1__tm1637WriteByte@display.port	PTR volatile unsigned char  size(1) Largest target is 0

    i1__tm1637WriteByte@display.CLK.port	PTR volatile unsigned char  size(1) Largest target is 0

    i1__tm1637WriteByte@display.DIO.port	PTR volatile unsigned char  size(1) Largest target is 0

    i1__tm1637ReadResult@display.port	PTR volatile unsigned char  size(1) Largest target is 0

    i1__tm1637ReadResult@display.CLK.port	PTR volatile unsigned char  size(1) Largest target is 0

    i1__tm1637ReadResult@display.DIO.port	PTR volatile unsigned char  size(1) Largest target is 0

    i1__tm1637Stop@display.port	PTR volatile unsigned char  size(1) Largest target is 0

    i1__tm1637Stop@display.CLK.port	PTR volatile unsigned char  size(1) Largest target is 0

    i1__tm1637Stop@display.DIO.port	PTR volatile unsigned char  size(1) Largest target is 0

    i1__tm1637Start@display.port	PTR volatile unsigned char  size(1) Largest target is 0

    i1__tm1637Start@display.CLK.port	PTR volatile unsigned char  size(1) Largest target is 0

    i1__tm1637Start@display.DIO.port	PTR volatile unsigned char  size(1) Largest target is 0

    i1write_reg@pin.port	PTR volatile unsigned char  size(1) Largest target is 0

    tm1637Init@display.CLK.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    tm1637Init@display.DIO.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    ?_tm1637Init.port	PTR volatile unsigned char  size(1) Largest target is 0

    ?_tm1637Init.CLK.port	PTR volatile unsigned char  size(1) Largest target is 0

    ?_tm1637Init.DIO.port	PTR volatile unsigned char  size(1) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR4_DefaultInterruptHandler(), display_animation_timer_isr(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR4_DefaultInterruptHandler(), display_animation_timer_isr(), 

    S1099$port	PTR volatile unsigned char  size(1) Largest target is 0

    pin.port	PTR volatile unsigned char  size(1) Largest target is 0

    _tm1637WriteByte@display.CLK.port	PTR volatile unsigned char  size(1) Largest target is 0

    _tm1637WriteByte@display.DIO.port	PTR volatile unsigned char  size(1) Largest target is 0

    _tm1637WriteByte@display	PTR volatile struct . size(1) Largest target is 9
		 -> tm1637Init@display(BANK1[7]), NULL(NULL[0]), 

    _tm1637ReadResult@display.CLK.port	PTR volatile unsigned char  size(1) Largest target is 0

    _tm1637ReadResult@display.DIO.port	PTR volatile unsigned char  size(1) Largest target is 0

    _tm1637ReadResult@display	PTR volatile struct . size(1) Largest target is 9
		 -> tm1637Init@display(BANK1[7]), NULL(NULL[0]), 

    _tm1637Stop@display.CLK.port	PTR volatile unsigned char  size(1) Largest target is 0

    _tm1637Stop@display.DIO.port	PTR volatile unsigned char  size(1) Largest target is 0

    _tm1637Stop@display	PTR volatile struct . size(1) Largest target is 9
		 -> tm1637Init@display(BANK1[7]), NULL(NULL[0]), 

    _tm1637Start@display.CLK.port	PTR volatile unsigned char  size(1) Largest target is 0

    _tm1637Start@display.DIO.port	PTR volatile unsigned char  size(1) Largest target is 0

    _tm1637Start@display	PTR volatile struct . size(1) Largest target is 9
		 -> tm1637Init@display(BANK1[7]), NULL(NULL[0]), 

    tm1637SetBrightness@display	PTR volatile struct . size(1) Largest target is 9
		 -> tm1637Init@display(BANK1[7]), 

    tm1637DisplayDecimal@display	PTR volatile struct . size(1) Largest target is 9
		 -> tm1637Init@display(BANK1[7]), 

    tm1637DisplayDecimalRaw@digitArr	PTR unsigned char  size(1) Largest target is 4
		 -> display_animation_timer_isr@digitArr(BANK0[4]), 

    tm1637DisplayDecimalRaw@display	PTR volatile struct . size(1) Largest target is 9
		 -> tm1637Init@display(BANK1[7]), NULL(NULL[0]), 

    tm1637CycleAnimationStop@display.CLK.port	PTR volatile unsigned char  size(1) Largest target is 0

    tm1637CycleAnimationStop@display.DIO.port	PTR volatile unsigned char  size(1) Largest target is 0

    tm1637CycleAnimationStop@display	PTR volatile struct . size(1) Largest target is 9
		 -> tm1637Init@display(BANK1[7]), 

    tm1637CycleAnimationStart@display.CLK.port	PTR volatile unsigned char  size(1) Largest target is 0

    tm1637CycleAnimationStart@display.DIO.port	PTR volatile unsigned char  size(1) Largest target is 0

    displayHandle.port	PTR volatile unsigned char  size(1) Largest target is 0

    displayHandle.CLK.port	PTR volatile unsigned char  size(1) Largest target is 0

    displayHandle.DIO.port	PTR volatile unsigned char  size(1) Largest target is 0

    tm1637CycleAnimationStart@display	PTR volatile struct . size(1) Largest target is 9
		 -> tm1637Init@display(BANK1[7]), 

    sp__tm1637Init.port	PTR volatile unsigned char  size(1) Largest target is 0

    sp__tm1637Init.CLK.port	PTR volatile unsigned char  size(1) Largest target is 0

    sp__tm1637Init.DIO.port	PTR volatile unsigned char  size(1) Largest target is 0

    F10191.CLK.port	PTR volatile unsigned char  size(1) Largest target is 0

    F10191.DIO.port	PTR volatile unsigned char  size(1) Largest target is 0

    CLK.port	PTR volatile unsigned char  size(1) Largest target is 0

    S903$port	PTR volatile unsigned char  size(1) Largest target is 0

    DIO.port	PTR volatile unsigned char  size(1) Largest target is 0

    displayHandle	PTR volatile struct . size(1) Largest target is 9
		 -> tm1637Init@display(BANK1[7]), NULL(NULL[0]), 

    main@display.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    main@display.CLK.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    main@display.DIO.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    sp__tm1637Init	PTR volatile struct . size(1) Largest target is 9
		 -> tm1637Init@display(BANK1[7]), 

    main@display	PTR volatile struct . size(1) Largest target is 9
		 -> tm1637Init@display(BANK1[7]), 

    F10209.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    F10208.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    F10207.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    S671$port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    F10206.port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTA(SFR0[1]), 

    ramp_motor@gnd_controller	PTR FTN()void  size(2) Largest target is 1
		 -> PWM4_LoadDutyValue(), PWM3_LoadDutyValue(), 

    ramp_motor@speed_controller_B	PTR FTN()void  size(2) Largest target is 1
		 -> PWM4_LoadDutyValue(), 

    ramp_motor@speed_controller_A	PTR FTN()void  size(2) Largest target is 1
		 -> PWM3_LoadDutyValue(), 

    ramp_motor@speed_controller	PTR FTN()void  size(2) Largest target is 1
		 -> PWM4_LoadDutyValue(), PWM3_LoadDutyValue(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _display_animation_timer_isr->_tm1637DisplayDecimalRaw
    _tm1637DisplayDecimalRaw->i1__tm1637WriteByte
    i1__tm1637WriteByte->i1_write_reg
    i1__tm1637Stop->i1_write_reg
    i1__tm1637Start->i1_write_reg
    i1__tm1637ReadResult->i1_write_reg

Critical Paths under _main in BANK0

    _main->___fldiv
    _tm1637Init->_tm1637SetBrightness
    _tm1637SetBrightness->__tm1637WriteByte
    _tm1637DisplayDecimal->__tm1637WriteByte
    __tm1637WriteByte->_write_reg
    __tm1637Stop->_write_reg
    __tm1637Start->_write_reg
    __tm1637ReadResult->_write_reg
    _ramp_motor->_PWM3_LoadDutyValue
    _ramp_motor->_PWM4_LoadDutyValue
    _duty_cycle->___lwdiv
    ___lwdiv->___wmul
    _PWM4_LoadDutyValue->_duty_cycle
    _PWM3_LoadDutyValue->_duty_cycle
    ___fltol->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR4_CallBack->_display_animation_timer_isr
    _display_animation_timer_isr->_tm1637DisplayDecimalRaw

Critical Paths under _main in BANK1

    _main->___fltol
    ___fltol->___fldiv
    ___fldiv->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   49052
                                             45 BANK1     20    20      0
                  _ADC_GetConversion
                 _PWM3_LoadDutyValue
                 _PWM4_LoadDutyValue
                  _SYSTEM_Initialize
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                         _duty_cycle
                         _ramp_motor
          _tm1637CycleAnimationStart
           _tm1637CycleAnimationStop
               _tm1637DisplayDecimal
                         _tm1637Init
                _tm1637SetBrightness
 ---------------------------------------------------------------------------------
 (1) _tm1637Init                                           7     1      6   11373
                                             30 BANK0      7     1      6
           _TMR4_SetInterruptHandler
                     _TMR4_StopTimer
                _tm1637SetBrightness
 ---------------------------------------------------------------------------------
 (1) _tm1637SetBrightness                                  3     2      1   11003
                                             27 BANK0      3     2      1
                  __tm1637ReadResult
                       __tm1637Start
                        __tm1637Stop
                   __tm1637WriteByte
 ---------------------------------------------------------------------------------
 (1) _tm1637DisplayDecimal                                14    10      4   12483
                                             27 BANK0     14    10      4
                            ___awdiv
                            ___awmod
                  __tm1637ReadResult
                       __tm1637Start
                        __tm1637Stop
                   __tm1637WriteByte
 ---------------------------------------------------------------------------------
 (2) __tm1637WriteByte                                     5     4      1    3105
                                             22 BANK0      5     4      1
                          _write_reg
 ---------------------------------------------------------------------------------
 (2) __tm1637Stop                                          1     1      0    2516
                                             22 BANK0      1     1      0
                          _write_reg
 ---------------------------------------------------------------------------------
 (2) __tm1637Start                                         1     1      0    2494
                                             22 BANK0      1     1      0
                          _write_reg
 ---------------------------------------------------------------------------------
 (2) __tm1637ReadResult                                    1     1      0    2560
                                             22 BANK0      1     1      0
                          _write_reg
 ---------------------------------------------------------------------------------
 (3) _write_reg                                            6     2      4    2263
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     448
                                             16 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                             16 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _tm1637CycleAnimationStop                             1     1      0      55
                                             16 BANK0      1     1      0
                     _TMR4_StopTimer
 ---------------------------------------------------------------------------------
 (2) _TMR4_StopTimer                                       0     0      0       0
                          _TMR4_Stop
 ---------------------------------------------------------------------------------
 (3) _TMR4_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tm1637CycleAnimationStart                            5     4      1     417
                                             16 BANK0      5     4      1
                    _TMR4_StartTimer
 ---------------------------------------------------------------------------------
 (2) _TMR4_StartTimer                                      0     0      0       0
                         _TMR4_Start
 ---------------------------------------------------------------------------------
 (3) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ramp_motor                                          27    16     11    4231
                                             36 BANK0     11     0     11
                                              0 BANK1     16    16      0
                 _PWM3_LoadDutyValue *
                 _PWM4_LoadDutyValue *
                            ___lwdiv
                         _duty_cycle
 ---------------------------------------------------------------------------------
 (2) _duty_cycle                                           2     0      2    1758
                                             30 BANK0      2     0      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                             16 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                             22 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM4_LoadDutyValue                                   4     2      2     347
                                             32 BANK0      4     2      2
                         _duty_cycle (ARG)
 ---------------------------------------------------------------------------------
 (2) _PWM3_LoadDutyValue                                   4     2      2     152
                                             32 BANK0      4     2      2
                         _duty_cycle (ARG)
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                             16 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                             34 BANK1     11     7      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    3533
                                             30 BANK0     13     5      8
                                              0 BANK1     13    13      0
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     980
                                             16 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1863
                                             43 BANK0      5     5      0
                                             13 BANK1     21    13      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     468
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM3_Initialize
                    _PWM4_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     174
           _TMR4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR4_SetInterruptHandler                             2     0      2     174
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                             16 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                             16 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0    4760
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR4_ISR                                             0     0      0    4760
                      _TMR4_CallBack
 ---------------------------------------------------------------------------------
 (7) _TMR4_CallBack                                        0     0      0    4760
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
        _display_animation_timer_isr *
 ---------------------------------------------------------------------------------
 (8) _display_animation_timer_isr                         12    12      0    4760
                                              4 BANK0     12    12      0
                            ___llmod
            _tm1637DisplayDecimalRaw
 ---------------------------------------------------------------------------------
 (9) _tm1637DisplayDecimalRaw                              7     4      3    4402
                                             11 COMMON     3     0      3
                                              0 BANK0      4     4      0
                i1__tm1637ReadResult
                     i1__tm1637Start
                      i1__tm1637Stop
                 i1__tm1637WriteByte
 ---------------------------------------------------------------------------------
 (10) i1__tm1637WriteByte                                  5     4      1    1098
                                              6 COMMON     5     4      1
                        i1_write_reg
 ---------------------------------------------------------------------------------
 (10) i1__tm1637Stop                                       1     1      0     951
                                              6 COMMON     1     1      0
                        i1_write_reg
 ---------------------------------------------------------------------------------
 (10) i1__tm1637Start                                      1     1      0     929
                                              6 COMMON     1     1      0
                        i1_write_reg
 ---------------------------------------------------------------------------------
 (10) i1__tm1637ReadResult                                 1     1      0     929
                                              6 COMMON     1     1      0
                        i1_write_reg
 ---------------------------------------------------------------------------------
 (11) i1_write_reg                                         6     2      4     863
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___llmod                                             10     2      8     311
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (8) _TMR4_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _PWM3_LoadDutyValue
     _duty_cycle (ARG)
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _PWM4_LoadDutyValue
     _duty_cycle (ARG)
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM3_Initialize
     _PWM4_Initialize
     _TMR2_Initialize
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___fltol
     ___fldiv (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _duty_cycle
   _ramp_motor
     _PWM3_LoadDutyValue *
     _PWM4_LoadDutyValue *
     ___lwdiv *
     _duty_cycle *
   _tm1637CycleAnimationStart
     _TMR4_StartTimer
       _TMR4_Start
   _tm1637CycleAnimationStop
     _TMR4_StopTimer
       _TMR4_Stop
   _tm1637DisplayDecimal
     ___awdiv
     ___awmod
     __tm1637ReadResult
       _write_reg
     __tm1637Start
       _write_reg
     __tm1637Stop
       _write_reg
     __tm1637WriteByte
       _write_reg
   _tm1637Init
     _TMR4_SetInterruptHandler
     _TMR4_StopTimer
     _tm1637SetBrightness
       __tm1637ReadResult
       __tm1637Start
       __tm1637Stop
       __tm1637WriteByte
   _tm1637SetBrightness

 _INTERRUPT_InterruptManager (ROOT)
   _TMR4_ISR
     _TMR4_CallBack
       Absolute function(Fake) *
       _TMR4_DefaultInterruptHandler *
       _display_animation_timer_isr *
         ___llmod
         _tm1637DisplayDecimalRaw
           i1__tm1637ReadResult
             i1_write_reg
           i1__tm1637Start
             i1_write_reg
           i1__tm1637Stop
             i1_write_reg
           i1__tm1637WriteByte
             i1_write_reg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     30      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     41      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      9E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      9E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jun 13 23:35:16 2023

                                 ___fldiv@aexp 00C1                                   ___fldiv@bexp 00C0  
                    ??_tm1637DisplayDecimalRaw 0020                                   ___fldiv@sign 00B9  
                                           l11 0858                                             l14 093B  
                                           l67 0AB4                                             l97 0909  
                                 ___awdiv@sign 0036                            ___wmul@multiplicand 0032  
                                  _rotationMap 1000                            __Umul8_16@word_mpld 0036  
                                          l100 0875                                            l103 087A  
                                          l122 084D                                            l140 09B5  
                                          l301 082A                                            l304 081E  
                                          l137 09AA                                            l170 0886  
                                          l315 0863                                            l253 0A23  
                                          l318 0922                                            l351 0974  
                                          l443 09EE                                            l444 09FD  
                                          l460 0FFF                                            l365 07A8  
                                          l437 0A52                                            l551 07FF  
                                          l447 086E                                            l463 0956  
                                          l536 08D8                                            l472 0B54  
                                          l545 0810                                            l298 0824  
                                          l554 0818                                            l482 08F0  
                                          l466 0AE7                                            l548 0814  
                                          l469 0C6B                                            l822 07FC  
                                          l479 0DD0                                            l656 0980  
                                          l585 0830                                            l809 0E30  
                                          l850 0EA5                                            l658 0994  
                                          l860 0EA5                                            l936 0B91  
                                          l857 0E90                                            _PR2 001B  
                                          _PR4 0414                      ?_tm1637CycleAnimationStop 0070  
               ?_EUSART_SetFramingErrorHandler 0030                  tm1637SetBrightness@brightness 003B  
                                 ___awmod@sign 0036                                _TMR2_Initialize 087B  
                              _PWM4_Initialize 0859                                            wreg 0009  
                                i1__tm1637Stop 0B92                                   ___flmul@aexp 00A1  
                                 ___flmul@bexp 00A6                                   ___flmul@sign 00A0  
                                 ___flmul@temp 00AB                                   ___flmul@prod 00A7  
         tm1637DisplayDecimal@displaySeparator 003D                            __end_ofi1_write_reg 08C1  
                                 ___fltol@exp1 00CC                                           l1013 039D  
                                         l1110 0F1E                                           l1015 0526  
                                         l1111 0F2A                                           l1103 0F04  
                                  main@display 00E0                                           l1034 04EA  
                                         l1035 0506                                           l1037 0519  
                                         l1029 048D                                           l1053 033D  
                                         l1072 09C9                                           l1065 0328  
                                         l1074 09D9                                           l1059 0299  
                                         l2300 0D76                                           l2310 0DA9  
                                         l2302 0D85                                           l2400 0A99  
                                         l3040 0EC1                                           l2320 0B2D  
                                         l2312 0DBB                                           l2304 0D8A  
                                         l1097 0EC9                                           l2410 0AA9  
                                         l2402 0A9F                                           l3210 09D0  
                                         l3202 09B8                                           l3050 0EEA  
                                         l3042 0ED1                                           l3034 0EA8  
                                         l2322 0B31                                           l2330 0C36  
                                         l2314 0DBE                                           l2306 0D99  
                                         l1099 0F52                                           l2420 086F  
                                         l2412 0AAB                                           l2404 0AA2  
                                         l3300 03E4                                           l3212 09D5  
                                         l3204 09BA                                           l3060 0F14  
                                         l3052 0EF1                                           l3036 0EAD  
                                         l3220 0727                                           l2500 0DDC  
                                         l2324 0B45                                           l2332 0C48  
                                         l2316 0DC3                                           l2308 0DA6  
                                         l2430 0849                                           l2270 081F  
                                         l2422 0872                                           l2414 0AAD  
                                         l2406 0AA4                                           l3310 0403  
                                         l3302 03EC                                           l3206 09C1  
                                         l3070 0F45                                           l3062 0F18  
                                         l3054 0EF5                                           l3046 0EDA  
                                         l3038 0EB1                                           l3230 074B  
                                         l3222 072F                                           l2510 0DED  
                                         l2502 0DDE                                           l2318 0B1F  
                                         l2334 0C58                                           l2326 0C24  
                                         l2600 09AE                                           l2432 084A  
                                         l2272 0825                                           l2424 0873  
                                         l2416 0AB0                                           l2408 0AA6  
                                         l2440 08C1                                           l3320 042F  
                                         l3312 0411                                           l3304 03F4  
                                         l3208 09C5                                           l3400 0066  
                                         l3072 0F49                                           l3064 0F22  
                                         l3056 0EFD                                           l3048 0EDF  
                                         l3160 0985                                           l3240 0795  
                                         l3232 075D                                           l3224 0736  
                                         l3216 06C1                                           l2336 080E  
                                         l2520 0E03                                           l2512 0DF3  
                                         l2504 0DE2                                           l2248 08D9  
                                         l2328 0C32                                           l2434 084B  
                                         l2426 0845                                           l2274 0819  
                                         l2418 0AB2                                           l2450 08CB  
                                         l2442 08C3                                           l3330 044C  
                                         l3322 0430                                           l3314 0415  
                                         l3306 03FC                                           l3250 0350  
                                         l3410 0082                                           l3402 006F  
                                         l3074 0F4A                                           l3066 0F2C  
                                         l3058 0F0B                                           l3170 0B58  
                                         l3162 098A                                           l3154 0975  
                                         l3242 079A                                           l3234 0773  
                                         l3226 073C                                           l3218 0721  
                                         l2338 07FD                                           l2522 0E12  
                                         l2514 0DF6                                           l2530 0E22  
                                         l2506 0DE7                                           l2290 0AD5  
                                         l2428 0848                                           l2380 084E  
                                         l2436 0859                                           l2460 087F  
                                         l2452 08CD                                           l2444 08C5  
                                         l3340 0461                                           l3332 044E  
                                         l3324 0438                                           l3316 0416  
                                         l3308 03FE                                           l3260 0364  
                                         l3252 0351                                           l3244 033E  
                                         l3500 02D6                                           l3420 00A2  
                                         l3412 0088                                           l3404 0075  
                                         l3068 0F40                                           l3180 0B6E  
                                         l3172 0B5E                                           l3164 0990  
                                         l3156 0978                                           l3236 0777  
                                         l3228 0744                                           l2700 09EA  
                                         l2532 0E27                                           l2524 0E16  
                                         l2516 0DFB                                           l2508 0DEB  
                                         l2540 07AB                                           l2292 0AD9  
                                         l2470 0A09                                           l2390 0A8A  
                                         l2382 0855                                           l2438 0860  
                                         l2462 0882                                           l2286 082B  
                                         l2454 08D5                                           l2446 08C8  
                                         l3350 0489                                           l3334 0455  
                                         l3342 0465                                           l3318 041D  
                                         l3326 043E                                           l3270 037F  
                                         l3254 0356                                           l3262 0366  
                                         l3246 0346                                           l3510 030C  
                                         l3502 02DA                                           l3430 00C8  
                                         l3422 00A8                                           l3414 008D  
                                         l3406 007B                                           l3182 0B7D  
                                         l3174 0B61                                           l3190 0B8D  
                                         l3158 097C                                           l3238 0788  
                                         l2702 09F2                                           l2534 0E2C  
                                         l2526 0E17                                           l2518 0DFF  
                                         l2550 07BF                                           l2542 07AF  
                                         l2294 0D74                                           l2472 0A11  
                                         l2392 0A8C                                           l2464 0883  
                                         l2456 087B                                           l2448 08C9  
                                         l3360 04A4                                           l3344 0469  
                                         l3336 0459                                           l3328 0444  
                                         l3280 0393                                           l3272 0380  
                                         l3264 036E                                           l3256 035B  
                                         l3248 034C                                           l3520 032E  
                                         l3512 030E                                           l3504 02E9  
                                         l3440 0153                                           l3432 00DD  
                                         l3424 00AD                                           l3416 0096  
                                         l3408 0080                                           l2720 0E3D  
                                         l3184 0B81                                           l3176 0B66  
                                         l3168 0B55                                           l2704 09F5  
                                         l2528 0E1C                                           l2560 07D5  
                                         l2552 07C5                                           l2544 07B4  
                                         l2288 0AB7                                           l2474 0A19  
                                         l2394 0A8E                                           l2386 0A83  
                                         l2466 0884                                           l2458 087D  
                                         l3370 04FD                                           l3362 04CA  
                                         l3354 0493                                           l3346 046A  
                                         l3338 045A                                           l3274 0385  
                                         l3282 0395                                           l3266 0375  
                                         l3258 0363                                           l3514 031D  
                                         l3506 02F3                                           l3450 0198  
                                         l3442 0168                                           l3434 0103  
                                         l3418 0099                                           l2730 0E62  
                                         l3194 0923                                           l3186 0B82  
                                         l3178 0B6A                                           l2706 0866  
                                         l2570 07F3                                           l2562 07DF  
                                         l2554 07C8                                           l2546 07B6  
                                         l2538 07A9                                           l2650 0A46  
                                         l3530 054B                                           l2476 0A21  
                                         l2468 09FE                                           l2396 0A91  
                                         l2388 0A87                                           l3372 0505  
                                         l3356 0498                                           l3364 04CE  
                                         l3348 046E                                           l3284 03A5  
                                         l3292 03C0                                           l3276 038A  
                                         l3268 037B                                           l3516 0321  
                                         l3508 0303                                           l3460 01E7  
                                         l3452 019F                                           l3444 016F  
                                         l3436 0118                                           l3428 00B7  
                                         l2740 0E70                                           l2732 0E64  
                                         l2724 0E46                                           l3196 090A  
                                         l3188 0B87                                           l2708 0869  
                                         l2572 07F8                                           l2564 07E3  
                                         l2556 07CD                                           l2548 07BA  
                                         l2484 093E                                           l2652 0A49  
                                         l2644 0A24                                           l3540 055F  
                                         l3532 054C                                           l3524 0527  
                                         l2398 0A93                                           l2590 08F1  
                                         l3374 050D                                           l3366 04DD  
                                         l3358 04A0                                           l3294 03C5  
                                         l3286 03B1                                           l3278 0392  
                                         l3518 0322                                           l3470 025A  
                                         l3462 01FF                                           l3454 01B7  
                                         l3446 0180                                           l3438 013E  
                                         l3390 004D                                           l2750 0E95  
                                         l2734 0E68                                           l2742 0E80  
                                         l2726 0E59                                           l2718 0E31  
                                         l3198 0957                                           l2486 0815  
                                         l2494 0DD1                                           l2566 07E8  
                                         l2558 07D1                                           l2670 0F81  
                                         l2654 0A51                                           l2646 0A3C  
                                         l3550 059B                                           l3542 057D  
                                         l3534 054D                                           l3526 0548  
                                         l2592 0997                                           l3376 0511  
                                         l3368 04FA                                           l3288 03B7  
                                         l3472 0261                                           l3480 0271  
                                         l3464 021E                                           l3456 01BE  
                                         l3448 0187                                           l3392 004F  
                                         l3384 003B                                           l2752 0E9A  
                                         l2728 0E5A                                           l2488 0811  
                                         l2496 0DD3                                           l2568 07EE  
                                         l2680 0FD2                                           l2672 0F86  
                                         l2664 0F57                                           l2648 0A3D  
                                         l3560 0638                                           l3552 05A7  
                                         l3544 058C                                           l3536 054E  
                                         l3528 054A                                           l2594 09A3  
                                         l3378 0513                                           l3298 03CE  
                                         l3482 0275                                           l3474 0265  
                                         l3466 0243                                           l3458 01D6  
                                         l3394 0055                                           l3386 0042  
                                         l2498 0DD7                                           l2690 0FED  
                                         l2674 0F96                                           l2666 0F74  
                                         l2658 0F55                                           l3570 0663  
                                         l3562 0641                                           l3554 05B3  
                                         l3546 0599                                           l3538 0557  
                                         l2596 09A4                                           l3492 029F  
                                         l3484 0276                                           l3476 0266  
                                         l3468 024A                                           l3396 005A  
                                         l3388 0048                                           l2748 0E87  
                                         l2692 0FFA                                           l2676 0F9A  
                                         l2668 0F7B                                           l3580 0692  
                                         l3572 066B                                           l3564 0649  
                                         l3556 05F8                                           l3548 059A  
                                         l2598 09A8                                           l3494 02A4  
                                         l3486 027A                                           l3478 026D  
                                         l3398 0063                                           l2694 09DC  
                                         l2686 0FD5                                           l2678 0FA7  
                                         l3574 0673                                           l3582 0697  
                                         l3566 0652                                           l3558 062A  
                                         l3496 02AC                                           l3488 0295  
                                         l2696 09E0                                           l2688 0FE8  
                                         l3584 069C                                           l3576 067C  
                                         l3568 065B                                           l3498 02B0  
                                         l2698 09E5                                           l3586 06B3  
                                         l3578 0685                                           u2000 07BA  
                                         u2001 07B9                                           u2010 07C5  
                                         u2011 07C4                                           u2110 09AE  
                                         u2030 07D5                                           u2111 09AD  
                                         u2031 07D4                                           u3000 0F45  
                                         u2040 07DF                                           u2200 0FFA  
                                         u3001 0F44                                           u2041 07DE  
                                         u2025 07C9                                           u2201 0FF9  
                                         u3010 0F49                                           u2210 09E5  
                                         u3011 0F48                                           u2211 09E4  
                                         u2060 07EE                                           u2061 07ED  
                                         u2045 07DB                                           u2205 0FF6  
                                         _LATA 010C                                           u2310 0E95  
                                         u2230 0E3D                                           u2070 07F3  
                                         _LATB 010D                                           u2311 0E94  
                                         u2231 0E3C                                           u2071 07F2  
                                         u2055 07E4                                           _LATC 010E  
                                         u2320 0E9A                                           u2240 0E53  
                                         u2321 0E99                                           u2305 0E88  
                                         u2250 0E68                                           u3210 0B6E  
                                         u2170 0F7B                                           u2251 0E67  
                                         u3211 0B6D                                           u2171 0F7A  
                                         u3300 09D5                                           u2260 0E6F  
                                         u2180 0F81                                           u3301 09D4  
                                         u2261 0E6E                                           u2245 0E4F  
                                         u3205 0B62                                           u2181 0F80  
                                         u3230 0B7D                                           u3150 097C  
                                         u3310 0727                                           u2190 0FA7  
                                         u3231 0B7C                                           u3151 097B  
                                         u3311 0726                                           u4007 0DA7  
                                         u2191 0FA6                                           u3400 03A5  
                                         u2280 0E7F                                           u3320 073C  
                                         u1720 0D8A                                           u3401 03A4  
                                         u2281 0E7E                                           u3225 0B6F  
                                         u3321 073B                                           u4017 0DBC  
                                         u1721 0D89                                           u3410 03C5  
                                         u2290 0E86                                           u3250 0B8D  
                                         u3330 07A8                                           u1730 0DD0  
                                         _T2PR 001B                                           u3411 03C4  
                                         u2291 0E85                                           u2275 0E71  
                                         u3251 0B8C                                           u3235 0B79  
                                         u3331 07A7                                           u4027 0C33  
                                         u1731 0DCF                                           u2195 0FA3  
                                         u3420 0403                                           u3340 0350  
                                         u3180 0990                                           u1900 0DE2  
                                         u1644 08E6                                           u3421 0402  
                                         u3341 034F                                           u3245 0B83  
                                         u3181 098F                                           u3165 0981  
                                         u1901 0DE1                                           u1645 08E5  
                                         u4037 0C45                                           u3510 0459  
                                         u3350 0356                                           u3190 0B5E  
                                         u1910 0DF3                                           u3511 0458  
                                         u3351 0355                                           u3191 0B5D  
                                         u3175 0986                                           u3335 07A4  
                                         u1911 0DF2                                           u4047 0C59  
                                         u1735 0DCC                                           u3600 04DD  
                                         u3360 035B                                           u3280 09C5  
                                         u3601 04DC                                           u3505 044F  
                                         u3361 035A                                           u3281 09C4  
                                         u3265 0934                                           u4057 0AD6  
                                         u3610 04FA                                           u3530 0469  
                                         u3450 0415                                           u3370 037F  
                                         u1930 0E03                                           _T4PR 0414  
                                         u3611 04F9                                           u3531 0468  
                                         u3451 0414                                           u3435 0404  
                                         u3371 037E                                           u3275 091B  
                                         u1931 0E02                                           u4067 0B2E  
                                         u1860 087A                                           u3620 0511  
                                         u3540 046E                                           u3380 0385  
                                         u3700 00AD                                           u2900 0ED1  
                                         u1861 0879                                           u3621 0510  
                                         u3605 04D9                                           u3541 046D  
                                         u3525 045B                                           u3445 040B  
                                         u3381 0384                                           u3701 00AC  
                                         u2901 0ED0                                           u1925 0DF7  
                                         u4077 0B42                                           u3550 0489  
                                         u3470 042F                                           u3390 038A  
                                         u3630 004D                                           u1950 0E12  
                                         u3615 04F6                                           u3551 0488  
                                         u3471 042E                                           u3391 0389  
                                         u3295 09CA                                           u3631 004C  
                                         u4087 077D                                           u1951 0E11  
                                         u3560 0492                                           u3480 0444  
                                         u3800 027A                                           u3640 0055  
                                         u2920 0EF0                                           u4097 09A5  
                                         u3561 0491                                           u3481 0443  
                                         u3465 0417                                           u3801 0279  
                                         u3641 0054                                           u2921 0EEF  
                                         u1945 0E04                                           u3570 0498  
                                         u3490 044C                                           u3810 0295  
                                         u3730 020D                                           u3650 005A  
                                         u1970 0E22                                           u1890 0DD7  
                                         u3571 0497                                           u3491 044B  
                                         u3475 042B                                           u3811 0294  
                                         u3715 0169                                           u3651 0059  
                                         u2915 0EE4                                           u1971 0E21  
                                         u1955 0E0E                                           u1891 0DD6  
                                         u3580 04A4                                           u3820 029E  
                                         u3740 0232                                           u3660 0080  
                                         u2940 0F0A                                           u1980 0E27  
                                         u3900 0635                                           u3581 04A3  
                                         u3821 029D                                           u3725 01A0  
                                         u3661 007F                                           u2941 0F09  
                                         u1981 0E26                                           u1965 0E18  
                                         u3590 04B9                                           u3830 02A4  
                                         u3670 0088                                           u1990 07AF  
                                         u3910 0641                                           u3831 02A3  
                                         u3735 0209                                           u3671 0087  
                                         u2935 0EFE                                           u1991 07AE  
                                         u3911 0640                                           u3840 02B0  
                                         u3680 008D                                           u2960 0F18  
                                         u2880 0EAD                                           u3920 0649  
                                         u3841 02AF                                           u3745 022E  
                                         u3681 008C                                           u2961 0F17  
                                         u2881 0EAC                                           u3921 0648  
                                         u3850 02C5                                           u3770 0265  
                                         u3690 00A8                                           u2970 0F1E  
                                         u2890 0EB1                                           u3930 065B  
                                         u3595 04B5                                           u3771 0264  
                                         u3755 0244                                           u3691 00A7  
                                         u2971 0F1D                                           u2955 0F0E  
                                         u2891 0EB0                                           u3931 065A  
                                         u3860 02E9                                           u2980 0F22  
                                         u3940 0663                                           u3861 02E8  
                                         u3765 025B                                           u2981 0F21  
                                         u3941 0662                                           u3870 0303  
                                         u3790 0275                                           u2990 0F36  
                                         u3950 0673                                           u3871 0302  
                                         u3855 02C1                                           u3791 0274  
                                         u3951 0672                                           u3880 0321  
                                         u3960 067C                                           u3881 0320  
                                         u3865 02E5                                           u3785 0267  
                                         u3961 067B                                           u3970 0685  
                                         u3890 0634                                           u3875 02FF  
                                         u2995 0F32                                           u3971 0684  
                                         u3891 0632                                           u3980 069C  
                                         u3981 069B                                           u3997 05A1  
                   ?_tm1637CycleAnimationStart 0030                                           _PLLR 04D6  
                                         _TMR2 001A                                           _TMR4 0413  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _WPUC 020E                             i1__tm1637WriteByte 0CBE  
                                         _main 0527                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                write_reg@data 0033        tm1637DisplayDecimalRaw@displaySeparator 007C  
                                         start 0019                                   main@adc_conv 00D4  
                        ??i1__tm1637ReadResult 0076                                ___fldiv@new_exp 00BA  
                          ?i1__tm1637WriteByte 0076                                 i1__tm1637Start 0A53  
                   ??_TMR4_SetInterruptHandler 0032                              duty_cycle@percent 003E  
                        tm1637DisplayDecimal@i 0046                          tm1637DisplayDecimal@v 003B  
                __end_of_OSCILLATOR_Initialize 087B                                  ___fltol@sign1 00CB  
                                        ?_main 0070                                __end_of___fldiv 0527  
                              __end_of___awdiv 0E31                                __end_of___awmod 07FD  
                              __end_of___flmul 033E                                __end_of___fltol 0EA6  
                              ___awdiv@divisor 0030                                __end_of___llmod 0C22  
                                        _T2CON 001C                                          _T4CON 0415  
                                        _T2HLT 001D                                          _T4HLT 0416  
                              __end_of___lwdiv 0B92                                          _T2TMR 001A  
                                        _T2RST 001F                                          i1l432 0CBD  
                                        i1l452 0D71                                          _T4TMR 0413  
                                        i1l472 0B1C                                          i1l482 08C0  
                                        i1l466 0A82                                          _T4RST 0418  
                                        i1l469 0BD7                                          i1l582 0893  
                                        i1l479 0D17                                          i1l578 08A9  
                                        i1l499 0017                                          i1l588 0003  
                              _ramp_motor$2030 00A4                                _ramp_motor$2031 00A6  
                                        i1l886 0C21                                ___awdiv@counter 0035  
                           _PWM4_LoadDutyValue 090A                                          _TRISA 008C  
                                        _TRISB 008D                                          _TRISC 008E  
                               ?i1__tm1637Stop 0070                           ??i1__tm1637WriteByte 0077  
                              _TMR4_Initialize 08C1                       __end_of__tm1637WriteByte 0DD1  
              tm1637CycleAnimationStop@display 0030                               __end_of_TMR4_ISR 08AA  
                 ramp_motor@speed_controller_A 0044                   ramp_motor@speed_controller_B 0046  
              __end_of_tm1637DisplayDecimalRaw 0D72                                    ?_TMR4_Start 0070  
                          ?_PWM4_LoadDutyValue 0040                        __end_of_PWM3_Initialize 0859  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                         __end_ofi1__tm1637Start 0A83  
                               _rotationMapIdx 005E                                __initialization 001B  
               tm1637DisplayDecimalRaw@display 0023                                   __end_of_main 06C1  
                         ??_PWM4_LoadDutyValue 0042                        __end_of_PWM4_Initialize 0864  
                      __end_of_TMR2_Initialize 0887                    ?_INTERRUPT_InterruptManager 0070  
                                       ??_main 00CD                                    i1_write_reg 08AA  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 009D  
                                       _ADCON1 009E                                         _ADCON2 009F  
                   _EUSART_OverrunErrorHandler 0056                               ___llmod@dividend 0074  
                                       _ADRESH 009C                                         _ADRESL 009B  
                             ___awdiv@dividend 0032                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _ANSELC 018E  
                                       _BORCON 0116                                         _RC1REG 0199  
                                       _RC1STA 019D                                         i1l2200 0AE9  
                                       i1l2202 0AF7                                         _RB7PPS 0E9F  
                                       i1l2204 0AFB                                         i1l2220 0CE2  
                                       i1l2206 0B0E                                         i1l2230 0D0A  
                                       i1l2222 0CEF                                         i1l2214 0CC1  
                                       i1l2224 0CF2                                         i1l2216 0CCF  
                                       i1l2208 0CBF                                         i1l2240 0D47  
                                       i1l2232 0D1A                                         _ODCONA 028C  
                                       i1l2250 0BD8                                         i1l2226 0D03  
                                       i1l2218 0CD3                                         i1l2242 0D5A  
                                       i1l2234 0D44                                         _ODCONB 028D  
                                       _RC6PPS 0EA6                                         _ODCONC 028E  
                                       i1l2260 0C04                                         i1l2252 0BE0  
                                       i1l2228 0D06                                         i1l2244 0D5F  
                                       i1l2262 0C0C                                         i1l2254 0BE3  
                                       i1l2182 08AA                                         i1l2190 0B93  
                                       i1l2246 0D6C                                         i1l3150 000F  
                                       i1l2264 0C13                                         i1l2256 0BEE  
                                       i1l2184 0A54                                         i1l2192 0BA1  
                                       i1l2280 0CB0                                         i1l3152 0014  
                                       i1l2258 0BF2                                         i1l2266 0C19  
                                       i1l2186 0A71                                         i1l2194 0BA5  
                                       i1l2282 0CB7                                         i1l3146 0006  
                                       _RC7PPS 0EA7                                         i1l2188 0A75  
                                       i1l2196 0BB6                                         i1l2284 0CB9  
                                       i1l2276 0C6C                                         i1l3148 000A  
                                       i1l2198 0BC5                                         i1l2278 0CA5  
                                       i1l2710 0894                                         i1l2712 0896  
                                       i1l2490 0887                                         i1l2714 08A3  
                                       i1l2492 088E                                         i1l2716 08A6  
                                       u222_20 08A3                                         u222_21 08A2  
                                       u312_20 000A                                         u312_21 0009  
                                       _INLVLA 038C                                         _INLVLB 038D  
                                       _INLVLC 038E                                         u160_24 08B6  
                                       u160_25 08B5                                         u161_20 0CD3  
                                       u313_20 000F                                         u161_21 0CD2  
                                       u313_21 000E                                         u170_20 0C19  
                                       u162_20 0D17                                         u314_20 0014  
                                       u170_21 0C18                                         u162_21 0D16  
                                       u314_21 0013                                         u162_25 0D13  
                                       u410_27 0CF0                                         u163_20 0D6C  
                                       u171_20 0CB7                                         u163_21 0D6B  
                                       u171_21 0CB6                                         u163_25 0D68  
                                       u411_27 0D04                                         u412_27 0BA2  
                                       u165_20 0BE0                                         u165_21 0BDF  
                                       u413_27 0BB3                                         u166_25 0BE4  
                                       u414_27 0BC6                                         u167_20 0BF2  
                                       u167_21 0BF1                                         u415_27 0A72  
                                       u168_20 0C04                                         u168_21 0C03  
                                       u168_25 0C00                                         u416_27 0AF8  
                                       u169_25 0C0D                                         u417_27 0B0B  
                                       u188_20 088E                                         u188_21 088D  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _TX1REG 019A  
                                       _TX1STA 019E                               __end_of___xxtofl 0F53  
                              _TMR4_StartTimer 0811                                ?i1__tm1637Start 0070  
                         i1__tm1637WriteByte@b 0076                           i1__tm1637WriteByte@i 0078  
                              i1write_reg@data 0073                                         ___wmul 0975  
                                    ??___fldiv 004B                                      ??___awdiv 0034  
                                    ??___awmod 0034                                      ??___flmul 0046  
                                    ??___fltol 00C6                              __end_of_TMR4_Stop 0800  
                                    ??___llmod 0078                                      ??___lwdiv 003A  
                      __end_of_TMR4_Initialize 08D9                               ___awdiv@quotient 0037  
                              ___awmod@divisor 0030                                ___awmod@counter 0035  
                              ??i1__tm1637Stop 0076           __end_of_TMR4_DefaultInterruptHandler 0004  
                 _TMR4_DefaultInterruptHandler 0003                              ramp_motor@step_sz 00A2  
                 tm1637CycleAnimationStart@dir 0030                       ADC_GetConversion@channel 0033  
     TMR4_SetInterruptHandler@InterruptHandler 0030                               ?_PWM3_Initialize 0070  
                                 ___xxtofl@arg 003A                                _rotationMapSize 1041  
                                 ___xxtofl@exp 0039                              _SYSTEM_Initialize 08F1  
                                 ___xxtofl@val 0030                        __end_of__initialization 0037  
                           ?_SYSTEM_Initialize 0070                tm1637DisplayDecimalRaw@digitArr 007B  
                                   ___fltol@f1 00C2                                 __pcstackCOMMON 0070  
                        i1__tm1637Stop@display 0076                          __end_of_TMR4_CallBack 0894  
                                 __pidataBANK1 083D                            ??_SYSTEM_Initialize 0032  
                                    ?_TMR4_ISR 0070                                     _tm1637Init 0A24  
                             ?_TMR2_Initialize 0070                               ?_PWM4_Initialize 0070  
                  PWM4_LoadDutyValue@dutyValue 0040                                  ??__tm1637Stop 0036  
                               _OPTION_REGbits 0095                              tm1637Init@display 00E9  
                          _tm1637SetBrightness 093C                  ?_TMR4_DefaultInterruptHandler 0070  
              ??_EUSART_SetOverrunErrorHandler 0032                        __end_of_TMR4_StartTimer 0815  
                    __end_of_SYSTEM_Initialize 090A                                     __pbssBANK0 0050  
                                   __pbssBANK1 00E9                   __end_of_tm1637DisplayDecimal 1000  
                  ??_tm1637CycleAnimationStart 0031                          _TMR4_InterruptHandler 0052  
                                ramp_motor@dir 0048                              __end_of__Umul8_16 09DA  
                         ?_tm1637SetBrightness 003B                                    ramp_motor@i 00AA  
                                   __pmaintext 0527                                        ?___wmul 0030  
                                   ??_TMR4_ISR 007E                                     __pintentry 0004  
                             ?_TMR4_Initialize 0070                                      ?___xxtofl 0030  
                      __end_of_rotationMapSize 1045                                        _OSCTUNE 0098  
                                      _PWM3DCH 0618                                        _PWM3DCL 0617  
                                      _PWM4DCH 061B                                        _PWM4DCL 061A  
                                      _PWM3CON 0619                                        _PWM4CON 061C  
                            ?__tm1637WriteByte 0036                                        _SLRCONA 030C  
                                      _SLRCONB 030D                                        _SLRCONC 030E  
                     ??_EUSART_SetErrorHandler 0032                                   ??_TMR4_Start 0030  
                           ??__tm1637WriteByte 0037                            __end_of__tm1637Stop 0C6C  
                   ramp_motor@speed_controller 00AE                    __end_ofi1__tm1637ReadResult 0B1D  
          __end_of_display_animation_timer_isr 0CBE                    _display_animation_timer_isr 0C6C  
                   tm1637DisplayDecimal@i_1049 0044                          ??_tm1637SetBrightness 003C  
                     ?_tm1637DisplayDecimalRaw 007B                           _ADC_InterruptHandler 005A  
                                      ___fldiv 033E                                        ___awdiv 0DD1  
                                      ___awmod 07A9                                        ___flmul 003B  
                                      ___fltol 0E31                                        ___llmod 0BD8  
                                      ___lwdiv 0B55                                    ?_tm1637Init 003E  
                     _tm1637CycleAnimationStop 0864                      _tm1637CycleAnimationStart 09DA  
                           __end_of_TMR4_Start 0811                                        __ptext1 0A24  
                                      __ptext2 093C                                        __ptext3 0F53  
                                      __ptext4 0D72                                        __ptext5 0C22  
                                      __ptext6 0AB5                                        __ptext7 0B1D  
                                      __ptext8 08D9                                        __ptext9 07A9  
                     __tm1637WriteByte@display 003A                                   ?i1_write_reg 0070  
                        _OSCILLATOR_Initialize 086F                                      _T2CONbits 001C  
                                   ??___xxtofl 0034                               ___awmod@dividend 0032  
                                   _duty_cycle 0957                                      _T4CONbits 0415  
                     ??_PIN_MANAGER_Initialize 0030                                      _T2HLTbits 001D  
                    ?_TMR4_SetInterruptHandler 0030                                      _T4HLTbits 0416  
                                      main@dir 00D3                                        clrloop0 0832  
                                   _ramp_motor 06C1                               ?_TMR4_StartTimer 0070  
                             ??i1__tm1637Start 0076                           end_of_initialization 0037  
                                    _T2RSTbits 001F                 ??_TMR4_DefaultInterruptHandler 0070  
        __end_of_EUSART_SetOverrunErrorHandler 082B                  _EUSART_SetOverrunErrorHandler 0825  
                                    _T4RSTbits 0418                                        init_ram 0837  
                                   _segmentMap 1030                                        initloop 0838  
                       i1__tm1637Start@display 0076                              _EUSART_Initialize 09FE  
                           __tm1637WriteByte@b 0036                             __tm1637WriteByte@i 0038  
                           ?_EUSART_Initialize 0070                     i1__tm1637WriteByte@display 007A  
                                   main@F10206 00E5                                     main@F10208 00E1  
                          ??_EUSART_Initialize 0032                           _tm1637DisplayDecimal 0F53  
                                    _PORTCbits 000E                                      _TMR4_Stop 07FD  
                            __end_of_write_reg 08F1                                    __tm1637Stop 0C22  
                                ___xxtofl@sign 0038                                    ___fldiv@grs 00BC  
                                  ___fldiv@rem 00B5                                    ___flmul@grs 00A2  
                    __end_of_EUSART_Initialize 0A24                                  ?__tm1637Start 0070  
                         __tm1637Start@display 0036                     __end_of_PWM3_LoadDutyValue 093C  
                                 write_reg@pin 0030                     _EUSART_DefaultErrorHandler 0000  
                               __end_of___wmul 0995                          ?_tm1637DisplayDecimal 003B  
                               _ADC_Initialize 0845                         ?_OSCILLATOR_Initialize 0070  
                                   ?_TMR4_Stop 0070                          __end_ofi1__tm1637Stop 0BD8  
                                  ?_duty_cycle 003E                            start_initialization 001B  
                 tm1637DisplayDecimal@digitArr 0040                                    ?_ramp_motor 0044  
                        _rotationAnimationStep 005C                                 ??__tm1637Start 0036  
                              ___llmod@divisor 0070                                ___llmod@counter 0079  
                     ramp_motor@gnd_controller 00A8                 _tm1637CycleAnimationStart$1017 0032  
               ?_EUSART_SetOverrunErrorHandler 0030                              __tm1637ReadResult 0B1D  
                               i1write_reg@pin 0070                                 _TMR4_StopTimer 0815  
                   _EUSART_FramingErrorHandler 0058                                       ??___wmul 0034  
                           ?__tm1637ReadResult 0070                         _EUSART_SetErrorHandler 0819  
                                  _CCPTMRSbits 029E                         __end_of_ADC_Initialize 084E  
                                    __Umul8_16 09B6                                    __pdataBANK1 00E1  
                          ??__tm1637ReadResult 0036                                      ___fldiv@a 00AD  
                                    ___fldiv@b 00B1                          TMR4_ISR@CountCallBack 0050  
                                    ___flmul@a 0042                                      ___flmul@b 003E  
                   tm1637SetBrightness@display 003D                                      ___latbits 0002  
                                __pcstackBANK0 0020                                  __pcstackBANK1 00A0  
                    __tm1637ReadResult@display 0036                      __end_of__tm1637ReadResult 0B55  
                   ??_tm1637CycleAnimationStop 0030                       tm1637DisplayDecimalRaw@i 0021  
                       __end_of_TMR4_StopTimer 0819                                   ramp_motor@ms 004D  
                                    _main$2032 00CF                               ___lwdiv@dividend 0038  
                       _PIN_MANAGER_Initialize 0A83            display_animation_timer_isr@digitArr 002C  
             __end_of_TMR4_SetInterruptHandler 0831                                       ?___fldiv 00AD  
                                     ?___awdiv 0030                                       ?___awmod 0030  
                                     ?___flmul 003E                                       ?___fltol 00C2  
                                     ?___llmod 0070                                     ?__Umul8_16 0030  
                                 ??_tm1637Init 0044                                       ?___lwdiv 0036  
                              ?_ADC_Initialize 0070                         ??_tm1637DisplayDecimal 003F  
                 ??_INTERRUPT_InterruptManager 007E                                    ??_TMR4_Stop 0030  
                                     _BAUD1CON 019F                                  tm1637Init@CLK 0041  
                                tm1637Init@DIO 003E                               ___lwdiv@quotient 003C  
             tm1637CycleAnimationStart@display 0034              __end_of_tm1637CycleAnimationStart 09FE  
                                     _T2CLKCON 001E                                       _T4CLKCON 0417  
                  __end_of_tm1637SetBrightness 0957                             __end_of_tm1637Init 0A53  
                               ___wmul@product 0034                                       _LATAbits 010C  
       EUSART_SetErrorHandler@interruptHandler 0030                                       _LATCbits 010E  
                                    clear_ram0 0831                                       _PIE2bits 0091  
                            _eusartRxLastError 005F                                ?_TMR4_StopTimer 0070  
                                     _PIR1bits 0010                                      main@10207 00D8  
                                    main@10209 00DC                ??_EUSART_SetFramingErrorHandler 0032  
                                     _PIR2bits 0011                          ramp_motor@start_speed 0049  
            _EUSART_DefaultOverrunErrorHandler 0000                                       _TMR4_ISR 0894  
                                _TMR4_CallBack 0887                              ??_PWM3_Initialize 0030  
                  i1__tm1637ReadResult@display 0076                                     _ADCON0bits 009D  
                            ___wmul@multiplier 0030                           __end_of__tm1637Start 0AE8  
                   __end_ofi1__tm1637WriteByte 0D18                                      main@adc_v 00D6  
                                 ?__tm1637Stop 0070                           ramp_motor@curr_speed 00AC  
                                    _write_reg 08D9                              ??_TMR2_Initialize 0030  
                            ??_PWM4_Initialize 0030                    tm1637DisplayDecimal@display 0048  
                   __end_of_PWM4_LoadDutyValue 0923                              _ADC_GetConversion 0995  
                               ?_TMR4_CallBack 0070                            __tm1637Stop@display 0036  
                      ??_OSCILLATOR_Initialize 0030                                    ??__Umul8_16 0032  
                          _EUSART_ErrorHandler 0054                             ?_ADC_GetConversion 0030  
                     _TMR4_SetInterruptHandler 082B                             _PWM3_LoadDutyValue 0923  
                          ??_ADC_GetConversion 0032                                   ??_duty_cycle 0040  
                                     ___xxtofl 0EA6                                ___lwdiv@divisor 0036  
                              ___lwdiv@counter 003B                                       __ptext10 0DD1  
                                     __ptext11 0864                                       __ptext20 0B55  
                                     __ptext12 0815                                       __ptext21 0923  
                                     __ptext13 07FD                                       __ptext30 082B  
                                     __ptext22 090A                                       __ptext14 09DA  
                                     __ptext31 087B                                       __ptext23 0EA6  
                                     __ptext15 0811                                       __ptext40 0845  
                                     __ptext32 0859                                       __ptext24 0E31  
                                     __ptext16 080E                                       __ptext41 0995  
                                     __ptext33 084E                                       __ptext25 003B  
                                     __ptext17 06C1                                       __ptext50 0A53  
                                     __ptext34 0A83                                       __ptext26 09B6  
                                     __ptext18 0957                                       __ptext51 0AE8  
                                     __ptext43 0894                                       __ptext35 086F  
                                     __ptext27 033E                                       __ptext19 0975  
                                     __ptext52 08AA                                       __ptext44 0887  
                                     __ptext36 09FE                                       __ptext28 08F1  
                                     __ptext53 0BD8                                       __ptext45 0003  
                                     __ptext37 0825                                       __ptext29 08C1  
                                     __ptext46 0C6C                                       __ptext38 081F  
                                     __ptext47 0D18                                       __ptext39 0819  
                                     __ptext48 0CBE                                       __ptext49 0B92  
                          ?_PWM3_LoadDutyValue 0040                                   ??_ramp_motor 00A0  
                                   ?_write_reg 0030                              ??_TMR4_Initialize 0032  
             __end_of_tm1637CycleAnimationStop 086F                            ramp_motor@end_speed 004B  
                    __end_of_ADC_GetConversion 09B6                        ?_EUSART_SetErrorHandler 0030  
                             __tm1637WriteByte 0D72                                     _RC1STAbits 019D  
EUSART_SetOverrunErrorHandler@interruptHandler 0030                           ??_PWM3_LoadDutyValue 0042  
                           __end_of_duty_cycle 0975                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 0019                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0825                  _EUSART_SetFramingErrorHandler 081F  
                           __end_of_ramp_motor 07A9                        _tm1637DisplayDecimalRaw 0D18  
                           __end_of_segmentMap 1041                                     _INTCONbits 000B  
                          __end_of_rotationMap 1030                                       intlevel1 0000  
                 ?_display_animation_timer_isr 0070                        ?_PIN_MANAGER_Initialize 0070  
               __end_of_EUSART_SetErrorHandler 081F                               ??_ADC_Initialize 0030  
                              ??_TMR4_CallBack 007E  EUSART_SetFramingErrorHandler@interruptHandler 0030  
                  PWM3_LoadDutyValue@dutyValue 0040                              ??_TMR4_StartTimer 0030  
                                __pstringtext1 1030                                  __pstringtext2 1041  
                                __pstringtext3 1000                         __Umul8_16@multiplicand 0030  
                                ??i1_write_reg 0074                            i1__tm1637ReadResult 0AE8  
                                _displayHandle 005D                                     _TX1STAbits 019E  
                                  ??_write_reg 0034                                     _TMR4_Start 080E  
               __end_of_PIN_MANAGER_Initialize 0AB5                               ??_TMR4_StopTimer 0030  
                         __Umul8_16@multiplier 0038                  ??_display_animation_timer_isr 0024  
                                 __tm1637Start 0AB5                                _PWM3_Initialize 084E  
                         ?i1__tm1637ReadResult 0070                              __Umul8_16@product 0034  
